package org.janelia.it.workstation.gui.qc_view;

import java.awt.BorderLayout;
import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;
import org.openide.windows.TopComponent;
import org.openide.util.NbBundle.Messages;

/**
 * Top component showing the Slide View. 
 * 
 * @author <a href="mailto:rokickik@janelia.hhmi.org">Konrad Rokicki</a>
 */
//@ConvertAsProperties(
//        dtd = "-//org.janelia.it.workstation.gui.qc_view//SlideView//EN",
//        autostore = false
//)
//@TopComponent.Description(
//        preferredID = SlideViewTopComponent.PREFERRED_ID,
//        //iconBase="SET/PATH/TO/ICON/HERE",
//        persistenceType = TopComponent.PERSISTENCE_ALWAYS
//)
//@TopComponent.Registration(mode = "editor", openAtStartup = false, position = 100)
//@ActionID(category = "Window", id = "org.janelia.it.workstation.gui.qc_view.SlideViewTopComponent")
//@ActionReference(path = "Menu/Window", position = 460)
//@TopComponent.OpenActionRegistration(
//        displayName = "#CTL_SlideViewAction",
//        preferredID = SlideViewTopComponent.PREFERRED_ID
//)
//@Messages({
//    "CTL_SlideViewAction=Legacy Slide View",
//    "CTL_SlideViewTopComponent=Legacy Slide View",
//    "HINT_SlideViewTopComponent=Display LSMs with one row per slide"
//})
public final class SlideViewTopComponent extends TopComponent {

    public static final String PREFERRED_ID = "SlideViewTopComponent";
    
    private final SlideViewPanel slideViewPanel;
    
    public SlideViewTopComponent() {
        this.slideViewPanel = new SlideViewPanel();
        initComponents();
//        setName(Bundle.CTL_SlideViewTopComponent());
//        setToolTipText(Bundle.HINT_SlideViewTopComponent());
    }
    
    /**
     * This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();

        mainPanel.setLayout(new java.awt.BorderLayout());

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel mainPanel;
    // End of variables declaration//GEN-END:variables
    
    @Override
    public void componentOpened() {
        mainPanel.add(slideViewPanel, BorderLayout.CENTER);
    }

    @Override
    public void componentClosed() {
    }

    void writeProperties(java.util.Properties p) {
    }

    void readProperties(java.util.Properties p) {
    }
}
