/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.janelia.it.FlyWorkstation.gui.split_picking;

import java.awt.BorderLayout;
import java.util.concurrent.Callable;
import org.janelia.it.FlyWorkstation.gui.framework.console.ViewerManager;
import org.janelia.it.FlyWorkstation.gui.framework.viewer.IconDemoPanel;
import org.janelia.it.FlyWorkstation.gui.framework.viewer.ViewerSplitPanel;
import org.janelia.it.FlyWorkstation.model.entity.RootedEntity;
import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;
import org.openide.windows.TopComponent;
import org.openide.util.NbBundle.Messages;

/**
 * Top component which displays something.
 */
@ConvertAsProperties(
        dtd = "-//org.janelia.it.FlyWorkstation.gui.split_picking//SplitPickingLanes//EN",
        autostore = false
)
@TopComponent.Description(
        preferredID = SplitPickingLanesTopComponent.SPLIT_PICKING_LANES_TOP_COMPONENT_ID,
        //iconBase="SET/PATH/TO/ICON/HERE", 
        persistenceType = TopComponent.PERSISTENCE_ALWAYS
)
@TopComponent.Registration(mode = "editor", openAtStartup = false)
@ActionID(category = "Window", id = "org.janelia.it.FlyWorkstation.gui.split_picking.SplitPickingLanesTopComponent")
@ActionReference(path = "Menu/Window" /*, position = 333 */)
@TopComponent.OpenActionRegistration(
        displayName = "#CTL_SplitPickingLanesAction",
        preferredID = "SplitPickingLanesTopComponent"
)
@Messages({
    "CTL_SplitPickingLanesAction=SplitPickingLanes",
    "CTL_SplitPickingLanesTopComponent=Split Picking Lanes",
    "HINT_SplitPickingLanesTopComponent=Choose one image from each lane"
})
public final class SplitPickingLanesTopComponent extends TopComponent {
    public static final String SPLIT_PICKING_LANES_TOP_COMPONENT_ID = "SplitPickingLanesTopComponent";

    private ViewerManager viewerManager;
    
    public SplitPickingLanesTopComponent() {
        initComponents();
        setName(Bundle.CTL_SplitPickingLanesTopComponent());
        setToolTipText(Bundle.HINT_SplitPickingLanesTopComponent());
        viewerManager = new ViewerManager();
        jPanel1.add( viewerManager.getViewerContainer(), BorderLayout.CENTER );
    }
    
    public IconDemoPanel getMainPanel() {
        return (IconDemoPanel)viewerManager.getMainViewer(IconDemoPanel.class);
    }
    
    public IconDemoPanel getSecondaryPanel() {
        return (IconDemoPanel)viewerManager.getSecViewer(IconDemoPanel.class);
    }
    
    public void showEntityInMainViewer( RootedEntity entity ) {
        viewerManager.showEntityInMainViewer( entity );
    }
    
    public void showEntityInSecViewer( RootedEntity entity ) {
        viewerManager.showEntityInSecViewer( entity );
    }
    
    public void showEntityInMainViewer( RootedEntity entity, Callable callable ) {
        viewerManager.showEntityInMainViewer( entity, callable );
    }
    
    public void showEntityInSecViewer( RootedEntity entity, Callable callable ) {
        viewerManager.showEntityInSecViewer( entity, callable );
    }
    
    public ViewerSplitPanel getViewerSplitPanel() {
        return viewerManager.getViewerContainer();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();

        jPanel1.setLayout(new java.awt.BorderLayout());

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
    @Override
    public void componentOpened() {
        // TODO add custom code on component opening
    }

    @Override
    public void componentClosed() {
        // TODO add custom code on component closing
    }

    void writeProperties(java.util.Properties p) {
        // better to version settings since initial version as advocated at
        // http://wiki.apidesign.org/wiki/PropertyFiles
        p.setProperty("version", "1.0");
        // TODO store your settings
    }

    void readProperties(java.util.Properties p) {
        String version = p.getProperty("version");
        // TODO read your settings according to their version
    }
}
