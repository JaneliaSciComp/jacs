/*
 * Copyright (c) 2010-2011, J. Craig Venter Institute, Inc.
 *
 * This file is part of JCVI VICS.
 *
 * JCVI VICS is free software; you can redistribute it and/or modify it
 * under the terms and conditions of the Artistic License 2.0.  For
 * details, see the full text of the license in the file LICENSE.txt.  No
 * other rights are granted.  Any and all third party software rights to
 * remain with the original developer.
 *
 * JCVI VICS is distributed in the hope that it will be useful in
 * bioinformatics applications, but it is provided "AS IS" and WITHOUT
 * ANY EXPRESS OR IMPLIED WARRANTIES including but not limited to
 * implied warranties of merchantability or fitness for any particular
 * purpose.  For details, see the full text of the license in the file
 * LICENSE.txt.
 *
 * You should have received a copy of the Artistic License 2.0 along with
 * JCVI VICS.  If not, the license can be obtained from
 * "http://www.perlfoundation.org/artistic_license_2_0."
 */

//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.6-01/24/2006 06:08 PM(kohsuke)-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2006.10.27 at 12:05:11 PM EDT 
//


package org.janelia.it.jacs.server.jaxb.reference_record.impl;

public class ReferenceRecordTypeImpl implements org.janelia.it.jacs.server.jaxb.reference_record.ReferenceRecordType, com.sun.xml.bind.JAXBObject, org.janelia.it.jacs.server.jaxb.reference_record.impl.runtime.UnmarshallableObject, org.janelia.it.jacs.server.jaxb.reference_record.impl.runtime.XMLSerializable, org.janelia.it.jacs.server.jaxb.reference_record.impl.runtime.ValidatableObject {

    protected org.janelia.it.jacs.server.jaxb.reference_record.ReferenceRecordType.CombinedDataType _CombinedData;
    protected org.janelia.it.jacs.server.jaxb.reference_record.ReferenceRecordType.DataType _Data;
    protected java.lang.String _Summary;
    protected org.janelia.it.jacs.server.jaxb.reference_record.ReferenceRecordType.PublicationType _Publication;
    protected org.janelia.it.jacs.server.jaxb.reference_record.ReferenceRecordType.AuthorsType _Authors;
    protected org.janelia.it.jacs.server.jaxb.reference_record.TextType _FullText;
    protected java.lang.String _Title;
    protected java.lang.String _Abstract;
    protected org.janelia.it.jacs.server.jaxb.reference_record.TextType _SupplementalText;
    public final static java.lang.Class version = (org.janelia.it.jacs.server.jaxb.reference_record.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (org.janelia.it.jacs.server.jaxb.reference_record.ReferenceRecordType.class);
    }

    public org.janelia.it.jacs.server.jaxb.reference_record.ReferenceRecordType.CombinedDataType getCombinedData() {
        return _CombinedData;
    }

    public void setCombinedData(org.janelia.it.jacs.server.jaxb.reference_record.ReferenceRecordType.CombinedDataType value) {
        _CombinedData = value;
    }

    public org.janelia.it.jacs.server.jaxb.reference_record.ReferenceRecordType.DataType getData() {
        return _Data;
    }

    public void setData(org.janelia.it.jacs.server.jaxb.reference_record.ReferenceRecordType.DataType value) {
        _Data = value;
    }

    public java.lang.String getSummary() {
        return _Summary;
    }

    public void setSummary(java.lang.String value) {
        _Summary = value;
    }

    public org.janelia.it.jacs.server.jaxb.reference_record.ReferenceRecordType.PublicationType getPublication() {
        return _Publication;
    }

    public void setPublication(org.janelia.it.jacs.server.jaxb.reference_record.ReferenceRecordType.PublicationType value) {
        _Publication = value;
    }

    public org.janelia.it.jacs.server.jaxb.reference_record.ReferenceRecordType.AuthorsType getAuthors() {
        return _Authors;
    }

    public void setAuthors(org.janelia.it.jacs.server.jaxb.reference_record.ReferenceRecordType.AuthorsType value) {
        _Authors = value;
    }

    public org.janelia.it.jacs.server.jaxb.reference_record.TextType getFullText() {
        return _FullText;
    }

    public void setFullText(org.janelia.it.jacs.server.jaxb.reference_record.TextType value) {
        _FullText = value;
    }

    public java.lang.String getTitle() {
        return _Title;
    }

    public void setTitle(java.lang.String value) {
        _Title = value;
    }

    public java.lang.String getAbstract() {
        return _Abstract;
    }

    public void setAbstract(java.lang.String value) {
        _Abstract = value;
    }

    public org.janelia.it.jacs.server.jaxb.reference_record.TextType getSupplementalText() {
        return _SupplementalText;
    }

    public void setSupplementalText(org.janelia.it.jacs.server.jaxb.reference_record.TextType value) {
        _SupplementalText = value;
    }

    public org.janelia.it.jacs.server.jaxb.reference_record.impl.runtime.UnmarshallingEventHandler createUnmarshaller(org.janelia.it.jacs.server.jaxb.reference_record.impl.runtime.UnmarshallingContext context) {
        return new org.janelia.it.jacs.server.jaxb.reference_record.impl.ReferenceRecordTypeImpl.Unmarshaller(context);
    }

    public void serializeBody(org.janelia.it.jacs.server.jaxb.reference_record.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException {
        context.startElement("", "title");
        context.endNamespaceDecls();
        context.endAttributes();
        try {
            context.text(((java.lang.String) _Title), "Title");
        }
        catch (java.lang.Exception e) {
            org.janelia.it.jacs.server.jaxb.reference_record.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endElement();
        context.startElement("", "authors");
        context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Authors), "Authors");
        context.endNamespaceDecls();
        context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Authors), "Authors");
        context.endAttributes();
        context.childAsBody(((com.sun.xml.bind.JAXBObject) _Authors), "Authors");
        context.endElement();
        context.startElement("", "publication");
        context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Publication), "Publication");
        context.endNamespaceDecls();
        context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Publication), "Publication");
        context.endAttributes();
        context.childAsBody(((com.sun.xml.bind.JAXBObject) _Publication), "Publication");
        context.endElement();
        context.startElement("", "summary");
        context.endNamespaceDecls();
        context.endAttributes();
        try {
            context.text(((java.lang.String) _Summary), "Summary");
        }
        catch (java.lang.Exception e) {
            org.janelia.it.jacs.server.jaxb.reference_record.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endElement();
        context.startElement("", "abstract");
        context.endNamespaceDecls();
        context.endAttributes();
        try {
            context.text(((java.lang.String) _Abstract), "Abstract");
        }
        catch (java.lang.Exception e) {
            org.janelia.it.jacs.server.jaxb.reference_record.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endElement();
        context.startElement("", "full_text");
        context.childAsURIs(((com.sun.xml.bind.JAXBObject) _FullText), "FullText");
        context.endNamespaceDecls();
        context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _FullText), "FullText");
        context.endAttributes();
        context.childAsBody(((com.sun.xml.bind.JAXBObject) _FullText), "FullText");
        context.endElement();
        context.startElement("", "supplemental_text");
        context.childAsURIs(((com.sun.xml.bind.JAXBObject) _SupplementalText), "SupplementalText");
        context.endNamespaceDecls();
        context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _SupplementalText), "SupplementalText");
        context.endAttributes();
        context.childAsBody(((com.sun.xml.bind.JAXBObject) _SupplementalText), "SupplementalText");
        context.endElement();
        if (_CombinedData != null) {
            context.startElement("", "combined_data");
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _CombinedData), "CombinedData");
            context.endNamespaceDecls();
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _CombinedData), "CombinedData");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _CombinedData), "CombinedData");
            context.endElement();
        }
        context.startElement("", "data");
        context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Data), "Data");
        context.endNamespaceDecls();
        context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Data), "Data");
        context.endAttributes();
        context.childAsBody(((com.sun.xml.bind.JAXBObject) _Data), "Data");
        context.endElement();
    }

    public void serializeAttributes(org.janelia.it.jacs.server.jaxb.reference_record.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException {
    }

    public void serializeURIs(org.janelia.it.jacs.server.jaxb.reference_record.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException {
    }

    public java.lang.Class getPrimaryInterface() {
        return (org.janelia.it.jacs.server.jaxb.reference_record.ReferenceRecordType.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
                    "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
                            + "n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
                            + "mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
                            + "on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
                            + "expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000pp"
                            + "sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000"
                            + "\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001e"
                            + "com.sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclared"
                            + "AttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003pp\u0000sq\u0000~\u0000\u0000ppsr\u0000\u001bcom.sun.m"
                            + "sv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/D"
                            + "atatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair"
                            + ";xq\u0000~\u0000\u0003ppsr\u0000#com.sun.msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z"
                            + "\u0000\risAlwaysValidxr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicTyp"
                            + "e\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
                            + "\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000"
                            + "\fnamespaceUrit\u0000\u0012Ljava/lang/String;L\u0000\btypeNameq\u0000~\u0000\u001aL\u0000\nwhiteSp"
                            + "acet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 htt"
                            + "p://www.w3.org/2001/XMLSchemat\u0000\u0006stringsr\u00005com.sun.msv.dataty"
                            + "pe.xsd.WhiteSpaceProcessor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.ms"
                            + "v.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp\u0001sr\u00000com.sun."
                            + "msv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003pps"
                            + "r\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u001aL\u0000"
                            + "\fnamespaceURIq\u0000~\u0000\u001axpq\u0000~\u0000\u001eq\u0000~\u0000\u001dsr\u0000\u001dcom.sun.msv.grammar.Choice"
                            + "Exp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000"
                            + "\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\u000exq\u0000~\u0000\u0003sr\u0000\u0011java.lang.Boo"
                            + "lean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psq\u0000~\u0000\u0012ppsr\u0000\"com.sun.msv.datatype."
                            + "xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0017q\u0000~\u0000\u001dt\u0000\u0005QNamesr\u00005com.sun.msv.d"
                            + "atatype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000 q\u0000~"
                            + "\u0000#sq\u0000~\u0000$q\u0000~\u0000/q\u0000~\u0000\u001dsr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000"
                            + "\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u001aL\u0000\fnamespaceURIq\u0000~\u0000\u001axr\u0000\u001dcom.sun.msv"
                            + ".grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0004typet\u0000)http://www.w3.org/2"
                            + "001/XMLSchema-instancesr\u00000com.sun.msv.grammar.Expression$Eps"
                            + "ilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000*\u0001q\u0000~\u00009sq\u0000~\u00003t\u0000\u0005titlet\u0000\u0000"
                            + "sq\u0000~\u0000\rpp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\rpp\u0000sq\u0000~\u0000&ppsr\u0000 com.sun.msv.grammar.On"
                            + "eOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
                            + "\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003q\u0000~\u0000+psq\u0000~\u0000(q\u0000~\u0000+psr\u00002com.sun.msv.gramm"
                            + "ar.Expression$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000:q\u0000~\u0000G"
                            + "sr\u0000 com.sun.msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u00004q\u0000~\u00009sq"
                            + "\u0000~\u00003t\u0000Lorg.jcvi.camera.server.jaxb.reference_record.Referenc"
                            + "eRecordType.AuthorsTypet\u0000+http://java.sun.com/jaxb/xjc/dummy"
                            + "-elementssq\u0000~\u0000&ppsq\u0000~\u0000(q\u0000~\u0000+pq\u0000~\u0000,q\u0000~\u00005q\u0000~\u00009sq\u0000~\u00003t\u0000\u0007authors"
                            + "q\u0000~\u0000=sq\u0000~\u0000\rpp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\rpp\u0000sq\u0000~\u0000&ppsq\u0000~\u0000Bq\u0000~\u0000+psq\u0000~\u0000(q\u0000~"
                            + "\u0000+pq\u0000~\u0000Gq\u0000~\u0000Iq\u0000~\u00009sq\u0000~\u00003t\u0000Porg.jcvi.camera.server.jaxb.refer"
                            + "ence_record.ReferenceRecordType.PublicationTypeq\u0000~\u0000Lsq\u0000~\u0000&pp"
                            + "sq\u0000~\u0000(q\u0000~\u0000+pq\u0000~\u0000,q\u0000~\u00005q\u0000~\u00009sq\u0000~\u00003t\u0000\u000bpublicationq\u0000~\u0000=sq\u0000~\u0000\rpp"
                            + "\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u0015sq\u0000~\u0000&ppsq\u0000~\u0000(q\u0000~\u0000+pq\u0000~\u0000,q\u0000~\u00005q\u0000~\u00009sq\u0000~\u00003t\u0000\u0007su"
                            + "mmaryq\u0000~\u0000=sq\u0000~\u0000\rpp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u0015sq\u0000~\u0000&ppsq\u0000~\u0000(q\u0000~\u0000+pq\u0000~\u0000,q\u0000~"
                            + "\u00005q\u0000~\u00009sq\u0000~\u00003t\u0000\babstractq\u0000~\u0000=sq\u0000~\u0000\rpp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\rpp\u0000sq\u0000~\u0000"
                            + "&ppsq\u0000~\u0000Bq\u0000~\u0000+psq\u0000~\u0000(q\u0000~\u0000+pq\u0000~\u0000Gq\u0000~\u0000Iq\u0000~\u00009sq\u0000~\u00003t\u00005org.jcvi."
                            + "camera.server.jaxb.reference_record.TextTypeq\u0000~\u0000Lsq\u0000~\u0000&ppsq\u0000"
                            + "~\u0000(q\u0000~\u0000+pq\u0000~\u0000,q\u0000~\u00005q\u0000~\u00009sq\u0000~\u00003t\u0000\tfull_textq\u0000~\u0000=sq\u0000~\u0000\rpp\u0000sq\u0000~"
                            + "\u0000\u0000ppsq\u0000~\u0000\rpp\u0000sq\u0000~\u0000&ppsq\u0000~\u0000Bq\u0000~\u0000+psq\u0000~\u0000(q\u0000~\u0000+pq\u0000~\u0000Gq\u0000~\u0000Iq\u0000~\u00009"
                            + "sq\u0000~\u00003q\u0000~\u0000pq\u0000~\u0000Lsq\u0000~\u0000&ppsq\u0000~\u0000(q\u0000~\u0000+pq\u0000~\u0000,q\u0000~\u00005q\u0000~\u00009sq\u0000~\u00003t\u0000\u0011"
                            + "supplemental_textq\u0000~\u0000=sq\u0000~\u0000&ppsq\u0000~\u0000\rq\u0000~\u0000+p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\rpp\u0000"
                            + "sq\u0000~\u0000&ppsq\u0000~\u0000Bq\u0000~\u0000+psq\u0000~\u0000(q\u0000~\u0000+pq\u0000~\u0000Gq\u0000~\u0000Iq\u0000~\u00009sq\u0000~\u00003t\u0000Qorg."
                            + "jcvi.camera.server.jaxb.reference_record.ReferenceRecordType"
                            + ".CombinedDataTypeq\u0000~\u0000Lsq\u0000~\u0000&ppsq\u0000~\u0000(q\u0000~\u0000+pq\u0000~\u0000,q\u0000~\u00005q\u0000~\u00009sq\u0000"
                            + "~\u00003t\u0000\rcombined_dataq\u0000~\u0000=q\u0000~\u00009sq\u0000~\u0000\rpp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\rpp\u0000sq\u0000~\u0000"
                            + "&ppsq\u0000~\u0000Bq\u0000~\u0000+psq\u0000~\u0000(q\u0000~\u0000+pq\u0000~\u0000Gq\u0000~\u0000Iq\u0000~\u00009sq\u0000~\u00003t\u0000Iorg.jcvi."
                            + "camera.server.jaxb.reference_record.ReferenceRecordType.Data"
                            + "Typeq\u0000~\u0000Lsq\u0000~\u0000&ppsq\u0000~\u0000(q\u0000~\u0000+pq\u0000~\u0000,q\u0000~\u00005q\u0000~\u00009sq\u0000~\u00003t\u0000\u0004dataq\u0000~"
                            + "\u0000=sr\u0000\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTab"
                            + "let\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-co"
                            + "m.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005cou"
                            + "ntB\u0000\rstreamVersionL\u0000\u0006parentt\u0000$Lcom/sun/msv/grammar/Expressio"
                            + "nPool;xp\u0000\u0000\u0000\'\u0001pq\u0000~\u0000\u0080q\u0000~\u0000\nq\u0000~\u0000?q\u0000~\u0000Rq\u0000~\u0000jq\u0000~\u0000vq\u0000~\u0000\u0082q\u0000~\u0000\u008eq\u0000~\u0000\u0011q"
                            + "\u0000~\u0000^q\u0000~\u0000dq\u0000~\u0000Dq\u0000~\u0000Uq\u0000~\u0000mq\u0000~\u0000yq\u0000~\u0000\u0085q\u0000~\u0000\u0091q\u0000~\u0000\u0006q\u0000~\u0000\fq\u0000~\u0000\bq\u0000~\u0000\u0007q"
                            + "\u0000~\u0000\tq\u0000~\u0000\u0005q\u0000~\u0000Aq\u0000~\u0000Tq\u0000~\u0000lq\u0000~\u0000xq\u0000~\u0000\'q\u0000~\u0000Mq\u0000~\u0000Yq\u0000~\u0000_q\u0000~\u0000eq\u0000~\u0000qq"
                            + "\u0000~\u0000|q\u0000~\u0000\u0084q\u0000~\u0000\u0089q\u0000~\u0000\u0090q\u0000~\u0000\u0095q\u0000~\u0000\u000bx"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public static class AuthorsTypeImpl implements org.janelia.it.jacs.server.jaxb.reference_record.ReferenceRecordType.AuthorsType, com.sun.xml.bind.JAXBObject, org.janelia.it.jacs.server.jaxb.reference_record.impl.runtime.UnmarshallableObject, org.janelia.it.jacs.server.jaxb.reference_record.impl.runtime.XMLSerializable, org.janelia.it.jacs.server.jaxb.reference_record.impl.runtime.ValidatableObject {

        protected com.sun.xml.bind.util.ListImpl _Name;
        public final static java.lang.Class version = (org.janelia.it.jacs.server.jaxb.reference_record.impl.JAXBVersion.class);
        private static com.sun.msv.grammar.Grammar schemaFragment;

        private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
            return (org.janelia.it.jacs.server.jaxb.reference_record.ReferenceRecordType.AuthorsType.class);
        }

        protected com.sun.xml.bind.util.ListImpl _getName() {
            if (_Name == null) {
                _Name = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
            }
            return _Name;
        }

        public java.util.List getName() {
            return _getName();
        }

        public org.janelia.it.jacs.server.jaxb.reference_record.impl.runtime.UnmarshallingEventHandler createUnmarshaller(org.janelia.it.jacs.server.jaxb.reference_record.impl.runtime.UnmarshallingContext context) {
            return new org.janelia.it.jacs.server.jaxb.reference_record.impl.ReferenceRecordTypeImpl.AuthorsTypeImpl.Unmarshaller(context);
        }

        public void serializeBody(org.janelia.it.jacs.server.jaxb.reference_record.impl.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException {
            int idx1 = 0;
            final int len1 = ((_Name == null) ? 0 : _Name.size());
            while (idx1 != len1) {
                context.startElement("", "name");
                int idx_0 = idx1;
                try {
                    idx_0 += 1;
                }
                catch (java.lang.Exception e) {
                    org.janelia.it.jacs.server.jaxb.reference_record.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endNamespaceDecls();
                int idx_1 = idx1;
                try {
                    idx_1 += 1;
                }
                catch (java.lang.Exception e) {
                    org.janelia.it.jacs.server.jaxb.reference_record.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endAttributes();
                try {
                    context.text(((java.lang.String) _Name.get(idx1++)), "Name");
                }
                catch (java.lang.Exception e) {
                    org.janelia.it.jacs.server.jaxb.reference_record.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endElement();
            }
        }

        public void serializeAttributes(org.janelia.it.jacs.server.jaxb.reference_record.impl.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException {
            int idx1 = 0;
            final int len1 = ((_Name == null) ? 0 : _Name.size());
            while (idx1 != len1) {
                try {
                    idx1 += 1;
                }
                catch (java.lang.Exception e) {
                    org.janelia.it.jacs.server.jaxb.reference_record.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
            }
        }

        public void serializeURIs(org.janelia.it.jacs.server.jaxb.reference_record.impl.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException {
            int idx1 = 0;
            final int len1 = ((_Name == null) ? 0 : _Name.size());
            while (idx1 != len1) {
                try {
                    idx1 += 1;
                }
                catch (java.lang.Exception e) {
                    org.janelia.it.jacs.server.jaxb.reference_record.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
            }
        }

        public java.lang.Class getPrimaryInterface() {
            return (org.janelia.it.jacs.server.jaxb.reference_record.ReferenceRecordType.AuthorsType.class);
        }

        public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
            if (schemaFragment == null) {
                schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
                        "\u00ac\u00ed\u0000\u0005sr\u0000 com.sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.s"
                                + "un.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expt\u0000 Lcom/sun/msv/gram"
                                + "mar/Expression;xr\u0000\u001ecom.sun.msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002"
                                + "L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000bexpandedExpq\u0000"
                                + "~\u0000\u0002xpppsr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
                                + "\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.m"
                                + "sv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttribute"
                                + "sL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003pp\u0000sr\u0000\u001fcom.sun.msv.grammar.Sequen"
                                + "ceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002"
                                + "L\u0000\u0004exp1q\u0000~\u0000\u0002L\u0000\u0004exp2q\u0000~\u0000\u0002xq\u0000~\u0000\u0003ppsr\u0000\u001bcom.sun.msv.grammar.Data"
                                + "Exp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exce"
                                + "ptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003ppsr\u0000#co"
                                + "m.sun.msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValid"
                                + "xr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000"
                                + "%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun"
                                + ".msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000"
                                + "\u0012Ljava/lang/String;L\u0000\btypeNameq\u0000~\u0000\u0015L\u0000\nwhiteSpacet\u0000.Lcom/sun/"
                                + "msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/"
                                + "2001/XMLSchemat\u0000\u0006stringsr\u00005com.sun.msv.datatype.xsd.WhiteSpa"
                                + "ceProcessor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd."
                                + "WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp\u0001sr\u00000com.sun.msv.grammar.Exp"
                                + "ression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003ppsr\u0000\u001bcom.sun.msv."
                                + "util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0015L\u0000\fnamespaceURIq\u0000"
                                + "~\u0000\u0015xpq\u0000~\u0000\u0019q\u0000~\u0000\u0018sr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000x"
                                + "q\u0000~\u0000\u000bppsr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003exp"
                                + "q\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\u0007xq\u0000~\u0000\u0003sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001"
                                + "Z\u0000\u0005valuexp\u0000psq\u0000~\u0000\rppsr\u0000\"com.sun.msv.datatype.xsd.QnameType\u0000\u0000"
                                + "\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0012q\u0000~\u0000\u0018t\u0000\u0005QNamesr\u00005com.sun.msv.datatype.xsd.Whi"
                                + "teSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u001bq\u0000~\u0000\u001esq\u0000~\u0000\u001fq\u0000~\u0000*q\u0000"
                                + "~\u0000\u0018sr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tloca"
                                + "lNameq\u0000~\u0000\u0015L\u0000\fnamespaceURIq\u0000~\u0000\u0015xr\u0000\u001dcom.sun.msv.grammar.NameCl"
                                + "ass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0004typet\u0000)http://www.w3.org/2001/XMLSchema-i"
                                + "nstancesr\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0000"
                                + "\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000%\u0001q\u0000~\u00004sq\u0000~\u0000.t\u0000\u0004namet\u0000\u0000sr\u0000\"com.sun.msv."
                                + "grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/"
                                + "grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar."
                                + "ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersion"
                                + "L\u0000\u0006parentt\u0000$Lcom/sun/msv/grammar/ExpressionPool;xp\u0000\u0000\u0000\u0003\u0001pq\u0000~\u0000"
                                + "\fq\u0000~\u0000\"q\u0000~\u0000\u0005x"));
            }
            return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
        }

        public class Unmarshaller
                extends org.janelia.it.jacs.server.jaxb.reference_record.impl.runtime.AbstractUnmarshallingEventHandlerImpl {


            public Unmarshaller(org.janelia.it.jacs.server.jaxb.reference_record.impl.runtime.UnmarshallingContext context) {
                super(context, "----");
            }

            protected Unmarshaller(org.janelia.it.jacs.server.jaxb.reference_record.impl.runtime.UnmarshallingContext context, int startState) {
                this(context);
                state = startState;
            }

            public java.lang.Object owner() {
                return org.janelia.it.jacs.server.jaxb.reference_record.impl.ReferenceRecordTypeImpl.AuthorsTypeImpl.this;
            }

            public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                    throws org.xml.sax.SAXException {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case 3:
                            if (("name" == ___local) && ("" == ___uri)) {
                                context.pushAttributes(__atts, true);
                                state = 1;
                                return;
                            }
                            revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                            return;
                        case 0:
                            if (("name" == ___local) && ("" == ___uri)) {
                                context.pushAttributes(__atts, true);
                                state = 1;
                                return;
                            }
                            break;
                    }
                    super.enterElement(___uri, ___local, ___qname, __atts);
                    break;
                }
            }

            public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case 2:
                            if (("name" == ___local) && ("" == ___uri)) {
                                context.popAttributes();
                                state = 3;
                                return;
                            }
                            break;
                        case 3:
                            revertToParentFromLeaveElement(___uri, ___local, ___qname);
                            return;
                    }
                    super.leaveElement(___uri, ___local, ___qname);
                    break;
                }
            }

            public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case 3:
                            revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                            return;
                    }
                    super.enterAttribute(___uri, ___local, ___qname);
                    break;
                }
            }

            public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case 3:
                            revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                            return;
                    }
                    super.leaveAttribute(___uri, ___local, ___qname);
                    break;
                }
            }

            public void handleText(final java.lang.String value)
                    throws org.xml.sax.SAXException {
                int attIdx;
                outer:
                while (true) {
                    try {
                        switch (state) {
                            case 3:
                                revertToParentFromText(value);
                                return;
                            case 1:
                                state = 2;
                                eatText1(value);
                                return;
                        }
                    }
                    catch (java.lang.RuntimeException e) {
                        handleUnexpectedTextException(value, e);
                    }
                    break;
                }
            }

            private void eatText1(final java.lang.String value)
                    throws org.xml.sax.SAXException {
                try {
                    _getName().add(value);
                }
                catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

        }

    }

    public static class CombinedDataTypeImpl implements org.janelia.it.jacs.server.jaxb.reference_record.ReferenceRecordType.CombinedDataType, com.sun.xml.bind.JAXBObject, org.janelia.it.jacs.server.jaxb.reference_record.impl.runtime.UnmarshallableObject, org.janelia.it.jacs.server.jaxb.reference_record.impl.runtime.XMLSerializable, org.janelia.it.jacs.server.jaxb.reference_record.impl.runtime.ValidatableObject {

        protected org.janelia.it.jacs.server.jaxb.reference_record.FileType _File;
        public final static java.lang.Class version = (org.janelia.it.jacs.server.jaxb.reference_record.impl.JAXBVersion.class);
        private static com.sun.msv.grammar.Grammar schemaFragment;

        private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
            return (org.janelia.it.jacs.server.jaxb.reference_record.ReferenceRecordType.CombinedDataType.class);
        }

        public org.janelia.it.jacs.server.jaxb.reference_record.FileType getFile() {
            return _File;
        }

        public void setFile(org.janelia.it.jacs.server.jaxb.reference_record.FileType value) {
            _File = value;
        }

        public org.janelia.it.jacs.server.jaxb.reference_record.impl.runtime.UnmarshallingEventHandler createUnmarshaller(org.janelia.it.jacs.server.jaxb.reference_record.impl.runtime.UnmarshallingContext context) {
            return new org.janelia.it.jacs.server.jaxb.reference_record.impl.ReferenceRecordTypeImpl.CombinedDataTypeImpl.Unmarshaller(context);
        }

        public void serializeBody(org.janelia.it.jacs.server.jaxb.reference_record.impl.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException {
            if (_File != null) {
                if (_File instanceof javax.xml.bind.Element) {
                    context.childAsBody(((com.sun.xml.bind.JAXBObject) _File), "File");
                }
                else {
                    context.startElement("", "file");
                    context.childAsURIs(((com.sun.xml.bind.JAXBObject) _File), "File");
                    context.endNamespaceDecls();
                    context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _File), "File");
                    context.endAttributes();
                    context.childAsBody(((com.sun.xml.bind.JAXBObject) _File), "File");
                    context.endElement();
                }
            }
        }

        public void serializeAttributes(org.janelia.it.jacs.server.jaxb.reference_record.impl.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException {
            if (_File != null) {
                if (_File instanceof javax.xml.bind.Element) {
                    context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _File), "File");
                }
            }
        }

        public void serializeURIs(org.janelia.it.jacs.server.jaxb.reference_record.impl.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException {
            if (_File != null) {
                if (_File instanceof javax.xml.bind.Element) {
                    context.childAsURIs(((com.sun.xml.bind.JAXBObject) _File), "File");
                }
            }
        }

        public java.lang.Class getPrimaryInterface() {
            return (org.janelia.it.jacs.server.jaxb.reference_record.ReferenceRecordType.CombinedDataType.class);
        }

        public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
            if (schemaFragment == null) {
                schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
                        "\u00ac\u00ed\u0000\u0005sr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun."
                                + "msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gramm"
                                + "ar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expression"
                                + "\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000bex"
                                + "pandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005v"
                                + "aluexp\u0000psr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
                                + "\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun."
                                + "msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttribut"
                                + "esL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003q\u0000~\u0000\bp\u0000sq\u0000~\u0000\u0000ppsr\u0000 com.sun.msv.g"
                                + "rammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryE"
                                + "xp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003q\u0000~\u0000\bpsr\u0000 com.sun.msv.grammar."
                                + "AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\nxq\u0000~\u0000\u0003q\u0000~"
                                + "\u0000\bpsr\u00002com.sun.msv.grammar.Expression$AnyStringExpression\u0000\u0000\u0000"
                                + "\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000\u0007\u0001q\u0000~\u0000\u0014sr\u0000 com.sun.msv.grammar.AnyNameCla"
                                + "ss\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xps"
                                + "r\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
                                + "\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000\u0015q\u0000~\u0000\u001asr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000"
                                + "\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/String;L\u0000\fnamespaceURIq\u0000~\u0000"
                                + "\u001cxq\u0000~\u0000\u0017t\u00001org.jcvi.camera.server.jaxb.reference_record.Filet"
                                + "\u0000+http://java.sun.com/jaxb/xjc/dummy-elementssq\u0000~\u0000\tq\u0000~\u0000\bp\u0000sr"
                                + "\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsq\u0000~\u0000\tpp"
                                + "\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u000eq\u0000~\u0000\bpsq\u0000~\u0000\u0011q\u0000~\u0000\bpq\u0000~\u0000\u0014q\u0000~\u0000\u0018q\u0000~\u0000\u001asq\u0000~\u0000\u001bt\u00005org"
                                + ".jcvi.camera.server.jaxb.reference_record.FileTypeq\u0000~\u0000\u001fsq\u0000~\u0000"
                                + "\u0000ppsq\u0000~\u0000\u0011q\u0000~\u0000\bpsr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002"
                                + "dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001d"
                                + "Lcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003ppsr\u0000\"com.sun.msv.datatyp"
                                + "e.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.Built"
                                + "inAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.Concrete"
                                + "Type\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000"
                                + "\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000\u001cL\u0000\btypeNameq\u0000~\u0000\u001cL\u0000\nwhiteSpacet\u0000"
                                + ".Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://w"
                                + "ww.w3.org/2001/XMLSchemat\u0000\u0005QNamesr\u00005com.sun.msv.datatype.xsd"
                                + ".WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.data"
                                + "type.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.gra"
                                + "mmar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003ppsr\u0000\u001bcom."
                                + "sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u001cL\u0000\fnamesp"
                                + "aceURIq\u0000~\u0000\u001cxpq\u0000~\u00006q\u0000~\u00005sq\u0000~\u0000\u001bt\u0000\u0004typet\u0000)http://www.w3.org/200"
                                + "1/XMLSchema-instanceq\u0000~\u0000\u001asq\u0000~\u0000\u001bt\u0000\u0004filet\u0000\u0000q\u0000~\u0000\u001asr\u0000\"com.sun.ms"
                                + "v.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/ms"
                                + "v/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.gramma"
                                + "r.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersi"
                                + "onL\u0000\u0006parentt\u0000$Lcom/sun/msv/grammar/ExpressionPool;xp\u0000\u0000\u0000\b\u0001pq\u0000"
                                + "~\u0000\u0005q\u0000~\u0000\"q\u0000~\u0000\u0006q\u0000~\u0000\u0010q\u0000~\u0000%q\u0000~\u0000\rq\u0000~\u0000$q\u0000~\u0000)x"));
            }
            return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
        }

        public class Unmarshaller
                extends org.janelia.it.jacs.server.jaxb.reference_record.impl.runtime.AbstractUnmarshallingEventHandlerImpl {


            public Unmarshaller(org.janelia.it.jacs.server.jaxb.reference_record.impl.runtime.UnmarshallingContext context) {
                super(context, "----");
            }

            protected Unmarshaller(org.janelia.it.jacs.server.jaxb.reference_record.impl.runtime.UnmarshallingContext context, int startState) {
                this(context);
                state = startState;
            }

            public java.lang.Object owner() {
                return org.janelia.it.jacs.server.jaxb.reference_record.impl.ReferenceRecordTypeImpl.CombinedDataTypeImpl.this;
            }

            public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                    throws org.xml.sax.SAXException {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case 3:
                            revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                            return;
                        case 1:
                            attIdx = context.getAttribute("", "description");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                                return;
                            }
                            break;
                        case 0:
                            if (("file" == ___local) && ("" == ___uri)) {
                                _File = ((org.janelia.it.jacs.server.jaxb.reference_record.impl.FileImpl) spawnChildFromEnterElement((org.janelia.it.jacs.server.jaxb.reference_record.impl.FileImpl.class), 3, ___uri, ___local, ___qname, __atts));
                                return;
                            }
                            if (("file" == ___local) && ("" == ___uri)) {
                                context.pushAttributes(__atts, false);
                                state = 1;
                                return;
                            }
                            state = 3;
                            continue outer;
                    }
                    super.enterElement(___uri, ___local, ___qname, __atts);
                    break;
                }
            }

            public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case 3:
                            revertToParentFromLeaveElement(___uri, ___local, ___qname);
                            return;
                        case 1:
                            attIdx = context.getAttribute("", "description");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                                return;
                            }
                            break;
                        case 0:
                            state = 3;
                            continue outer;
                        case 2:
                            if (("file" == ___local) && ("" == ___uri)) {
                                context.popAttributes();
                                state = 3;
                                return;
                            }
                            break;
                    }
                    super.leaveElement(___uri, ___local, ___qname);
                    break;
                }
            }

            public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case 3:
                            revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                            return;
                        case 1:
                            if (("description" == ___local) && ("" == ___uri)) {
                                _File = ((org.janelia.it.jacs.server.jaxb.reference_record.impl.FileTypeImpl) spawnChildFromEnterAttribute((org.janelia.it.jacs.server.jaxb.reference_record.impl.FileTypeImpl.class), 2, ___uri, ___local, ___qname));
                                return;
                            }
                            break;
                        case 0:
                            state = 3;
                            continue outer;
                    }
                    super.enterAttribute(___uri, ___local, ___qname);
                    break;
                }
            }

            public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case 3:
                            revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                            return;
                        case 1:
                            attIdx = context.getAttribute("", "description");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                                return;
                            }
                            break;
                        case 0:
                            state = 3;
                            continue outer;
                    }
                    super.leaveAttribute(___uri, ___local, ___qname);
                    break;
                }
            }

            public void handleText(final java.lang.String value)
                    throws org.xml.sax.SAXException {
                int attIdx;
                outer:
                while (true) {
                    try {
                        switch (state) {
                            case 3:
                                revertToParentFromText(value);
                                return;
                            case 1:
                                attIdx = context.getAttribute("", "description");
                                if (attIdx >= 0) {
                                    context.consumeAttribute(attIdx);
                                    context.getCurrentHandler().text(value);
                                    return;
                                }
                                break;
                            case 0:
                                state = 3;
                                continue outer;
                        }
                    }
                    catch (java.lang.RuntimeException e) {
                        handleUnexpectedTextException(value, e);
                    }
                    break;
                }
            }

        }

    }

    public static class DataTypeImpl implements org.janelia.it.jacs.server.jaxb.reference_record.ReferenceRecordType.DataType, com.sun.xml.bind.JAXBObject, org.janelia.it.jacs.server.jaxb.reference_record.impl.runtime.UnmarshallableObject, org.janelia.it.jacs.server.jaxb.reference_record.impl.runtime.XMLSerializable, org.janelia.it.jacs.server.jaxb.reference_record.impl.runtime.ValidatableObject {

        protected java.lang.String _PathPrefix;
        protected com.sun.xml.bind.util.ListImpl _SubdirOrFile;
        public final static java.lang.Class version = (org.janelia.it.jacs.server.jaxb.reference_record.impl.JAXBVersion.class);
        private static com.sun.msv.grammar.Grammar schemaFragment;

        private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
            return (org.janelia.it.jacs.server.jaxb.reference_record.ReferenceRecordType.DataType.class);
        }

        public java.lang.String getPathPrefix() {
            return _PathPrefix;
        }

        public void setPathPrefix(java.lang.String value) {
            _PathPrefix = value;
        }

        protected com.sun.xml.bind.util.ListImpl _getSubdirOrFile() {
            if (_SubdirOrFile == null) {
                _SubdirOrFile = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
            }
            return _SubdirOrFile;
        }

        public java.util.List getSubdirOrFile() {
            return _getSubdirOrFile();
        }

        public org.janelia.it.jacs.server.jaxb.reference_record.impl.runtime.UnmarshallingEventHandler createUnmarshaller(org.janelia.it.jacs.server.jaxb.reference_record.impl.runtime.UnmarshallingContext context) {
            return new org.janelia.it.jacs.server.jaxb.reference_record.impl.ReferenceRecordTypeImpl.DataTypeImpl.Unmarshaller(context);
        }

        public void serializeBody(org.janelia.it.jacs.server.jaxb.reference_record.impl.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException {
            int idx2 = 0;
            final int len2 = ((_SubdirOrFile == null) ? 0 : _SubdirOrFile.size());
            while (idx2 != len2) {
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _SubdirOrFile.get(idx2++)), "SubdirOrFile");
            }
        }

        public void serializeAttributes(org.janelia.it.jacs.server.jaxb.reference_record.impl.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException {
            int idx2 = 0;
            final int len2 = ((_SubdirOrFile == null) ? 0 : _SubdirOrFile.size());
            context.startAttribute("", "path_prefix");
            try {
                context.text(((java.lang.String) _PathPrefix), "PathPrefix");
            }
            catch (java.lang.Exception e) {
                org.janelia.it.jacs.server.jaxb.reference_record.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
            while (idx2 != len2) {
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _SubdirOrFile.get(idx2++)), "SubdirOrFile");
            }
        }

        public void serializeURIs(org.janelia.it.jacs.server.jaxb.reference_record.impl.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException {
            int idx2 = 0;
            final int len2 = ((_SubdirOrFile == null) ? 0 : _SubdirOrFile.size());
            while (idx2 != len2) {
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _SubdirOrFile.get(idx2++)), "SubdirOrFile");
            }
        }

        public java.lang.Class getPrimaryInterface() {
            return (org.janelia.it.jacs.server.jaxb.reference_record.ReferenceRecordType.DataType.class);
        }

        public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
            if (schemaFragment == null) {
                schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
                        "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
                                + "n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
                                + "mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
                                + "on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
                                + "expandedExpq\u0000~\u0000\u0002xpppsr\u0000 com.sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000"
                                + "\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000"
                                + "\u0002xq\u0000~\u0000\u0003ppsr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001p"
                                + "psr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tna"
                                + "meClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.gra"
                                + "mmar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fco"
                                + "ntentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003pp\u0000sq\u0000~\u0000\tppsq\u0000~\u0000\u0006sr\u0000\u0011java.lang.Boolean\u00cd"
                                + " r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000"
                                + "\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\fxq\u0000~\u0000\u0003q\u0000~\u0000\u0012psr\u00002com.sun"
                                + ".msv.grammar.Expression$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003"
                                + "sq\u0000~\u0000\u0011\u0001q\u0000~\u0000\u0016sr\u0000 com.sun.msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000x"
                                + "r\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv"
                                + ".grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000\u0017q"
                                + "\u0000~\u0000\u001csr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tloc"
                                + "alNamet\u0000\u0012Ljava/lang/String;L\u0000\fnamespaceURIq\u0000~\u0000\u001exq\u0000~\u0000\u0019t\u00003org."
                                + "jcvi.camera.server.jaxb.reference_record.Subdirt\u0000+http://jav"
                                + "a.sun.com/jaxb/xjc/dummy-elementssq\u0000~\u0000\u000bpp\u0000sq\u0000~\u0000\tppsq\u0000~\u0000\u0006q\u0000~\u0000"
                                + "\u0012psq\u0000~\u0000\u0013q\u0000~\u0000\u0012pq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u00001org.jcvi.camera.server"
                                + ".jaxb.reference_record.Fileq\u0000~\u0000!sq\u0000~\u0000\u0013ppsr\u0000\u001bcom.sun.msv.gram"
                                + "mar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype"
                                + ";L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003"
                                + "ppsr\u0000%com.sun.msv.datatype.xsd.PatternFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001[\u0000\bpat"
                                + "ternst\u0000\u0013[Ljava/lang/String;xr\u0000;com.sun.msv.datatype.xsd.Data"
                                + "TypeWithLexicalConstraintFacetT\u0090\u001c>\u001azb\u00ea\u0002\u0000\u0000xr\u0000*com.sun.msv.dat"
                                + "atype.xsd.DataTypeWithFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFacetFixedZ\u0000\u0012need"
                                + "ValueCheckFlagL\u0000\bbaseTypet\u0000)Lcom/sun/msv/datatype/xsd/XSData"
                                + "typeImpl;L\u0000\fconcreteTypet\u0000\'Lcom/sun/msv/datatype/xsd/Concret"
                                + "eType;L\u0000\tfacetNameq\u0000~\u0000\u001exr\u0000\'com.sun.msv.datatype.xsd.XSDataty"
                                + "peImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000\u001eL\u0000\btypeNameq\u0000~\u0000\u001eL\u0000\nwhit"
                                + "eSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000\u0000"
                                + "t\u0000\u0010path_prefix_typesr\u00005com.sun.msv.datatype.xsd.WhiteSpacePr"
                                + "ocessor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.Whit"
                                + "eSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp\u0000\u0000sr\u0000#com.sun.msv.datatype.xsd.S"
                                + "tringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxr\u0000*com.sun.msv.datatype"
                                + ".xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xs"
                                + "d.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u00003t\u0000 http://www.w3.org/2001/XML"
                                + "Schemat\u0000\u0006stringq\u0000~\u0000:\u0001q\u0000~\u0000>t\u0000\u0007patternur\u0000\u0013[Ljava.lang.String;\u00ad"
                                + "\u00d2V\u00e7\u00e9\u001d{G\u0002\u0000\u0000xp\u0000\u0000\u0000\u0001t\u0000\u000e[./a-zA-Z0-9]*sr\u00000com.sun.msv.grammar.Exp"
                                + "ression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003ppsr\u0000\u001bcom.sun.msv."
                                + "util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u001eL\u0000\fnamespaceURIq\u0000"
                                + "~\u0000\u001expq\u0000~\u00007q\u0000~\u00006sq\u0000~\u0000\u001dt\u0000\u000bpath_prefixq\u0000~\u00006sr\u0000\"com.sun.msv.gram"
                                + "mar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/gram"
                                + "mar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.Expr"
                                + "essionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006p"
                                + "arentt\u0000$Lcom/sun/msv/grammar/ExpressionPool;xp\u0000\u0000\u0000\u0007\u0001pq\u0000~\u0000\nq\u0000~"
                                + "\u0000\u0005q\u0000~\u0000\u0010q\u0000~\u0000$q\u0000~\u0000\bq\u0000~\u0000\u000fq\u0000~\u0000#x"));
            }
            return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
        }

        public class Unmarshaller
                extends org.janelia.it.jacs.server.jaxb.reference_record.impl.runtime.AbstractUnmarshallingEventHandlerImpl {


            public Unmarshaller(org.janelia.it.jacs.server.jaxb.reference_record.impl.runtime.UnmarshallingContext context) {
                super(context, "-----");
            }

            protected Unmarshaller(org.janelia.it.jacs.server.jaxb.reference_record.impl.runtime.UnmarshallingContext context, int startState) {
                this(context);
                state = startState;
            }

            public java.lang.Object owner() {
                return org.janelia.it.jacs.server.jaxb.reference_record.impl.ReferenceRecordTypeImpl.DataTypeImpl.this;
            }

            public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                    throws org.xml.sax.SAXException {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case 0:
                            attIdx = context.getAttribute("", "path_prefix");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 3;
                                eatText1(v);
                                continue outer;
                            }
                            break;
                        case 4:
                            if (("subdir" == ___local) && ("" == ___uri)) {
                                _getSubdirOrFile().add(((org.janelia.it.jacs.server.jaxb.reference_record.impl.SubdirImpl) spawnChildFromEnterElement((org.janelia.it.jacs.server.jaxb.reference_record.impl.SubdirImpl.class), 4, ___uri, ___local, ___qname, __atts)));
                                return;
                            }
                            if (("file" == ___local) && ("" == ___uri)) {
                                _getSubdirOrFile().add(((org.janelia.it.jacs.server.jaxb.reference_record.impl.FileImpl) spawnChildFromEnterElement((org.janelia.it.jacs.server.jaxb.reference_record.impl.FileImpl.class), 4, ___uri, ___local, ___qname, __atts)));
                                return;
                            }
                            revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                            return;
                        case 3:
                            if (("subdir" == ___local) && ("" == ___uri)) {
                                _getSubdirOrFile().add(((org.janelia.it.jacs.server.jaxb.reference_record.impl.SubdirImpl) spawnChildFromEnterElement((org.janelia.it.jacs.server.jaxb.reference_record.impl.SubdirImpl.class), 4, ___uri, ___local, ___qname, __atts)));
                                return;
                            }
                            if (("file" == ___local) && ("" == ___uri)) {
                                _getSubdirOrFile().add(((org.janelia.it.jacs.server.jaxb.reference_record.impl.FileImpl) spawnChildFromEnterElement((org.janelia.it.jacs.server.jaxb.reference_record.impl.FileImpl.class), 4, ___uri, ___local, ___qname, __atts)));
                                return;
                            }
                            break;
                    }
                    super.enterElement(___uri, ___local, ___qname, __atts);
                    break;
                }
            }

            private void eatText1(final java.lang.String value)
                    throws org.xml.sax.SAXException {
                try {
                    _PathPrefix = value;
                }
                catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

            public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case 0:
                            attIdx = context.getAttribute("", "path_prefix");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 3;
                                eatText1(v);
                                continue outer;
                            }
                            break;
                        case 4:
                            revertToParentFromLeaveElement(___uri, ___local, ___qname);
                            return;
                    }
                    super.leaveElement(___uri, ___local, ___qname);
                    break;
                }
            }

            public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case 0:
                            if (("path_prefix" == ___local) && ("" == ___uri)) {
                                state = 1;
                                return;
                            }
                            break;
                        case 4:
                            revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                            return;
                    }
                    super.enterAttribute(___uri, ___local, ___qname);
                    break;
                }
            }

            public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case 0:
                            attIdx = context.getAttribute("", "path_prefix");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 3;
                                eatText1(v);
                                continue outer;
                            }
                            break;
                        case 2:
                            if (("path_prefix" == ___local) && ("" == ___uri)) {
                                state = 3;
                                return;
                            }
                            break;
                        case 4:
                            revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                            return;
                    }
                    super.leaveAttribute(___uri, ___local, ___qname);
                    break;
                }
            }

            public void handleText(final java.lang.String value)
                    throws org.xml.sax.SAXException {
                int attIdx;
                outer:
                while (true) {
                    try {
                        switch (state) {
                            case 1:
                                state = 2;
                                eatText1(value);
                                return;
                            case 0:
                                attIdx = context.getAttribute("", "path_prefix");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    state = 3;
                                    eatText1(v);
                                    continue outer;
                                }
                                break;
                            case 4:
                                revertToParentFromText(value);
                                return;
                        }
                    }
                    catch (java.lang.RuntimeException e) {
                        handleUnexpectedTextException(value, e);
                    }
                    break;
                }
            }

        }

    }

    public static class PublicationTypeImpl implements org.janelia.it.jacs.server.jaxb.reference_record.ReferenceRecordType.PublicationType, com.sun.xml.bind.JAXBObject, org.janelia.it.jacs.server.jaxb.reference_record.impl.runtime.UnmarshallableObject, org.janelia.it.jacs.server.jaxb.reference_record.impl.runtime.XMLSerializable, org.janelia.it.jacs.server.jaxb.reference_record.impl.runtime.ValidatableObject {

        protected org.janelia.it.jacs.server.jaxb.reference_record.ReferenceRecordType.PublicationType.JournalType _Journal;
        protected org.janelia.it.jacs.server.jaxb.reference_record.ReferenceRecordType.PublicationType.DateType _Date;
        public final static java.lang.Class version = (org.janelia.it.jacs.server.jaxb.reference_record.impl.JAXBVersion.class);
        private static com.sun.msv.grammar.Grammar schemaFragment;

        private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
            return (org.janelia.it.jacs.server.jaxb.reference_record.ReferenceRecordType.PublicationType.class);
        }

        public org.janelia.it.jacs.server.jaxb.reference_record.ReferenceRecordType.PublicationType.JournalType getJournal() {
            return _Journal;
        }

        public void setJournal(org.janelia.it.jacs.server.jaxb.reference_record.ReferenceRecordType.PublicationType.JournalType value) {
            _Journal = value;
        }

        public org.janelia.it.jacs.server.jaxb.reference_record.ReferenceRecordType.PublicationType.DateType getDate() {
            return _Date;
        }

        public void setDate(org.janelia.it.jacs.server.jaxb.reference_record.ReferenceRecordType.PublicationType.DateType value) {
            _Date = value;
        }

        public org.janelia.it.jacs.server.jaxb.reference_record.impl.runtime.UnmarshallingEventHandler createUnmarshaller(org.janelia.it.jacs.server.jaxb.reference_record.impl.runtime.UnmarshallingContext context) {
            return new org.janelia.it.jacs.server.jaxb.reference_record.impl.ReferenceRecordTypeImpl.PublicationTypeImpl.Unmarshaller(context);
        }

        public void serializeBody(org.janelia.it.jacs.server.jaxb.reference_record.impl.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException {
            context.startElement("", "date");
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Date), "Date");
            context.endNamespaceDecls();
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Date), "Date");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _Date), "Date");
            context.endElement();
            context.startElement("", "journal");
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Journal), "Journal");
            context.endNamespaceDecls();
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Journal), "Journal");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _Journal), "Journal");
            context.endElement();
        }

        public void serializeAttributes(org.janelia.it.jacs.server.jaxb.reference_record.impl.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException {
        }

        public void serializeURIs(org.janelia.it.jacs.server.jaxb.reference_record.impl.runtime.XMLSerializer context)
                throws org.xml.sax.SAXException {
        }

        public java.lang.Class getPrimaryInterface() {
            return (org.janelia.it.jacs.server.jaxb.reference_record.ReferenceRecordType.PublicationType.class);
        }

        public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
            if (schemaFragment == null) {
                schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
                        "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
                                + "n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
                                + "mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
                                + "on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
                                + "expandedExpq\u0000~\u0000\u0002xpppsr\u0000\'com.sun.msv.grammar.trex.ElementPatt"
                                + "ern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;"
                                + "xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndecl"
                                + "aredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003pp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0006pp\u0000"
                                + "sr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsr\u0000 com."
                                + "sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.gramm"
                                + "ar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003sr\u0000\u0011java.lang.Boolean"
                                + "\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000 com.sun.msv.grammar.AttributeExp\u0000"
                                + "\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\u0007xq\u0000~\u0000\u0003q\u0000~\u0000\u0012psr\u00002com.su"
                                + "n.msv.grammar.Expression$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000"
                                + "\u0003sq\u0000~\u0000\u0011\u0001q\u0000~\u0000\u0016sr\u0000 com.sun.msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000"
                                + "xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.ms"
                                + "v.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000\u0017"
                                + "q\u0000~\u0000\u001csr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlo"
                                + "calNamet\u0000\u0012Ljava/lang/String;L\u0000\fnamespaceURIq\u0000~\u0000\u001exq\u0000~\u0000\u0019t\u0000Yorg"
                                + ".jcvi.camera.server.jaxb.reference_record.ReferenceRecordTyp"
                                + "e.PublicationType.DateTypet\u0000+http://java.sun.com/jaxb/xjc/du"
                                + "mmy-elementssq\u0000~\u0000\fppsq\u0000~\u0000\u0013q\u0000~\u0000\u0012psr\u0000\u001bcom.sun.msv.grammar.Data"
                                + "Exp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exce"
                                + "ptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003ppsr\u0000\"co"
                                + "m.sun.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv.d"
                                + "atatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.data"
                                + "type.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd"
                                + ".XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000\u001eL\u0000\btypeNameq\u0000~"
                                + "\u0000\u001eL\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProces"
                                + "sor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0005QNamesr\u00005com.sun"
                                + ".msv.datatype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000"
                                + ",com.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr"
                                + "\u00000com.sun.msv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
                                + "\u0000xq\u0000~\u0000\u0003ppsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalN"
                                + "ameq\u0000~\u0000\u001eL\u0000\fnamespaceURIq\u0000~\u0000\u001expq\u0000~\u0000/q\u0000~\u0000.sq\u0000~\u0000\u001dt\u0000\u0004typet\u0000)http"
                                + "://www.w3.org/2001/XMLSchema-instanceq\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u0000\u0004datet\u0000\u0000sq"
                                + "\u0000~\u0000\u0006pp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0006pp\u0000sq\u0000~\u0000\fppsq\u0000~\u0000\u000eq\u0000~\u0000\u0012psq\u0000~\u0000\u0013q\u0000~\u0000\u0012pq\u0000~\u0000"
                                + "\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u0000\\org.janelia.it.jacs.server.jaxb.reference_re"
                                + "cord.ReferenceRecordType.PublicationType.JournalTypeq\u0000~\u0000!sq\u0000"
                                + "~\u0000\fppsq\u0000~\u0000\u0013q\u0000~\u0000\u0012pq\u0000~\u0000\'q\u0000~\u00007q\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u0000\u0007journalq\u0000~\u0000<sr\u0000\"com"
                                + ".sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom"
                                + "/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv"
                                + ".grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstre"
                                + "amVersionL\u0000\u0006parentt\u0000$Lcom/sun/msv/grammar/ExpressionPool;xp\u0000"
                                + "\u0000\u0000\t\u0001pq\u0000~\u0000\nq\u0000~\u0000>q\u0000~\u0000\u0010q\u0000~\u0000Aq\u0000~\u0000\u0005q\u0000~\u0000\rq\u0000~\u0000@q\u0000~\u0000\"q\u0000~\u0000Ex"));
            }
            return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
        }

        public static class DateTypeImpl implements org.janelia.it.jacs.server.jaxb.reference_record.ReferenceRecordType.PublicationType.DateType, com.sun.xml.bind.JAXBObject, org.janelia.it.jacs.server.jaxb.reference_record.impl.runtime.UnmarshallableObject, org.janelia.it.jacs.server.jaxb.reference_record.impl.runtime.XMLSerializable, org.janelia.it.jacs.server.jaxb.reference_record.impl.runtime.ValidatableObject {

            protected java.lang.String _Day;
            protected java.lang.String _Year;
            protected java.lang.String _Month;
            public final static java.lang.Class version = (org.janelia.it.jacs.server.jaxb.reference_record.impl.JAXBVersion.class);
            private static com.sun.msv.grammar.Grammar schemaFragment;

            private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
                return (org.janelia.it.jacs.server.jaxb.reference_record.ReferenceRecordType.PublicationType.DateType.class);
            }

            public java.lang.String getDay() {
                return _Day;
            }

            public void setDay(java.lang.String value) {
                _Day = value;
            }

            public java.lang.String getYear() {
                return _Year;
            }

            public void setYear(java.lang.String value) {
                _Year = value;
            }

            public java.lang.String getMonth() {
                return _Month;
            }

            public void setMonth(java.lang.String value) {
                _Month = value;
            }

            public org.janelia.it.jacs.server.jaxb.reference_record.impl.runtime.UnmarshallingEventHandler createUnmarshaller(org.janelia.it.jacs.server.jaxb.reference_record.impl.runtime.UnmarshallingContext context) {
                return new org.janelia.it.jacs.server.jaxb.reference_record.impl.ReferenceRecordTypeImpl.PublicationTypeImpl.DateTypeImpl.Unmarshaller(context);
            }

            public void serializeBody(org.janelia.it.jacs.server.jaxb.reference_record.impl.runtime.XMLSerializer context)
                    throws org.xml.sax.SAXException {
            }

            public void serializeAttributes(org.janelia.it.jacs.server.jaxb.reference_record.impl.runtime.XMLSerializer context)
                    throws org.xml.sax.SAXException {
                context.startAttribute("", "day");
                try {
                    context.text(((java.lang.String) _Day), "Day");
                }
                catch (java.lang.Exception e) {
                    org.janelia.it.jacs.server.jaxb.reference_record.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endAttribute();
                context.startAttribute("", "month");
                try {
                    context.text(((java.lang.String) _Month), "Month");
                }
                catch (java.lang.Exception e) {
                    org.janelia.it.jacs.server.jaxb.reference_record.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endAttribute();
                context.startAttribute("", "year");
                try {
                    context.text(((java.lang.String) _Year), "Year");
                }
                catch (java.lang.Exception e) {
                    org.janelia.it.jacs.server.jaxb.reference_record.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endAttribute();
            }

            public void serializeURIs(org.janelia.it.jacs.server.jaxb.reference_record.impl.runtime.XMLSerializer context)
                    throws org.xml.sax.SAXException {
            }

            public java.lang.Class getPrimaryInterface() {
                return (org.janelia.it.jacs.server.jaxb.reference_record.ReferenceRecordType.PublicationType.DateType.class);
            }

            public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
                if (schemaFragment == null) {
                    schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
                            "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
                                    + "n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
                                    + "mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
                                    + "on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
                                    + "expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsr\u0000 com.sun.msv.grammar.Attribut"
                                    + "eExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/gramma"
                                    + "r/NameClass;xq\u0000~\u0000\u0003ppsr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
                                    + "\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004na"
                                    + "met\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003ppsr\u0000#com.sun.msv.da"
                                    + "tatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxr\u0000*com.sun."
                                    + "msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv"
                                    + ".datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatyp"
                                    + "e.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/"
                                    + "String;L\u0000\btypeNameq\u0000~\u0000\u0012L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype"
                                    + "/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/2001/XMLSche"
                                    + "mat\u0000\u0006stringsr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$"
                                    + "Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpacePr"
                                    + "ocessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp\u0001sr\u00000com.sun.msv.grammar.Expression$Null"
                                    + "SetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003ppsr\u0000\u001bcom.sun.msv.util.StringP"
                                    + "air\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0012L\u0000\fnamespaceURIq\u0000~\u0000\u0012xpq\u0000~\u0000\u0016q\u0000"
                                    + "~\u0000\u0015sr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tloca"
                                    + "lNameq\u0000~\u0000\u0012L\u0000\fnamespaceURIq\u0000~\u0000\u0012xr\u0000\u001dcom.sun.msv.grammar.NameCl"
                                    + "ass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0003dayt\u0000\u0000sq\u0000~\u0000\u0007ppq\u0000~\u0000\rsq\u0000~\u0000\u001et\u0000\u0005monthq\u0000~\u0000\"sq\u0000"
                                    + "~\u0000\u0007ppq\u0000~\u0000\rsq\u0000~\u0000\u001et\u0000\u0004yearq\u0000~\u0000\"sr\u0000\"com.sun.msv.grammar.Expressi"
                                    + "onPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/Expressi"
                                    + "onPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$C"
                                    + "losedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006parentt\u0000$Lcom"
                                    + "/sun/msv/grammar/ExpressionPool;xp\u0000\u0000\u0000\u0002\u0001pq\u0000~\u0000\u0005q\u0000~\u0000\u0006x"));
                }
                return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
            }

            public class Unmarshaller
                    extends org.janelia.it.jacs.server.jaxb.reference_record.impl.runtime.AbstractUnmarshallingEventHandlerImpl {


                public Unmarshaller(org.janelia.it.jacs.server.jaxb.reference_record.impl.runtime.UnmarshallingContext context) {
                    super(context, "----------");
                }

                protected Unmarshaller(org.janelia.it.jacs.server.jaxb.reference_record.impl.runtime.UnmarshallingContext context, int startState) {
                    this(context);
                    state = startState;
                }

                public java.lang.Object owner() {
                    return org.janelia.it.jacs.server.jaxb.reference_record.impl.ReferenceRecordTypeImpl.PublicationTypeImpl.DateTypeImpl.this;
                }

                public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                        throws org.xml.sax.SAXException {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case 9:
                                revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                                return;
                            case 6:
                                attIdx = context.getAttribute("", "year");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    state = 9;
                                    eatText1(v);
                                    continue outer;
                                }
                                break;
                            case 3:
                                attIdx = context.getAttribute("", "month");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    state = 6;
                                    eatText2(v);
                                    continue outer;
                                }
                                break;
                            case 0:
                                attIdx = context.getAttribute("", "day");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    state = 3;
                                    eatText3(v);
                                    continue outer;
                                }
                                break;
                        }
                        super.enterElement(___uri, ___local, ___qname, __atts);
                        break;
                    }
                }

                private void eatText1(final java.lang.String value)
                        throws org.xml.sax.SAXException {
                    try {
                        _Year = value;
                    }
                    catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText2(final java.lang.String value)
                        throws org.xml.sax.SAXException {
                    try {
                        _Month = value;
                    }
                    catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText3(final java.lang.String value)
                        throws org.xml.sax.SAXException {
                    try {
                        _Day = value;
                    }
                    catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                        throws org.xml.sax.SAXException {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case 9:
                                revertToParentFromLeaveElement(___uri, ___local, ___qname);
                                return;
                            case 6:
                                attIdx = context.getAttribute("", "year");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    state = 9;
                                    eatText1(v);
                                    continue outer;
                                }
                                break;
                            case 3:
                                attIdx = context.getAttribute("", "month");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    state = 6;
                                    eatText2(v);
                                    continue outer;
                                }
                                break;
                            case 0:
                                attIdx = context.getAttribute("", "day");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    state = 3;
                                    eatText3(v);
                                    continue outer;
                                }
                                break;
                        }
                        super.leaveElement(___uri, ___local, ___qname);
                        break;
                    }
                }

                public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                        throws org.xml.sax.SAXException {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case 9:
                                revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                                return;
                            case 6:
                                if (("year" == ___local) && ("" == ___uri)) {
                                    state = 7;
                                    return;
                                }
                                break;
                            case 3:
                                if (("month" == ___local) && ("" == ___uri)) {
                                    state = 4;
                                    return;
                                }
                                break;
                            case 0:
                                if (("day" == ___local) && ("" == ___uri)) {
                                    state = 1;
                                    return;
                                }
                                break;
                        }
                        super.enterAttribute(___uri, ___local, ___qname);
                        break;
                    }
                }

                public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                        throws org.xml.sax.SAXException {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case 9:
                                revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                                return;
                            case 2:
                                if (("day" == ___local) && ("" == ___uri)) {
                                    state = 3;
                                    return;
                                }
                                break;
                            case 6:
                                attIdx = context.getAttribute("", "year");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    state = 9;
                                    eatText1(v);
                                    continue outer;
                                }
                                break;
                            case 8:
                                if (("year" == ___local) && ("" == ___uri)) {
                                    state = 9;
                                    return;
                                }
                                break;
                            case 5:
                                if (("month" == ___local) && ("" == ___uri)) {
                                    state = 6;
                                    return;
                                }
                                break;
                            case 3:
                                attIdx = context.getAttribute("", "month");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    state = 6;
                                    eatText2(v);
                                    continue outer;
                                }
                                break;
                            case 0:
                                attIdx = context.getAttribute("", "day");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    state = 3;
                                    eatText3(v);
                                    continue outer;
                                }
                                break;
                        }
                        super.leaveAttribute(___uri, ___local, ___qname);
                        break;
                    }
                }

                public void handleText(final java.lang.String value)
                        throws org.xml.sax.SAXException {
                    int attIdx;
                    outer:
                    while (true) {
                        try {
                            switch (state) {
                                case 9:
                                    revertToParentFromText(value);
                                    return;
                                case 7:
                                    state = 8;
                                    eatText1(value);
                                    return;
                                case 6:
                                    attIdx = context.getAttribute("", "year");
                                    if (attIdx >= 0) {
                                        final java.lang.String v = context.eatAttribute(attIdx);
                                        state = 9;
                                        eatText1(v);
                                        continue outer;
                                    }
                                    break;
                                case 1:
                                    state = 2;
                                    eatText3(value);
                                    return;
                                case 4:
                                    state = 5;
                                    eatText2(value);
                                    return;
                                case 3:
                                    attIdx = context.getAttribute("", "month");
                                    if (attIdx >= 0) {
                                        final java.lang.String v = context.eatAttribute(attIdx);
                                        state = 6;
                                        eatText2(v);
                                        continue outer;
                                    }
                                    break;
                                case 0:
                                    attIdx = context.getAttribute("", "day");
                                    if (attIdx >= 0) {
                                        final java.lang.String v = context.eatAttribute(attIdx);
                                        state = 3;
                                        eatText3(v);
                                        continue outer;
                                    }
                                    break;
                            }
                        }
                        catch (java.lang.RuntimeException e) {
                            handleUnexpectedTextException(value, e);
                        }
                        break;
                    }
                }

            }

        }

        public static class JournalTypeImpl implements org.janelia.it.jacs.server.jaxb.reference_record.ReferenceRecordType.PublicationType.JournalType, com.sun.xml.bind.JAXBObject, org.janelia.it.jacs.server.jaxb.reference_record.impl.runtime.UnmarshallableObject, org.janelia.it.jacs.server.jaxb.reference_record.impl.runtime.XMLSerializable, org.janelia.it.jacs.server.jaxb.reference_record.impl.runtime.ValidatableObject {

            protected java.lang.String _Issue;
            protected java.lang.String _Volume;
            protected java.lang.String _Name;
            protected java.lang.String _Page;
            public final static java.lang.Class version = (org.janelia.it.jacs.server.jaxb.reference_record.impl.JAXBVersion.class);
            private static com.sun.msv.grammar.Grammar schemaFragment;

            private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
                return (org.janelia.it.jacs.server.jaxb.reference_record.ReferenceRecordType.PublicationType.JournalType.class);
            }

            public java.lang.String getIssue() {
                return _Issue;
            }

            public void setIssue(java.lang.String value) {
                _Issue = value;
            }

            public java.lang.String getVolume() {
                return _Volume;
            }

            public void setVolume(java.lang.String value) {
                _Volume = value;
            }

            public java.lang.String getName() {
                return _Name;
            }

            public void setName(java.lang.String value) {
                _Name = value;
            }

            public java.lang.String getPage() {
                return _Page;
            }

            public void setPage(java.lang.String value) {
                _Page = value;
            }

            public org.janelia.it.jacs.server.jaxb.reference_record.impl.runtime.UnmarshallingEventHandler createUnmarshaller(org.janelia.it.jacs.server.jaxb.reference_record.impl.runtime.UnmarshallingContext context) {
                return new org.janelia.it.jacs.server.jaxb.reference_record.impl.ReferenceRecordTypeImpl.PublicationTypeImpl.JournalTypeImpl.Unmarshaller(context);
            }

            public void serializeBody(org.janelia.it.jacs.server.jaxb.reference_record.impl.runtime.XMLSerializer context)
                    throws org.xml.sax.SAXException {
            }

            public void serializeAttributes(org.janelia.it.jacs.server.jaxb.reference_record.impl.runtime.XMLSerializer context)
                    throws org.xml.sax.SAXException {
                context.startAttribute("", "issue");
                try {
                    context.text(((java.lang.String) _Issue), "Issue");
                }
                catch (java.lang.Exception e) {
                    org.janelia.it.jacs.server.jaxb.reference_record.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endAttribute();
                context.startAttribute("", "name");
                try {
                    context.text(((java.lang.String) _Name), "Name");
                }
                catch (java.lang.Exception e) {
                    org.janelia.it.jacs.server.jaxb.reference_record.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endAttribute();
                context.startAttribute("", "page");
                try {
                    context.text(((java.lang.String) _Page), "Page");
                }
                catch (java.lang.Exception e) {
                    org.janelia.it.jacs.server.jaxb.reference_record.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endAttribute();
                context.startAttribute("", "volume");
                try {
                    context.text(((java.lang.String) _Volume), "Volume");
                }
                catch (java.lang.Exception e) {
                    org.janelia.it.jacs.server.jaxb.reference_record.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endAttribute();
            }

            public void serializeURIs(org.janelia.it.jacs.server.jaxb.reference_record.impl.runtime.XMLSerializer context)
                    throws org.xml.sax.SAXException {
            }

            public java.lang.Class getPrimaryInterface() {
                return (org.janelia.it.jacs.server.jaxb.reference_record.ReferenceRecordType.PublicationType.JournalType.class);
            }

            public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
                if (schemaFragment == null) {
                    schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
                            "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
                                    + "n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
                                    + "mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
                                    + "on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
                                    + "expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsr\u0000 com.sun.msv.grammar."
                                    + "AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClasst\u0000\u001fLcom/sun/ms"
                                    + "v/grammar/NameClass;xq\u0000~\u0000\u0003ppsr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000"
                                    + "\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000"
                                    + "~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003ppsr\u0000#com.su"
                                    + "n.msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxr\u0000*"
                                    + "com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com"
                                    + ".sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv"
                                    + ".datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Lja"
                                    + "va/lang/String;L\u0000\btypeNameq\u0000~\u0000\u0013L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/"
                                    + "datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/2001"
                                    + "/XMLSchemat\u0000\u0006stringsr\u00005com.sun.msv.datatype.xsd.WhiteSpacePr"
                                    + "ocessor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.Whit"
                                    + "eSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp\u0001sr\u00000com.sun.msv.grammar.Express"
                                    + "ion$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003ppsr\u0000\u001bcom.sun.msv.util"
                                    + ".StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0013L\u0000\fnamespaceURIq\u0000~\u0000\u0013x"
                                    + "pq\u0000~\u0000\u0017q\u0000~\u0000\u0016sr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
                                    + "\u0002L\u0000\tlocalNameq\u0000~\u0000\u0013L\u0000\fnamespaceURIq\u0000~\u0000\u0013xr\u0000\u001dcom.sun.msv.gramma"
                                    + "r.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0005issuet\u0000\u0000sq\u0000~\u0000\bppq\u0000~\u0000\u000esq\u0000~\u0000\u001ft\u0000\u0004nam"
                                    + "eq\u0000~\u0000#sq\u0000~\u0000\bppq\u0000~\u0000\u000esq\u0000~\u0000\u001ft\u0000\u0004pageq\u0000~\u0000#sq\u0000~\u0000\bppq\u0000~\u0000\u000esq\u0000~\u0000\u001ft\u0000\u0006v"
                                    + "olumeq\u0000~\u0000#sr\u0000\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L"
                                    + "\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;"
                                    + "xpsr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003"
                                    + "\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006parentt\u0000$Lcom/sun/msv/grammar/E"
                                    + "xpressionPool;xp\u0000\u0000\u0000\u0003\u0001pq\u0000~\u0000\u0007q\u0000~\u0000\u0006q\u0000~\u0000\u0005x"));
                }
                return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
            }

            public class Unmarshaller
                    extends org.janelia.it.jacs.server.jaxb.reference_record.impl.runtime.AbstractUnmarshallingEventHandlerImpl {


                public Unmarshaller(org.janelia.it.jacs.server.jaxb.reference_record.impl.runtime.UnmarshallingContext context) {
                    super(context, "-------------");
                }

                protected Unmarshaller(org.janelia.it.jacs.server.jaxb.reference_record.impl.runtime.UnmarshallingContext context, int startState) {
                    this(context);
                    state = startState;
                }

                public java.lang.Object owner() {
                    return org.janelia.it.jacs.server.jaxb.reference_record.impl.ReferenceRecordTypeImpl.PublicationTypeImpl.JournalTypeImpl.this;
                }

                public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                        throws org.xml.sax.SAXException {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case 9:
                                attIdx = context.getAttribute("", "volume");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    state = 12;
                                    eatText1(v);
                                    continue outer;
                                }
                                break;
                            case 0:
                                attIdx = context.getAttribute("", "issue");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    state = 3;
                                    eatText2(v);
                                    continue outer;
                                }
                                break;
                            case 3:
                                attIdx = context.getAttribute("", "name");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    state = 6;
                                    eatText3(v);
                                    continue outer;
                                }
                                break;
                            case 6:
                                attIdx = context.getAttribute("", "page");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    state = 9;
                                    eatText4(v);
                                    continue outer;
                                }
                                break;
                            case 12:
                                revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                                return;
                        }
                        super.enterElement(___uri, ___local, ___qname, __atts);
                        break;
                    }
                }

                private void eatText1(final java.lang.String value)
                        throws org.xml.sax.SAXException {
                    try {
                        _Volume = value;
                    }
                    catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText2(final java.lang.String value)
                        throws org.xml.sax.SAXException {
                    try {
                        _Issue = value;
                    }
                    catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText3(final java.lang.String value)
                        throws org.xml.sax.SAXException {
                    try {
                        _Name = value;
                    }
                    catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                private void eatText4(final java.lang.String value)
                        throws org.xml.sax.SAXException {
                    try {
                        _Page = value;
                    }
                    catch (java.lang.Exception e) {
                        handleParseConversionException(e);
                    }
                }

                public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                        throws org.xml.sax.SAXException {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case 9:
                                attIdx = context.getAttribute("", "volume");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    state = 12;
                                    eatText1(v);
                                    continue outer;
                                }
                                break;
                            case 0:
                                attIdx = context.getAttribute("", "issue");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    state = 3;
                                    eatText2(v);
                                    continue outer;
                                }
                                break;
                            case 3:
                                attIdx = context.getAttribute("", "name");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    state = 6;
                                    eatText3(v);
                                    continue outer;
                                }
                                break;
                            case 6:
                                attIdx = context.getAttribute("", "page");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    state = 9;
                                    eatText4(v);
                                    continue outer;
                                }
                                break;
                            case 12:
                                revertToParentFromLeaveElement(___uri, ___local, ___qname);
                                return;
                        }
                        super.leaveElement(___uri, ___local, ___qname);
                        break;
                    }
                }

                public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                        throws org.xml.sax.SAXException {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case 9:
                                if (("volume" == ___local) && ("" == ___uri)) {
                                    state = 10;
                                    return;
                                }
                                break;
                            case 0:
                                if (("issue" == ___local) && ("" == ___uri)) {
                                    state = 1;
                                    return;
                                }
                                break;
                            case 3:
                                if (("name" == ___local) && ("" == ___uri)) {
                                    state = 4;
                                    return;
                                }
                                break;
                            case 6:
                                if (("page" == ___local) && ("" == ___uri)) {
                                    state = 7;
                                    return;
                                }
                                break;
                            case 12:
                                revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                                return;
                        }
                        super.enterAttribute(___uri, ___local, ___qname);
                        break;
                    }
                }

                public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                        throws org.xml.sax.SAXException {
                    int attIdx;
                    outer:
                    while (true) {
                        switch (state) {
                            case 2:
                                if (("issue" == ___local) && ("" == ___uri)) {
                                    state = 3;
                                    return;
                                }
                                break;
                            case 9:
                                attIdx = context.getAttribute("", "volume");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    state = 12;
                                    eatText1(v);
                                    continue outer;
                                }
                                break;
                            case 5:
                                if (("name" == ___local) && ("" == ___uri)) {
                                    state = 6;
                                    return;
                                }
                                break;
                            case 0:
                                attIdx = context.getAttribute("", "issue");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    state = 3;
                                    eatText2(v);
                                    continue outer;
                                }
                                break;
                            case 3:
                                attIdx = context.getAttribute("", "name");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    state = 6;
                                    eatText3(v);
                                    continue outer;
                                }
                                break;
                            case 6:
                                attIdx = context.getAttribute("", "page");
                                if (attIdx >= 0) {
                                    final java.lang.String v = context.eatAttribute(attIdx);
                                    state = 9;
                                    eatText4(v);
                                    continue outer;
                                }
                                break;
                            case 8:
                                if (("page" == ___local) && ("" == ___uri)) {
                                    state = 9;
                                    return;
                                }
                                break;
                            case 11:
                                if (("volume" == ___local) && ("" == ___uri)) {
                                    state = 12;
                                    return;
                                }
                                break;
                            case 12:
                                revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                                return;
                        }
                        super.leaveAttribute(___uri, ___local, ___qname);
                        break;
                    }
                }

                public void handleText(final java.lang.String value)
                        throws org.xml.sax.SAXException {
                    int attIdx;
                    outer:
                    while (true) {
                        try {
                            switch (state) {
                                case 9:
                                    attIdx = context.getAttribute("", "volume");
                                    if (attIdx >= 0) {
                                        final java.lang.String v = context.eatAttribute(attIdx);
                                        state = 12;
                                        eatText1(v);
                                        continue outer;
                                    }
                                    break;
                                case 10:
                                    state = 11;
                                    eatText1(value);
                                    return;
                                case 0:
                                    attIdx = context.getAttribute("", "issue");
                                    if (attIdx >= 0) {
                                        final java.lang.String v = context.eatAttribute(attIdx);
                                        state = 3;
                                        eatText2(v);
                                        continue outer;
                                    }
                                    break;
                                case 3:
                                    attIdx = context.getAttribute("", "name");
                                    if (attIdx >= 0) {
                                        final java.lang.String v = context.eatAttribute(attIdx);
                                        state = 6;
                                        eatText3(v);
                                        continue outer;
                                    }
                                    break;
                                case 6:
                                    attIdx = context.getAttribute("", "page");
                                    if (attIdx >= 0) {
                                        final java.lang.String v = context.eatAttribute(attIdx);
                                        state = 9;
                                        eatText4(v);
                                        continue outer;
                                    }
                                    break;
                                case 1:
                                    state = 2;
                                    eatText2(value);
                                    return;
                                case 4:
                                    state = 5;
                                    eatText3(value);
                                    return;
                                case 7:
                                    state = 8;
                                    eatText4(value);
                                    return;
                                case 12:
                                    revertToParentFromText(value);
                                    return;
                            }
                        }
                        catch (java.lang.RuntimeException e) {
                            handleUnexpectedTextException(value, e);
                        }
                        break;
                    }
                }

            }

        }

        public class Unmarshaller
                extends org.janelia.it.jacs.server.jaxb.reference_record.impl.runtime.AbstractUnmarshallingEventHandlerImpl {


            public Unmarshaller(org.janelia.it.jacs.server.jaxb.reference_record.impl.runtime.UnmarshallingContext context) {
                super(context, "-------");
            }

            protected Unmarshaller(org.janelia.it.jacs.server.jaxb.reference_record.impl.runtime.UnmarshallingContext context, int startState) {
                this(context);
                state = startState;
            }

            public java.lang.Object owner() {
                return org.janelia.it.jacs.server.jaxb.reference_record.impl.ReferenceRecordTypeImpl.PublicationTypeImpl.this;
            }

            public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                    throws org.xml.sax.SAXException {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case 1:
                            attIdx = context.getAttribute("", "day");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                                return;
                            }
                            break;
                        case 3:
                            if (("journal" == ___local) && ("" == ___uri)) {
                                context.pushAttributes(__atts, false);
                                state = 4;
                                return;
                            }
                            break;
                        case 4:
                            attIdx = context.getAttribute("", "issue");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                                return;
                            }
                            break;
                        case 6:
                            revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                            return;
                        case 0:
                            if (("date" == ___local) && ("" == ___uri)) {
                                context.pushAttributes(__atts, false);
                                state = 1;
                                return;
                            }
                            break;
                    }
                    super.enterElement(___uri, ___local, ___qname, __atts);
                    break;
                }
            }

            public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case 1:
                            attIdx = context.getAttribute("", "day");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                                return;
                            }
                            break;
                        case 4:
                            attIdx = context.getAttribute("", "issue");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                                return;
                            }
                            break;
                        case 6:
                            revertToParentFromLeaveElement(___uri, ___local, ___qname);
                            return;
                        case 2:
                            if (("date" == ___local) && ("" == ___uri)) {
                                context.popAttributes();
                                state = 3;
                                return;
                            }
                            break;
                        case 5:
                            if (("journal" == ___local) && ("" == ___uri)) {
                                context.popAttributes();
                                state = 6;
                                return;
                            }
                            break;
                    }
                    super.leaveElement(___uri, ___local, ___qname);
                    break;
                }
            }

            public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case 1:
                            if (("day" == ___local) && ("" == ___uri)) {
                                _Date = ((org.janelia.it.jacs.server.jaxb.reference_record.impl.ReferenceRecordTypeImpl.PublicationTypeImpl.DateTypeImpl) spawnChildFromEnterAttribute((org.janelia.it.jacs.server.jaxb.reference_record.impl.ReferenceRecordTypeImpl.PublicationTypeImpl.DateTypeImpl.class), 2, ___uri, ___local, ___qname));
                                return;
                            }
                            break;
                        case 4:
                            if (("issue" == ___local) && ("" == ___uri)) {
                                _Journal = ((org.janelia.it.jacs.server.jaxb.reference_record.impl.ReferenceRecordTypeImpl.PublicationTypeImpl.JournalTypeImpl) spawnChildFromEnterAttribute((org.janelia.it.jacs.server.jaxb.reference_record.impl.ReferenceRecordTypeImpl.PublicationTypeImpl.JournalTypeImpl.class), 5, ___uri, ___local, ___qname));
                                return;
                            }
                            break;
                        case 6:
                            revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                            return;
                    }
                    super.enterAttribute(___uri, ___local, ___qname);
                    break;
                }
            }

            public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                    throws org.xml.sax.SAXException {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case 1:
                            attIdx = context.getAttribute("", "day");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                                return;
                            }
                            break;
                        case 4:
                            attIdx = context.getAttribute("", "issue");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                                return;
                            }
                            break;
                        case 6:
                            revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                            return;
                    }
                    super.leaveAttribute(___uri, ___local, ___qname);
                    break;
                }
            }

            public void handleText(final java.lang.String value)
                    throws org.xml.sax.SAXException {
                int attIdx;
                outer:
                while (true) {
                    try {
                        switch (state) {
                            case 1:
                                attIdx = context.getAttribute("", "day");
                                if (attIdx >= 0) {
                                    context.consumeAttribute(attIdx);
                                    context.getCurrentHandler().text(value);
                                    return;
                                }
                                break;
                            case 4:
                                attIdx = context.getAttribute("", "issue");
                                if (attIdx >= 0) {
                                    context.consumeAttribute(attIdx);
                                    context.getCurrentHandler().text(value);
                                    return;
                                }
                                break;
                            case 6:
                                revertToParentFromText(value);
                                return;
                        }
                    }
                    catch (java.lang.RuntimeException e) {
                        handleUnexpectedTextException(value, e);
                    }
                    break;
                }
            }

        }

    }

    public class Unmarshaller
            extends org.janelia.it.jacs.server.jaxb.reference_record.impl.runtime.AbstractUnmarshallingEventHandlerImpl {


        public Unmarshaller(org.janelia.it.jacs.server.jaxb.reference_record.impl.runtime.UnmarshallingContext context) {
            super(context, "----------------------------");
        }

        protected Unmarshaller(org.janelia.it.jacs.server.jaxb.reference_record.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return org.janelia.it.jacs.server.jaxb.reference_record.impl.ReferenceRecordTypeImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                throws org.xml.sax.SAXException {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case 9:
                        if (("summary" == ___local) && ("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 10;
                            return;
                        }
                        break;
                    case 0:
                        if (("title" == ___local) && ("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 1;
                            return;
                        }
                        break;
                    case 18:
                        if (("supplemental_text" == ___local) && ("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 19;
                            return;
                        }
                        break;
                    case 19:
                        attIdx = context.getAttribute("", "URL");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return;
                        }
                        break;
                    case 12:
                        if (("abstract" == ___local) && ("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 13;
                            return;
                        }
                        break;
                    case 6:
                        if (("publication" == ___local) && ("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 7;
                            return;
                        }
                        break;
                    case 27:
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return;
                    case 25:
                        attIdx = context.getAttribute("", "path_prefix");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return;
                        }
                        break;
                    case 4:
                        if (("name" == ___local) && ("" == ___uri)) {
                            _Authors = ((org.janelia.it.jacs.server.jaxb.reference_record.impl.ReferenceRecordTypeImpl.AuthorsTypeImpl) spawnChildFromEnterElement((org.janelia.it.jacs.server.jaxb.reference_record.impl.ReferenceRecordTypeImpl.AuthorsTypeImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return;
                        }
                        break;
                    case 22:
                        if (("file" == ___local) && ("" == ___uri)) {
                            _CombinedData = ((org.janelia.it.jacs.server.jaxb.reference_record.impl.ReferenceRecordTypeImpl.CombinedDataTypeImpl) spawnChildFromEnterElement((org.janelia.it.jacs.server.jaxb.reference_record.impl.ReferenceRecordTypeImpl.CombinedDataTypeImpl.class), 23, ___uri, ___local, ___qname, __atts));
                            return;
                        }
                        if (("file" == ___local) && ("" == ___uri)) {
                            _CombinedData = ((org.janelia.it.jacs.server.jaxb.reference_record.impl.ReferenceRecordTypeImpl.CombinedDataTypeImpl) spawnChildFromEnterElement((org.janelia.it.jacs.server.jaxb.reference_record.impl.ReferenceRecordTypeImpl.CombinedDataTypeImpl.class), 23, ___uri, ___local, ___qname, __atts));
                            return;
                        }
                        _CombinedData = ((org.janelia.it.jacs.server.jaxb.reference_record.impl.ReferenceRecordTypeImpl.CombinedDataTypeImpl) spawnChildFromEnterElement((org.janelia.it.jacs.server.jaxb.reference_record.impl.ReferenceRecordTypeImpl.CombinedDataTypeImpl.class), 23, ___uri, ___local, ___qname, __atts));
                        return;
                    case 3:
                        if (("authors" == ___local) && ("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 4;
                            return;
                        }
                        break;
                    case 7:
                        if (("date" == ___local) && ("" == ___uri)) {
                            _Publication = ((org.janelia.it.jacs.server.jaxb.reference_record.impl.ReferenceRecordTypeImpl.PublicationTypeImpl) spawnChildFromEnterElement((org.janelia.it.jacs.server.jaxb.reference_record.impl.ReferenceRecordTypeImpl.PublicationTypeImpl.class), 8, ___uri, ___local, ___qname, __atts));
                            return;
                        }
                        break;
                    case 15:
                        if (("full_text" == ___local) && ("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 16;
                            return;
                        }
                        break;
                    case 16:
                        attIdx = context.getAttribute("", "URL");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return;
                        }
                        break;
                    case 24:
                        if (("data" == ___local) && ("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 25;
                            return;
                        }
                        break;
                    case 21:
                        if (("combined_data" == ___local) && ("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 22;
                            return;
                        }
                        state = 24;
                        continue outer;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case 8:
                        if (("publication" == ___local) && ("" == ___uri)) {
                            context.popAttributes();
                            state = 9;
                            return;
                        }
                        break;
                    case 19:
                        attIdx = context.getAttribute("", "URL");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return;
                        }
                        break;
                    case 26:
                        if (("data" == ___local) && ("" == ___uri)) {
                            context.popAttributes();
                            state = 27;
                            return;
                        }
                        break;
                    case 27:
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return;
                    case 25:
                        attIdx = context.getAttribute("", "path_prefix");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return;
                        }
                        break;
                    case 23:
                        if (("combined_data" == ___local) && ("" == ___uri)) {
                            context.popAttributes();
                            state = 24;
                            return;
                        }
                        break;
                    case 14:
                        if (("abstract" == ___local) && ("" == ___uri)) {
                            context.popAttributes();
                            state = 15;
                            return;
                        }
                        break;
                    case 22:
                        _CombinedData = ((org.janelia.it.jacs.server.jaxb.reference_record.impl.ReferenceRecordTypeImpl.CombinedDataTypeImpl) spawnChildFromLeaveElement((org.janelia.it.jacs.server.jaxb.reference_record.impl.ReferenceRecordTypeImpl.CombinedDataTypeImpl.class), 23, ___uri, ___local, ___qname));
                        return;
                    case 2:
                        if (("title" == ___local) && ("" == ___uri)) {
                            context.popAttributes();
                            state = 3;
                            return;
                        }
                        break;
                    case 16:
                        attIdx = context.getAttribute("", "URL");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return;
                        }
                        break;
                    case 11:
                        if (("summary" == ___local) && ("" == ___uri)) {
                            context.popAttributes();
                            state = 12;
                            return;
                        }
                        break;
                    case 20:
                        if (("supplemental_text" == ___local) && ("" == ___uri)) {
                            context.popAttributes();
                            state = 21;
                            return;
                        }
                        break;
                    case 21:
                        state = 24;
                        continue outer;
                    case 5:
                        if (("authors" == ___local) && ("" == ___uri)) {
                            context.popAttributes();
                            state = 6;
                            return;
                        }
                        break;
                    case 17:
                        if (("full_text" == ___local) && ("" == ___uri)) {
                            context.popAttributes();
                            state = 18;
                            return;
                        }
                        break;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case 19:
                        if (("URL" == ___local) && ("" == ___uri)) {
                            _SupplementalText = ((org.janelia.it.jacs.server.jaxb.reference_record.impl.TextTypeImpl) spawnChildFromEnterAttribute((org.janelia.it.jacs.server.jaxb.reference_record.impl.TextTypeImpl.class), 20, ___uri, ___local, ___qname));
                            return;
                        }
                        break;
                    case 27:
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return;
                    case 25:
                        if (("path_prefix" == ___local) && ("" == ___uri)) {
                            _Data = ((org.janelia.it.jacs.server.jaxb.reference_record.impl.ReferenceRecordTypeImpl.DataTypeImpl) spawnChildFromEnterAttribute((org.janelia.it.jacs.server.jaxb.reference_record.impl.ReferenceRecordTypeImpl.DataTypeImpl.class), 26, ___uri, ___local, ___qname));
                            return;
                        }
                        break;
                    case 22:
                        _CombinedData = ((org.janelia.it.jacs.server.jaxb.reference_record.impl.ReferenceRecordTypeImpl.CombinedDataTypeImpl) spawnChildFromEnterAttribute((org.janelia.it.jacs.server.jaxb.reference_record.impl.ReferenceRecordTypeImpl.CombinedDataTypeImpl.class), 23, ___uri, ___local, ___qname));
                        return;
                    case 16:
                        if (("URL" == ___local) && ("" == ___uri)) {
                            _FullText = ((org.janelia.it.jacs.server.jaxb.reference_record.impl.TextTypeImpl) spawnChildFromEnterAttribute((org.janelia.it.jacs.server.jaxb.reference_record.impl.TextTypeImpl.class), 17, ___uri, ___local, ___qname));
                            return;
                        }
                        break;
                    case 21:
                        state = 24;
                        continue outer;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case 19:
                        attIdx = context.getAttribute("", "URL");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return;
                        }
                        break;
                    case 27:
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return;
                    case 25:
                        attIdx = context.getAttribute("", "path_prefix");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return;
                        }
                        break;
                    case 22:
                        _CombinedData = ((org.janelia.it.jacs.server.jaxb.reference_record.impl.ReferenceRecordTypeImpl.CombinedDataTypeImpl) spawnChildFromLeaveAttribute((org.janelia.it.jacs.server.jaxb.reference_record.impl.ReferenceRecordTypeImpl.CombinedDataTypeImpl.class), 23, ___uri, ___local, ___qname));
                        return;
                    case 16:
                        attIdx = context.getAttribute("", "URL");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return;
                        }
                        break;
                    case 21:
                        state = 24;
                        continue outer;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
                throws org.xml.sax.SAXException {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case 13:
                            state = 14;
                            eatText1(value);
                            return;
                        case 19:
                            attIdx = context.getAttribute("", "URL");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return;
                            }
                            break;
                        case 27:
                            revertToParentFromText(value);
                            return;
                        case 25:
                            attIdx = context.getAttribute("", "path_prefix");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return;
                            }
                            break;
                        case 10:
                            state = 11;
                            eatText2(value);
                            return;
                        case 22:
                            _CombinedData = ((org.janelia.it.jacs.server.jaxb.reference_record.impl.ReferenceRecordTypeImpl.CombinedDataTypeImpl) spawnChildFromText((org.janelia.it.jacs.server.jaxb.reference_record.impl.ReferenceRecordTypeImpl.CombinedDataTypeImpl.class), 23, value));
                            return;
                        case 16:
                            attIdx = context.getAttribute("", "URL");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return;
                            }
                            break;
                        case 1:
                            state = 2;
                            eatText3(value);
                            return;
                        case 21:
                            state = 24;
                            continue outer;
                    }
                }
                catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

        private void eatText1(final java.lang.String value)
                throws org.xml.sax.SAXException {
            try {
                _Abstract = value;
            }
            catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText2(final java.lang.String value)
                throws org.xml.sax.SAXException {
            try {
                _Summary = value;
            }
            catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText3(final java.lang.String value)
                throws org.xml.sax.SAXException {
            try {
                _Title = value;
            }
            catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

    }

}
