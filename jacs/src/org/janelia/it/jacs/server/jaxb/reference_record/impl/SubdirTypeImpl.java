
//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.6-01/24/2006 06:08 PM(kohsuke)-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2006.10.27 at 12:05:11 PM EDT 
//


package org.janelia.it.jacs.server.jaxb.reference_record.impl;

public class SubdirTypeImpl implements org.janelia.it.jacs.server.jaxb.reference_record.SubdirType, com.sun.xml.bind.JAXBObject, org.janelia.it.jacs.server.jaxb.reference_record.impl.runtime.UnmarshallableObject, org.janelia.it.jacs.server.jaxb.reference_record.impl.runtime.XMLSerializable, org.janelia.it.jacs.server.jaxb.reference_record.impl.runtime.ValidatableObject {

    protected com.sun.xml.bind.util.ListImpl _FileOrSubdir;
    protected java.lang.String _Name;
    public final static java.lang.Class version = (org.janelia.it.jacs.server.jaxb.reference_record.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (org.janelia.it.jacs.server.jaxb.reference_record.SubdirType.class);
    }

    protected com.sun.xml.bind.util.ListImpl _getFileOrSubdir() {
        if (_FileOrSubdir == null) {
            _FileOrSubdir = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
        }
        return _FileOrSubdir;
    }

    public java.util.List getFileOrSubdir() {
        return _getFileOrSubdir();
    }

    public java.lang.String getName() {
        return _Name;
    }

    public void setName(java.lang.String value) {
        _Name = value;
    }

    public org.janelia.it.jacs.server.jaxb.reference_record.impl.runtime.UnmarshallingEventHandler createUnmarshaller(org.janelia.it.jacs.server.jaxb.reference_record.impl.runtime.UnmarshallingContext context) {
        return new org.janelia.it.jacs.server.jaxb.reference_record.impl.SubdirTypeImpl.Unmarshaller(context);
    }

    public void serializeBody(org.janelia.it.jacs.server.jaxb.reference_record.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException {
        int idx1 = 0;
        final int len1 = ((_FileOrSubdir == null) ? 0 : _FileOrSubdir.size());
        while (idx1 != len1) {
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _FileOrSubdir.get(idx1++)), "FileOrSubdir");
        }
    }

    public void serializeAttributes(org.janelia.it.jacs.server.jaxb.reference_record.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException {
        int idx1 = 0;
        final int len1 = ((_FileOrSubdir == null) ? 0 : _FileOrSubdir.size());
        context.startAttribute("", "name");
        try {
            context.text(((java.lang.String) _Name), "Name");
        }
        catch (java.lang.Exception e) {
            org.janelia.it.jacs.server.jaxb.reference_record.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endAttribute();
        while (idx1 != len1) {
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _FileOrSubdir.get(idx1++)), "FileOrSubdir");
        }
    }

    public void serializeURIs(org.janelia.it.jacs.server.jaxb.reference_record.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException {
        int idx1 = 0;
        final int len1 = ((_FileOrSubdir == null) ? 0 : _FileOrSubdir.size());
        while (idx1 != len1) {
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _FileOrSubdir.get(idx1++)), "FileOrSubdir");
        }
    }

    public java.lang.Class getPrimaryInterface() {
        return (org.janelia.it.jacs.server.jaxb.reference_record.SubdirType.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
                    "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
                            + "n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
                            + "mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
                            + "on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
                            + "expandedExpq\u0000~\u0000\u0002xpppsr\u0000 com.sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000"
                            + "\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000"
                            + "\u0002xq\u0000~\u0000\u0003ppsr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001p"
                            + "psr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tna"
                            + "meClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.gra"
                            + "mmar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fco"
                            + "ntentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003pp\u0000sq\u0000~\u0000\tppsq\u0000~\u0000\u0006sr\u0000\u0011java.lang.Boolean\u00cd"
                            + " r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000"
                            + "\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\fxq\u0000~\u0000\u0003q\u0000~\u0000\u0012psr\u00002com.sun"
                            + ".msv.grammar.Expression$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003"
                            + "sq\u0000~\u0000\u0011\u0001q\u0000~\u0000\u0016sr\u0000 com.sun.msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000x"
                            + "r\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv"
                            + ".grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000\u0017q"
                            + "\u0000~\u0000\u001csr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tloc"
                            + "alNamet\u0000\u0012Ljava/lang/String;L\u0000\fnamespaceURIq\u0000~\u0000\u001exq\u0000~\u0000\u0019t\u00001org."
                            + "jcvi.camera.server.jaxb.reference_record.Filet\u0000+http://java."
                            + "sun.com/jaxb/xjc/dummy-elementssq\u0000~\u0000\u000bpp\u0000sq\u0000~\u0000\tppsq\u0000~\u0000\u0006q\u0000~\u0000\u0012p"
                            + "sq\u0000~\u0000\u0013q\u0000~\u0000\u0012pq\u0000~\u0000\u0016q\u0000~\u0000\u001aq\u0000~\u0000\u001csq\u0000~\u0000\u001dt\u00003org.jcvi.camera.server.j"
                            + "axb.reference_record.Subdirq\u0000~\u0000!sq\u0000~\u0000\u0013ppsr\u0000\u001bcom.sun.msv.gram"
                            + "mar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype"
                            + ";L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003"
                            + "ppsr\u0000%com.sun.msv.datatype.xsd.PatternFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001[\u0000\bpat"
                            + "ternst\u0000\u0013[Ljava/lang/String;xr\u0000;com.sun.msv.datatype.xsd.Data"
                            + "TypeWithLexicalConstraintFacetT\u0090\u001c>\u001azb\u00ea\u0002\u0000\u0000xr\u0000*com.sun.msv.dat"
                            + "atype.xsd.DataTypeWithFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFacetFixedZ\u0000\u0012need"
                            + "ValueCheckFlagL\u0000\bbaseTypet\u0000)Lcom/sun/msv/datatype/xsd/XSData"
                            + "typeImpl;L\u0000\fconcreteTypet\u0000\'Lcom/sun/msv/datatype/xsd/Concret"
                            + "eType;L\u0000\tfacetNameq\u0000~\u0000\u001exr\u0000\'com.sun.msv.datatype.xsd.XSDataty"
                            + "peImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000\u001eL\u0000\btypeNameq\u0000~\u0000\u001eL\u0000\nwhit"
                            + "eSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000\u0000"
                            + "t\u0000\rdir_name_typesr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProce"
                            + "ssor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSp"
                            + "aceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp\u0000\u0000sr\u0000#com.sun.msv.datatype.xsd.Stri"
                            + "ngType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxr\u0000*com.sun.msv.datatype.xs"
                            + "d.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.C"
                            + "oncreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u00003t\u0000 http://www.w3.org/2001/XMLSch"
                            + "emat\u0000\u0006stringq\u0000~\u0000:\u0001q\u0000~\u0000>t\u0000\u0007patternur\u0000\u0013[Ljava.lang.String;\u00ad\u00d2V\u00e7"
                            + "\u00e9\u001d{G\u0002\u0000\u0000xp\u0000\u0000\u0000\u0001t\u0000\u0012[A-Za-z0-9_\\-\\. ]*sr\u00000com.sun.msv.grammar.Ex"
                            + "pression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003ppsr\u0000\u001bcom.sun.msv"
                            + ".util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u001eL\u0000\fnamespaceURIq"
                            + "\u0000~\u0000\u001expq\u0000~\u00007q\u0000~\u00006sq\u0000~\u0000\u001dt\u0000\u0004nameq\u0000~\u00006sr\u0000\"com.sun.msv.grammar.Ex"
                            + "pressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/Ex"
                            + "pressionPool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.Expression"
                            + "Pool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006parentt"
                            + "\u0000$Lcom/sun/msv/grammar/ExpressionPool;xp\u0000\u0000\u0000\u0007\u0001pq\u0000~\u0000\nq\u0000~\u0000\u0005q\u0000~\u0000"
                            + "\u0010q\u0000~\u0000$q\u0000~\u0000\bq\u0000~\u0000\u000fq\u0000~\u0000#x"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
            extends org.janelia.it.jacs.server.jaxb.reference_record.impl.runtime.AbstractUnmarshallingEventHandlerImpl {


        public Unmarshaller(org.janelia.it.jacs.server.jaxb.reference_record.impl.runtime.UnmarshallingContext context) {
            super(context, "-----");
        }

        protected Unmarshaller(org.janelia.it.jacs.server.jaxb.reference_record.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return org.janelia.it.jacs.server.jaxb.reference_record.impl.SubdirTypeImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                throws org.xml.sax.SAXException {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case 0:
                        attIdx = context.getAttribute("", "name");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 3;
                            eatText1(v);
                            continue outer;
                        }
                        break;
                    case 4:
                        if (("file" == ___local) && ("" == ___uri)) {
                            _getFileOrSubdir().add(((org.janelia.it.jacs.server.jaxb.reference_record.impl.FileImpl) spawnChildFromEnterElement((org.janelia.it.jacs.server.jaxb.reference_record.impl.FileImpl.class), 4, ___uri, ___local, ___qname, __atts)));
                            return;
                        }
                        if (("subdir" == ___local) && ("" == ___uri)) {
                            _getFileOrSubdir().add(((org.janelia.it.jacs.server.jaxb.reference_record.impl.SubdirImpl) spawnChildFromEnterElement((org.janelia.it.jacs.server.jaxb.reference_record.impl.SubdirImpl.class), 4, ___uri, ___local, ___qname, __atts)));
                            return;
                        }
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return;
                    case 3:
                        if (("file" == ___local) && ("" == ___uri)) {
                            _getFileOrSubdir().add(((org.janelia.it.jacs.server.jaxb.reference_record.impl.FileImpl) spawnChildFromEnterElement((org.janelia.it.jacs.server.jaxb.reference_record.impl.FileImpl.class), 4, ___uri, ___local, ___qname, __atts)));
                            return;
                        }
                        if (("subdir" == ___local) && ("" == ___uri)) {
                            _getFileOrSubdir().add(((org.janelia.it.jacs.server.jaxb.reference_record.impl.SubdirImpl) spawnChildFromEnterElement((org.janelia.it.jacs.server.jaxb.reference_record.impl.SubdirImpl.class), 4, ___uri, ___local, ___qname, __atts)));
                            return;
                        }
                        break;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        private void eatText1(final java.lang.String value)
                throws org.xml.sax.SAXException {
            try {
                _Name = value;
            }
            catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case 0:
                        attIdx = context.getAttribute("", "name");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 3;
                            eatText1(v);
                            continue outer;
                        }
                        break;
                    case 4:
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case 0:
                        if (("name" == ___local) && ("" == ___uri)) {
                            state = 1;
                            return;
                        }
                        break;
                    case 4:
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case 0:
                        attIdx = context.getAttribute("", "name");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 3;
                            eatText1(v);
                            continue outer;
                        }
                        break;
                    case 4:
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return;
                    case 2:
                        if (("name" == ___local) && ("" == ___uri)) {
                            state = 3;
                            return;
                        }
                        break;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
                throws org.xml.sax.SAXException {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case 0:
                            attIdx = context.getAttribute("", "name");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 3;
                                eatText1(v);
                                continue outer;
                            }
                            break;
                        case 4:
                            revertToParentFromText(value);
                            return;
                        case 1:
                            state = 2;
                            eatText1(value);
                            return;
                    }
                }
                catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

    }

}
