<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2010-2011, J. Craig Venter Institute, Inc.
  ~
  ~ This file is part of JCVI VICS.
  ~
  ~ JCVI VICS is free software; you can redistribute it and/or modify it
  ~ under the terms and conditions of the Artistic License 2.0.  For
  ~ details, see the full text of the license in the file LICENSE.txt.  No
  ~ other rights are granted.  Any and all third party software rights to
  ~ remain with the original developer.
  ~
  ~ JCVI VICS is distributed in the hope that it will be useful in
  ~ bioinformatics applications, but it is provided "AS IS" and WITHOUT
  ~ ANY EXPRESS OR IMPLIED WARRANTIES including but not limited to
  ~ implied warranties of merchantability or fitness for any particular
  ~ purpose.  For details, see the full text of the license in the file
  ~ LICENSE.txt.
  ~
  ~ You should have received a copy of the Artistic License 2.0 along with
  ~ JCVI VICS.  If not, the license can be obtained from
  ~ "http://www.perlfoundation.org/artistic_license_2_0."
  -->

<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">

<!--
  - Application context definition for JaCS on Hibernate.
-->
<beans>

    <!-- Bean to resolve the application version. -->
    <bean name="appVersionResolver" class="org.janelia.it.jacs.spring.AppVersionResolver" init-method="init">
        <property name="appVersion" value="${jacs.version}"/>
        <property name="appVersionCheckIntervalInMillis" value="600000"/>
        <property name="remoteAppVersionGetter" ref="remoteAppVersionGetter"/>
    </bean>

    <!-- EJB Connection Factory for remote application version service -->
    <bean id="remoteAppVersionGetter" class="org.springframework.jndi.JndiObjectFactoryBean">
        <property name="jndiName" value="compute/ComputeEJB/remote"/>
        <!--<property name="businessInterface" value="org.janelia.it.jacs.compute.api.ComputeBeanRemote"/>-->
        <!--<property name="lookupHomeOnStartup" value="false" />-->
        <!--<property name="refreshHomeOnConnectFailure" value="true"/>-->
        <property name="jndiEnvironment">
             <props>
                 <prop key="java.naming.factory.initial">org.jnp.interfaces.NamingContextFactory</prop>
                 <prop key="java.naming.provider.url">jnp://${computeserver.ejb.service}</prop>
                 <prop key="java.naming.factory.url.pkgs">org.jboss.naming:org.jnp.interfaces</prop>
             </props>
         </property>
        <property name="expectedType" value="org.janelia.it.jacs.compute.api.ComputeBeanRemote"/>
   </bean>

    <!-- ========================= BUSINESS OBJECT DEFINITIONS ========================= -->

	<!--
	  - JaCS's central data access object: Hibernate implementation.
   	-->
    <bean id="nodeDAO" class="org.janelia.it.jacs.server.access.hibernate.NodeDAOImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="fileNodeDAO" class="org.janelia.it.jacs.server.access.hibernate.FileNodeDAOImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="featureDAO" class="org.janelia.it.jacs.server.access.hibernate.FeatureDAOImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="abstractSearchDAO" class="org.janelia.it.jacs.server.access.hibernate.SearchDAOImpl" abstract="true">
        <property name="sessionFactory" ref="sessionFactory"/>
        <property name="chartTool" ref="jFreeChartTool"/>
    </bean>

    <bean id="proteinSearchDAO" parent="abstractSearchDAO" class="org.janelia.it.jacs.server.access.hibernate.ProteinSearchDAOImpl">
    </bean>

    <bean id="proteinClusterSearchDAO" parent="abstractSearchDAO" class="org.janelia.it.jacs.server.access.hibernate.ProteinClusterSearchDAOImpl">
    </bean>

    <bean id="publicationSearchDAO" parent="abstractSearchDAO" class="org.janelia.it.jacs.server.access.hibernate.PublicationSearchDAOImpl">
    </bean>

    <bean id="projectSearchDAO" parent="abstractSearchDAO" class="org.janelia.it.jacs.server.access.hibernate.ProjectSearchDAOImpl">
    </bean>

    <bean id="sampleSearchDAO" parent="abstractSearchDAO" class="org.janelia.it.jacs.server.access.hibernate.SampleSearchDAOImpl">
    </bean>

    <bean id="websiteSearchDAO" parent="abstractSearchDAO" class="org.janelia.it.jacs.server.access.hibernate.WebsiteSearchDAOImpl">
    </bean>

    <bean id="accessionSearchDAO" parent="abstractSearchDAO" class="org.janelia.it.jacs.server.access.hibernate.AccessionSearchDAOImpl">
    </bean>

    <bean id="searchResultDAO" class="org.janelia.it.jacs.server.access.hibernate.SearchResultDAOImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="taskDAO" class="org.janelia.it.jacs.server.access.hibernate.TaskDAOImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="userDAO" class="org.janelia.it.jacs.server.access.hibernate.UserDAOImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="downloadDAO" class="org.janelia.it.jacs.server.access.hibernate.DownloadDAOImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="blastDAO" class="org.janelia.it.jacs.server.access.hibernate.BlastDAOImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="metadataDAO" class="org.janelia.it.jacs.server.access.hibernate.MetadataDAOImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="preferenceDAO" class="org.janelia.it.jacs.server.access.hibernate.PreferenceDAOImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
        <property name="userDao" ref="userDAO"/>
    </bean>

    <!-- Separate DAO needed for MF150 MySQL database because downloadDAO has jacsdb sessionfactory injected  -->
    <bean id="mooreDAO" class="org.janelia.it.jacs.server.access.hibernate.MooreDAOImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <!-- Hibernate 3.0's JMX statistics service -->
	<!-- Implements the StatisticsServiceMBean management interface -->
	<bean name="jacs:type=HibernateStatistics" class="org.hibernate.jmx.StatisticsService">
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>

    <!-- EJB Connection Factory for remote services -->
    <bean id="remoteComputeOrderService" class="org.springframework.jndi.JndiObjectFactoryBean">
        <property name="jndiName" value="compute/ComputeEJB/remote"/>
        <property name="jndiEnvironment">
             <props>
                 <prop key="java.naming.factory.initial">org.jnp.interfaces.NamingContextFactory</prop>
                 <prop key="java.naming.provider.url">jnp://${computeserver.ejb.service}</prop>
                 <prop key="java.naming.factory.url.pkgs">org.jboss.naming:org.jnp.interfaces</prop>
             </props>
         </property>
        <property name="expectedType" value="org.janelia.it.jacs.compute.api.ComputeBeanRemote"/>
   </bean>
    <bean id="remoteSearchService" class="org.springframework.jndi.JndiObjectFactoryBean">
        <property name="jndiName" value="compute/SearchEJB/remote"/>
        <property name="jndiEnvironment">
            <props>
                <prop key="java.naming.factory.initial">org.jnp.interfaces.NamingContextFactory</prop>
                <prop key="java.naming.provider.url">jnp://${computeserver.ejb.service}</prop>
                <prop key="java.naming.factory.url.pkgs">org.jboss.naming:org.jnp.interfaces</prop>
            </props>
        </property>
        <property name="expectedType" value="org.janelia.it.jacs.compute.api.SearchBeanRemote"/>
    </bean>
    <bean id="remoteJobControlService" class="org.springframework.jndi.JndiObjectFactoryBean">
        <property name="jndiName" value="compute/JobControlEJB/remote"/>
        <property name="jndiEnvironment">
            <props>
                <prop key="java.naming.factory.initial">org.jnp.interfaces.NamingContextFactory</prop>
                <prop key="java.naming.provider.url">jnp://${computeserver.ejb.service}</prop>
                <prop key="java.naming.factory.url.pkgs">org.jboss.naming:org.jnp.interfaces</prop>
            </props>
        </property>
        <property name="expectedType" value="org.janelia.it.jacs.compute.api.JobControlBeanRemote"/>
    </bean>


    <!-- Establish beans for all of the API's-->
    <bean name="blastAPI" class="org.janelia.it.jacs.server.api.BlastAPI">
        <property name="taskDAO" ref="taskDAO"/>
        <property name="nodeDAO" ref="nodeDAO"/>
        <property name="userDAO" ref="userDAO"/>
        <property name="computeBean" ref="remoteComputeOrderService"/>
    </bean>
    <bean name="featureAPI" class="org.janelia.it.jacs.server.api.FeatureAPI">
        <property name="featureDAO" ref="featureDAO"/>
    </bean>
    <bean name="exportAPI" class="org.janelia.it.jacs.server.api.ExportAPI">
        <property name="taskDAO" ref="taskDAO"/>
        <property name="computeBean" ref="remoteComputeOrderService"/>
    </bean>
    <bean name="dataSetAPI" class="org.janelia.it.jacs.server.api.DataSetAPI">
        <property name="dataDao" ref="nodeDAO"/>
        <property name="taskDAO" ref="taskDAO"/>
        <property name="computeBean" ref="remoteComputeOrderService"/>
    </bean>
    <bean name="recruitmentAPI" class="org.janelia.it.jacs.server.api.RecruitmentAPI">
        <property name="taskDao" ref="taskDAO"/>
        <property name="dataDao" ref="nodeDAO"/>
        <property name="computeBean" ref="remoteComputeOrderService"/>
    </bean>
    <bean name="searchAPI" class="org.janelia.it.jacs.server.api.SearchAPI">
        <property name="taskDAO" ref="taskDAO"/>
        <property name="searchDAOFactory" ref="searchDAOFactory"/>
        <property name="searchResultDAO" ref="searchResultDAO"/>
        <property name="searchBean" ref="remoteSearchService"/>
    </bean>

    <bean name="userAPI" class="org.janelia.it.jacs.server.api.UserAPI">
        <property name="userDAO" ref="userDAO"/>
    </bean>

    <bean name="searchDAOFactory" class="org.janelia.it.jacs.server.api.SearchDAOFactory">
        <property name="searchDAOs">
            <map>
                <entry key="protein" value-ref="proteinSearchDAO"/>
                <entry key="final_cluster" value-ref="proteinClusterSearchDAO"/>
                <entry key="publication" value-ref="publicationSearchDAO"/>
                <entry key="project" value-ref="projectSearchDAO"/>
                <entry key="sample" value-ref="sampleSearchDAO"/>
                <entry key="website" value-ref="websiteSearchDAO"/>
                <entry key="accession" value-ref="accessionSearchDAO"/>
            </map>
        </property>
    </bean>

    <bean id="jFreeChartTool" class="org.janelia.it.jacs.server.api.JFreeChartTool">
    </bean>

    <bean name="jobControlAPI" class="org.janelia.it.jacs.server.api.JobControlAPI">
        <property name="jobControlBean" ref="remoteJobControlService"/>
    </bean>

</beans>
