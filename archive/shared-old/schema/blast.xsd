<?xml version="1.0" encoding="ISO-8859-1"?>
<!--
  ~ Copyright (c) 2010-2011, J. Craig Venter Institute, Inc.
  ~
  ~ This file is part of JCVI VICS.
  ~
  ~ JCVI VICS is free software; you can redistribute it and/or modify it
  ~ under the terms and conditions of the Artistic License 2.0.  For
  ~ details, see the full text of the license in the file LICENSE.txt.  No
  ~ other rights are granted.  Any and all third party software rights to
  ~ remain with the original developer.
  ~
  ~ JCVI VICS is distributed in the hope that it will be useful in
  ~ bioinformatics applications, but it is provided "AS IS" and WITHOUT
  ~ ANY EXPRESS OR IMPLIED WARRANTIES including but not limited to
  ~ implied warranties of merchantability or fitness for any particular
  ~ purpose.  For details, see the full text of the license in the file
  ~ LICENSE.txt.
  ~
  ~ You should have received a copy of the Artistic License 2.0 along with
  ~ JCVI VICS.  If not, the license can be obtained from
  ~ "http://www.perlfoundation.org/artistic_license_2_0."
  -->

<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:jxb="http://java.sun.com/xml/ns/jaxb"
           jxb:version="1.0">

    <!-- See http://www.ncbi.nlm.nih.gov/dtd/NCBI_BlastOutput.mod.dtd for DTD -->

    <xs:element name="BlastOutput" type="BlastOutputType"/>
    <xs:element name="BlastOutput_param" type="Parameters"/>
    <xs:element name="BlastOutput_iterations" type="Iteration"/>

    <xs:complexType name="BlastOutputType">
        <xs:sequence>
            <xs:element name="BlastOutput_program" type="xs:string" minOccurs="1" maxOccurs="1"/> <!-- BLAST program: blastp, tblastx etc. -->
            <xs:element name="BlastOutput_version" type="xs:string" minOccurs="1" maxOccurs="1"/> <!-- Program version  -->
            <xs:element name="BlastOutput_reference" type="xs:string" minOccurs="1" maxOccurs="1"/> <!-- Steven, David, Tom and others -->
            <xs:element name="BlastOutput_db" type="xs:string" minOccurs="1" maxOccurs="1"/> <!-- BLAST Database name -->
            <xs:element name="BlastOutput_query-ID" type="xs:string" minOccurs="1" maxOccurs="1"/> <!-- SeqId of query -->
            <xs:element name="BlastOutput_query-def" type="xs:string" minOccurs="1" maxOccurs="1"/> <!-- Definition line of query -->
            <xs:element name="BlastOutput_query-len" type="xs:integer" minOccurs="1" maxOccurs="1"/> <!-- length of query sequence -->
            <xs:element name="BlastOutput_query-seq" type="xs:string" minOccurs="0" maxOccurs="1"/> <!-- query sequence itself -->
            <xs:element name="BlastOutput_param" type="Parameters" minOccurs="1" maxOccurs="1" /> <!-- search parameters -->
            <xs:element name="BlastOutput_iterations" type="Iteration" minOccurs="1" maxOccurs="1"/>
            <xs:element name="BlastOutput_mbstat" type="Statistics" minOccurs="0" maxOccurs="1"/> <!-- Mega BLAST search statistics -->
        </xs:sequence>
    </xs:complexType>

    <!-- ITERATION **************************************************************************** -->

    <xs:complexType name="Iteration">
        <xs:sequence>
            <xs:element name="Iteration" type="IterationType" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="IterationType">
        <xs:sequence>
            <xs:element name="Iteration_iter-num" type="xs:integer" minOccurs="1" maxOccurs="1"/> <!-- iteration number -->
            <xs:element name="Iteration_query-ID" type="xs:string" minOccurs="0" maxOccurs="1"/> <!-- SeqId of query -->
            <xs:element name="Iteration_query-def" type="xs:string" minOccurs="0" maxOccurs="1"/> <!-- Definition line of query -->
            <xs:element name="Iteration_query-len" type="xs:integer" minOccurs="0" maxOccurs="1"/> <!-- length of query sequence -->
            <xs:element name="Iteration_hits" type="Hit" minOccurs="0" maxOccurs="1"/> <!-- Hits one for every db sequence -->
            <xs:element name="Iteration_stat" type="Statistics" minOccurs="0" maxOccurs="1"/> <!-- search statistics             -->
            <xs:element name="Iteration_message" type="xs:string" minOccurs="0" maxOccurs="1"/> <!-- Some" error?) information -->
        </xs:sequence>
    </xs:complexType>

    <!-- ITERATION **************************************************************************** -->

    <xs:complexType name="Parameters">
        <xs:sequence>
            <xs:element name="Parameters" type="ParametersType" minOccurs="1" maxOccurs="1"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="ParametersType">
        <xs:sequence>
            <xs:element name="Parameters_matrix" type="xs:string" minOccurs="0" maxOccurs="1"/> <!-- Matrix used" -M) -->
            <xs:element name="Parameters_expect" type="xs:double" minOccurs="1" maxOccurs="1"/> <!-- Expectation threshold" -e) -->
            <xs:element name="Parameters_include" type="xs:float" minOccurs="0" maxOccurs="1"/> <!-- Inclusion threshold" -h) -->
            <xs:element name="Parameters_sc-match" type="xs:integer" minOccurs="0" maxOccurs="1"/> <!-- match score for NT" -r) -->
            <xs:element name="Parameters_sc-mismatch" type="xs:integer" minOccurs="0" maxOccurs="1"/> <!-- mismatch score for NT" -q) -->
            <xs:element name="Parameters_gap-open" type="xs:integer" minOccurs="1" maxOccurs="1"/> <!-- Gap opening cost" -G) -->
            <xs:element name="Parameters_gap-extend" type="xs:integer" minOccurs="1" maxOccurs="1"/> <!-- Gap extension cost" -E) -->
            <xs:element name="Parameters_filter" type="xs:string" minOccurs="0" maxOccurs="1"/> <!-- Filtering options" -F) -->
            <xs:element name="Parameters_pattern" type="xs:string" minOccurs="0" maxOccurs="1"/> <!-- PHI-BLAST pattern -->
            <xs:element name="Parameters_entrez-query" type="xs:string" minOccurs="0" maxOccurs="1"/> <!-- Limit of request to Entrez query -->
        </xs:sequence>
    </xs:complexType>

    <!-- ITERATION **************************************************************************** -->

    <xs:complexType name="Statistics">
        <xs:sequence>
            <xs:element name="Statistics" type="StatisticsType" minOccurs="1" maxOccurs="1"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="StatisticsType">
        <xs:sequence>
            <xs:element name="Statistics_db-num" type="xs:integer" minOccurs="1" maxOccurs="1"/> <!-- Number of sequences in BLAST db -->
            <xs:element name="Statistics_db-len" type="xs:integer" minOccurs="1" maxOccurs="1"/> <!-- Length of BLAST db -->
            <xs:element name="Statistics_hsp-len" type="xs:integer" minOccurs="1" maxOccurs="1"/> <!-- Effective HSP length -->
            <xs:element name="Statistics_eff-space" type="xs:float" minOccurs="1" maxOccurs="1"/> <!-- Effective search space -->
            <xs:element name="Statistics_kappa" type="xs:float" minOccurs="1" maxOccurs="1"/> <!-- Karlin-Altschul parameter K -->
            <xs:element name="Statistics_lambda" type="xs:float" minOccurs="1" maxOccurs="1"/> <!-- Karlin-Altschul parameter Lambda -->
            <xs:element name="Statistics_entropy" type="xs:float" minOccurs="1" maxOccurs="1"/> <!-- Karlin-Altschul parameter H -->
        </xs:sequence>
    </xs:complexType>

    <!-- ITERATION **************************************************************************** -->

    <xs:complexType name="Hit">
        <xs:sequence>
            <xs:element name="Hit" type="HitType" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="HitType">
        <xs:sequence>
            <xs:element name="Hit_num" type="xs:integer" minOccurs="1" maxOccurs="1"/> <!-- hit number -->
            <xs:element name="Hit_id" type="xs:string" minOccurs="1" maxOccurs="1"/> <!-- SeqId of subject -->
            <xs:element name="Hit_def" type="xs:string" minOccurs="1" maxOccurs="1"/> <!-- definition line of subject -->
            <xs:element name="Hit_accession" type="xs:string" minOccurs="1" maxOccurs="1"/> <!-- accession -->
            <xs:element name="Hit_len" type="xs:integer" minOccurs="1" maxOccurs="1"/> <!-- length of subject -->
            <xs:element name="Hit_hsps" type="Hsp" minOccurs="0" maxOccurs="1"/> <!-- all HSP regions for the given subject -->
        </xs:sequence>
    </xs:complexType>

    <!-- ITERATION **************************************************************************** -->

    <xs:complexType name="Hsp">
        <xs:sequence>
            <xs:element name="Hsp" type="HspType" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="HspType">
        <xs:sequence>
            <xs:element name="Hsp_num" type="xs:integer" minOccurs="1" maxOccurs="1"/> <!-- HSP number -->
            <xs:element name="Hsp_bit-score" type="xs:float" minOccurs="1" maxOccurs="1"/> <!-- score" in bits) of HSP -->
            <xs:element name="Hsp_score" type="xs:float" minOccurs="1" maxOccurs="1"/> <!-- score of HSP -->
            <xs:element name="Hsp_evalue" type="xs:double" minOccurs="1" maxOccurs="1"/> <!-- e-value of HSP -->
            <xs:element name="Hsp_query-from" type="xs:integer" minOccurs="1" maxOccurs="1"/> <!-- start of HSP in query -->
            <xs:element name="Hsp_query-to" type="xs:integer" minOccurs="1" maxOccurs="1"/> <!-- end of HSP -->
            <xs:element name="Hsp_hit-from" type="xs:integer" minOccurs="1" maxOccurs="1"/> <!-- start of HSP in subject -->
            <xs:element name="Hsp_hit-to" type="xs:integer" minOccurs="1" maxOccurs="1"/> <!-- end of HSP in subject -->
            <xs:element name="Hsp_pattern-from" type="xs:integer" minOccurs="0" maxOccurs="1"/> <!-- start of PHI-BLAST pattern -->
            <xs:element name="Hsp_pattern-to" type="xs:integer" minOccurs="0" maxOccurs="1"/> <!-- end of PHI-BLAST pattern -->
            <xs:element name="Hsp_query-frame" type="xs:integer" minOccurs="0" maxOccurs="1"/> <!-- translation frame of query -->
            <xs:element name="Hsp_hit-frame" type="xs:integer" minOccurs="0" maxOccurs="1"/> <!-- translation frame of subject -->
            <xs:element name="Hsp_identity" type="xs:integer" minOccurs="0" maxOccurs="1"/> <!-- number of identities in HSP -->
            <xs:element name="Hsp_positive" type="xs:integer" minOccurs="0" maxOccurs="1"/> <!-- number of positives in HSP -->
            <xs:element name="Hsp_gaps" type="xs:integer" minOccurs="0" maxOccurs="1"/> <!-- number of gaps in HSP -->
            <xs:element name="Hsp_align-len" type="xs:integer" minOccurs="0" maxOccurs="1"/> <!-- length of the alignment used -->
            <xs:element name="Hsp_density" type="xs:integer" minOccurs="0" maxOccurs="1"/> <!-- score density -->
            <xs:element name="Hsp_qseq" type="xs:string" minOccurs="1" maxOccurs="1"/> <!-- alignment string for the query" with gaps) -->
            <xs:element name="Hsp_hseq" type="xs:string" minOccurs="1" maxOccurs="1"/> <!-- alignment string for subject" with gaps) -->
            <xs:element name="Hsp_midline" type="xs:string" minOccurs="0" maxOccurs="1"/> <!-- formating middle line -->
        </xs:sequence>
    </xs:complexType>

</xs:schema>
