<?xml version="1.0"?>
<!--
  ~ Copyright (c) 2010-2011, J. Craig Venter Institute, Inc.
  ~
  ~ This file is part of JCVI VICS.
  ~
  ~ JCVI VICS is free software; you can redistribute it and/or modify it
  ~ under the terms and conditions of the Artistic License 2.0.  For
  ~ details, see the full text of the license in the file LICENSE.txt.  No
  ~ other rights are granted.  Any and all third party software rights to
  ~ remain with the original developer.
  ~
  ~ JCVI VICS is distributed in the hope that it will be useful in
  ~ bioinformatics applications, but it is provided "AS IS" and WITHOUT
  ~ ANY EXPRESS OR IMPLIED WARRANTIES including but not limited to
  ~ implied warranties of merchantability or fitness for any particular
  ~ purpose.  For details, see the full text of the license in the file
  ~ LICENSE.txt.
  ~
  ~ You should have received a copy of the Artistic License 2.0 along with
  ~ JCVI VICS.  If not, the license can be obtained from
  ~ "http://www.perlfoundation.org/artistic_license_2_0."
  -->

<project name="build-module-test">

    <!-- Import all the generic module targets -->
    <import file="../buildprocess/build-module.xml"/>

    <target name="make-test-classes-dir">
        <mkdir dir="${build.test.classes.dir}"/>
    </target>

    <target name="make-reports-dir">
        <mkdir dir="${test.reports.dir}"/>
    </target>

    <target name="compile-tests"
            depends="setup, compile, make-test-classes-dir"
            if="test.src.dir.exists">

        <!-- Aggregate the final classpath -->
        <path id="test.compile.classpath.final">
            <fileset dir="${common.dir}/JUnit-Lib-4.11">
                <include name="*.jar"/>
                <exclude name="*-src.jar"/>
            </fileset>
            <path refid="compile.classpath.final"/>      <!-- set by the calling module -->
            <path refid="test.classpath.additional"/>    <!-- set by the calling module -->
            <pathelement location="${build.classes.dir}"/>
        </path>

        <!-- Compile -->
        <javac srcdir="${test.src.dir}" destdir="${build.test.classes.dir}"
               includeantruntime="false"
               debug="${compile.debug}" optimize="${compile.optimize}" deprecation="${compile.deprecation}">
            <classpath refid="test.compile.classpath.final"/>
        </javac>

        <copy todir="${build.test.classes.dir}" failonerror="false">
            <fileset file="${test.resources.dir}/jndi.properties"/>
        </copy>

    </target>

    <target name="run-fast-tests"
            depends="setup, compile-tests, clean-reports, make-reports-dir"
            if="test.src.dir.exists"
            description="Runs all fast tests in a module.  Reports are output to build/reports.">

        <!-- aggregate the final classpath -->
        <path id="test.run.classpath.final">
            <path refid="test.compile.classpath.final"/>
            <fileset dir="${lib.dir}" includes="*.jar"/>
            <pathelement location="${build.classes.dir}"/>
            <pathelement location="${build.test.classes.dir}"/>
            <pathelement location="${test.resources.dir}"/>
        </path>

        <!-- run the tests -->
        <!-- NOTE: fork option is needed to set the run directory up one level ...
                   which is needed to get simple-jndi configuration to work -->
        <junit printsummary="on" showoutput="on"
               fork="on" forkmode="once" dir="${basedir}/.."
               haltonfailure="off"
               errorproperty="test.error" failureproperty="test.failure">
            <classpath refid="test.run.classpath.final"/>
            <sysproperty key="java.endorsed.dirs" value="${common.dir}/JAXB-2.1.5"/>
            <sysproperty key="shared.testfiles.root" value="${shared.testfiles.root}"/>
            <formatter type="xml"/>
            <batchtest fork="on" todir="${test.reports.dir}" >
                <fileset dir="${test.src.dir}">
                    <include name="**/*FastTestsSuite.java"/>
                </fileset>
            </batchtest>
        </junit>

        <!-- generate junitreport -->
        <antcall target="report"/>

        <fail message="${ant.project.name} module test failure detected, check results" if="test.failure" />
        <fail message="${ant.project.name} module test error detected, check results" if="test.error" />

    </target>

    <target name="report"
            description="genrates summary report of junit test results">
        <junitreport todir="${test.reports.dir}">
            <fileset dir="${test.reports.dir}">
                <include name="TEST-*.xml"/>
            </fileset>
            <report format="frames" todir="${test.reports.dir}" styledir="${basedir}/../buildprocess/junit/junitreport-styledir"/>
        </junitreport>
        <echo>view ${ant.project.name} module test results at file://${test.reports.dir}/index.html</echo>
    </target>

</project>
