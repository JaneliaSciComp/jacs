<?xml version="1.0"?>
<!--
  ~ Copyright (c) 2010-2011, J. Craig Venter Institute, Inc.
  ~
  ~ This file is part of JCVI VICS.
  ~
  ~ JCVI VICS is free software; you can redistribute it and/or modify it
  ~ under the terms and conditions of the Artistic License 2.0.  For
  ~ details, see the full text of the license in the file LICENSE.txt.  No
  ~ other rights are granted.  Any and all third party software rights to
  ~ remain with the original developer.
  ~
  ~ JCVI VICS is distributed in the hope that it will be useful in
  ~ bioinformatics applications, but it is provided "AS IS" and WITHOUT
  ~ ANY EXPRESS OR IMPLIED WARRANTIES including but not limited to
  ~ implied warranties of merchantability or fitness for any particular
  ~ purpose.  For details, see the full text of the license in the file
  ~ LICENSE.txt.
  ~
  ~ You should have received a copy of the Artistic License 2.0 along with
  ~ JCVI VICS.  If not, the license can be obtained from
  ~ "http://www.perlfoundation.org/artistic_license_2_0."
  -->

<project name="build-module-build">

    <!-- Import all the generic module targets -->
    <!--<import file="../buildprocess/build-module.xml"/>-->

	<!-- Compiles all code in ${src.dir} into ${build.classes.dir} -->
	<target name="compile" depends="setup, make-classes-dir, make-lib-dir" if="src.dir.exists">
		<!-- Aggregate the final classpath -->
        <path id="compile.classpath.final">
            <path refid="compile.classpath.additional"/> <!-- set by the calling module -->
            <path refid="compile.classpath.jaxb" />
            <fileset dir="${lib.dir}" includes="**/*.jar" />
        </path>
        <!-- Compile -->
        <javac srcdir="${src.dir}" destdir="${build.classes.dir}"
               debug="${compile.debug}" optimize="${compile.optimize}"
               deprecation="${compile.deprecation}"
               excludes="${compile.excludes}">
            <classpath refid="compile.classpath.final"/>
        </javac>
        <copy todir="${build.classes.dir}">
            <fileset dir="${src.dir}" includes="**/*.properties,**/*.xml"/>
        </copy>
	</target>

	<!-- Makes the lib dir if it doesn't exist (required for the compilation classpath) -->
	<target name="make-lib-dir">
		<mkdir dir="${lib.dir}"/>
	</target>

	<target name="make-classes-dir">
		<mkdir dir="${build.classes.dir}"/>
	</target>

	<!-- Creates the jar named ${jar.name} (as set by calling build file) -->
	<target name="jar" depends="compile, make-jars-dir">
        <jar destfile="${build.jars.dir}/${jar.name}" basedir="${build.classes.dir}"/>
	</target>

	<target name="make-jars-dir">
		<mkdir dir="${build.jars.dir}"/>
	</target>
</project>
