<?xml version="1.0"?>
<!--
  ~ Copyright (c) 2010-2011, J. Craig Venter Institute, Inc.
  ~
  ~ This file is part of JCVI VICS.
  ~
  ~ JCVI VICS is free software; you can redistribute it and/or modify it
  ~ under the terms and conditions of the Artistic License 2.0.  For
  ~ details, see the full text of the license in the file LICENSE.txt.  No
  ~ other rights are granted.  Any and all third party software rights to
  ~ remain with the original developer.
  ~
  ~ JCVI VICS is distributed in the hope that it will be useful in
  ~ bioinformatics applications, but it is provided "AS IS" and WITHOUT
  ~ ANY EXPRESS OR IMPLIED WARRANTIES including but not limited to
  ~ implied warranties of merchantability or fitness for any particular
  ~ purpose.  For details, see the full text of the license in the file
  ~ LICENSE.txt.
  ~
  ~ You should have received a copy of the Artistic License 2.0 along with
  ~ JCVI VICS.  If not, the license can be obtained from
  ~ "http://www.perlfoundation.org/artistic_license_2_0."
  -->

<project name="continuous" default="build-all" basedir=".">
    <property file="${basedir}/../buildprocess/config/${user.name}.properties" />

    <path id="svnant.classpath">
        <fileset dir="${basedir}/../common/Subversion" includes="*.jar"/>
    </path>

    <typedef resource="org/tigris/subversion/svnant/svnantlib.xml" classpathref="svnant.classpath" />

    <!-- Common properties -->
	<property name="project.root" value="${basedir}/.."/>

    <!-- CVS Build-all: runs 'build' on all sub-modules, in order of dependency -->
    <target name="build-all" depends="delete-all" description="Runs 'clean' and 'build' on all sub-modules">
    <!-- Get the latest from SVN -->
        <svn>
          <checkout url="http://isvn/CAMERA/camera/trunk/" revision="HEAD" destPath="${project.root}"/>
        </svn>
        <subant target="build-all" verbose="true">
            <filelist dir="${project.root}">
                <file name="buildprocess/build-all.xml"/>
            </filelist>
        </subant>
    </target>

    <!-- Build-all: runs 'test' on all sub-modules, in order of dependency -->
    <target name="test-all" description="Runs 'test' on all sub-modules">
        <subant target="test-all" verbose="true">
            <filelist dir="${project.root}">
                <file name="buildprocess/build-all.xml"/>
            </filelist>
        </subant>
    </target>

	<!-- Clean-all: runs 'clean' on all sub-modules -->
	<target name="delete-all" description="Deletes on all sub-modules">
        <delete dir="${project.root}/jacs" includeemptydirs="true"/>
        <delete dir="${project.root}/model"  includeemptydirs="true"/>
        <delete dir="${project.root}/compute"  includeemptydirs="true"/>
        <delete dir="${project.root}/shared"  includeemptydirs="true"/>
        <!--<subant target="clean-all" verbose="true">-->
            <!--<filelist dir="${project.root}">-->
                <!--<file name="buildprocess/build-all.xml"/>-->
            <!--</filelist>-->
        <!--</subant>-->
	</target>

    <!-- Clean-all-reports: runs 'clean-reports' on all sub-modules -->
    <target name="clean-all-reports" description="Runs 'clean-reports' on all sub-modules">
        <subant target="clean-all-reports" verbose="true">
            <filelist dir="${project.root}">
                <file name="buildprocess/build-all.xml"/>
            </filelist>
        </subant>
    </target>

    <!-- Clean-all: runs 'clean-all' on all sub-modules -->
    <target name="clean-all" description="Runs 'clean-all' on all sub-modules">
        <subant target="clean-all" verbose="true">
            <filelist dir="${project.root}">
                <file name="buildprocess/build-all.xml"/>
            </filelist>
        </subant>
    </target>

    <!-- depends="clean-all, build-all"  -->
    <target name="build-nightly" depends="clean-all, build-all, test-all"
            description="Builds the entire project and deploys into the Integration environment (used by CI tool)">
        <!-- Copy over the webapp -->
          <!--<exec dir="${project.root}/jacs/build/wars" executable="${scp}">-->
            <!--<arg line="${project.root}/jacs/build/wars/jacs.war camweb:/usr/local/apache-tomcat-6.0.14-2/webapps/."/>-->
        <!--</exec>-->
        <!-- Copy over the compute module to the JBoss directory -->
        <!--<exec dir="${project.root}/compute/build/jars" executable="${scp}">-->
            <!--<arg line="${project.root}/compute/build/jars/compute.ear camapp:/usr/local/jboss-4.2.1.GA/server/default/deploy/."/>-->
        <!--</exec>-->
        <!-- Copy over the JAAS jar into Tomcat directory -->
        <!--<exec dir="${project.root}/jacs/build/jars" executable="${scp}">-->
            <!--<arg line="${project.root}/jacs/build/jars/jacs-jaasplugin.jar camweb:/usr/local/apache-tomcat-6.0.14-2/common/lib/."/>-->
        <!--</exec>-->
        <!-- Copy over the JAAS jar into Tomcat directory -->
        <!--<exec dir="${project.root}/jacs/conf" executable="${scp}">-->
            <!--<arg line="${project.root}/jacs/conf/jaas.config camweb:/usr/local/apache-tomcat-6.0.14-2/conf/."/>-->
        <!--</exec>-->
        <!--<exec executable="${ssh}">-->
            <!--<arg line="camweb chmod +r /usr/local/jboss-4.2.1.GA/server/default/deploy"/>-->
        <!--</exec>-->
    </target>
</project>
