 <!-- 
      Run the neuron separator on a given input file for a given sample. 
 -->
 <process name="MultiColor FlipOut Separation Pipeline" processor="queue/mcfoSeparationPipelineLauncher" startEvent="pending" updateProcessStatus="on_success">
	<sequence>
	    
	    <!-- Import variables from the MCFOSeparationPipelineTask -->
	    <operation name="Import Variables" processor="org.janelia.it.jacs.compute.service.common.InitVariablesFromTaskService">
            <input name="TASK_PARAMETER_1" value="sample entity id"/>
            <input name="PROCESS_VARIABLE_1" value="SAMPLE_ENTITY_ID"/>
            <input name="TASK_PARAMETER_2" value="input filename"/>
            <input name="PROCESS_VARIABLE_2" value="INPUT_FILENAME"/>
            <input name="TASK_PARAMETER_3" value="result entity name"/>
            <input name="PROCESS_VARIABLE_3" value="RESULT_ENTITY_NAME"/>
            <input name="TASK_PARAMETER_5" value="signal channel indexes"/>
            <input name="PROCESS_VARIABLE_5" value="SIGNAL_CHANNELS"/>
            <input name="TASK_PARAMETER_6" value="reference channel index"/>
            <input name="PROCESS_VARIABLE_6" value="REFERENCE_CHANNELS"/>
	        <output name="SAMPLE_ENTITY_ID"/>
	        <output name="INPUT_FILENAME"/>
	        <output name="RESULT_ENTITY_NAME"/>
	        <output name="SIGNAL_CHANNELS"/>
	        <output name="REFERENCE_CHANNELS"/>
	    </operation>
	    
	    <!-- Create a sample result node, with nested result nodes for all the pipeline steps -->
	    <operation name="Create Sample Result Nodes" processor="org.janelia.it.jacs.compute.service.entity.CreateSeparationResultFileNodeService">
	        <output name="RESULT_FILE_NODE"/>
	        <output name="RESULT_FILE_NODE_ID"/>
	        <output name="SEPARATE_RESULT_FILE_NODE"/>
	    </operation>
            
	    <!-- Read from the Entity model and export the data into parameters that will be used by the subsequent services -->
	    <operation name="Create Parameters" processor="org.janelia.it.jacs.compute.service.entity.InitSeparationParametersService">
			<input name="SAMPLE_ENTITY_ID"/>
			<input name="RESULT_ENTITY_NAME"/>
			<output name="PREVIOUS_RESULT_ID"/>
			<output name="PREVIOUS_RESULT_FILENAME"/>
		</operation>
		
	    <!-- Run neuron separation on the stitched result -->
        <sequence name="Neuron Separation" waitForAsync="true">
		    <operation name="Neuron Separation" processor="queue/gridSubmitAndWait">
		        <input name="iservice" value="org.janelia.it.jacs.compute.service.neuronSeparator.NeuronSeparationPipelineGridService"/>
				<input name="SEPARATE_RESULT_FILE_NODE"/>
	    		<input name="RESULT_FILE_NODE" value="$V{SEPARATE_RESULT_FILE_NODE}"/>
				<input name="INPUT_FILENAME"/>
	            <input name="SIGNAL_CHANNELS"/>
				<input name="REFERENCE_CHANNEL"/>
				<input name="PREVIOUS_RESULT_FILENAME"/>
		    </operation>
        </sequence>

	    <!-- Load the separation results into the database -->
		<operation name="Discover Neuron Separation Results" processor="org.janelia.it.jacs.compute.service.fileDiscovery.NeuronSeparatorResultsDiscoveryService">
			<input name="SEPARATE_RESULT_FILE_NODE"/>
			<input name="ROOT_FILE_NODE" value="$V{SEPARATE_RESULT_FILE_NODE}"/>
			<input name="SAMPLE_ENTITY_ID"/>
			<input name="ROOT_ENTITY_ID" value="$V{SAMPLE_ENTITY_ID}"/>
			<input name="RESULT_ENTITY_NAME"/>
	    </operation>

	    <!-- Copy LSM metadata files -->
	    <operation name="Copy Lsm Metadata Files" processor="org.janelia.it.jacs.compute.service.entity.MigrateLsmMetadataFilesService">
	        <input name="SAMPLE_ENTITY_ID"/>
	        <input name="SEPARATE_RESULT_FILE_NODE"/>
	    </operation>
			
    </sequence>
    
</process>