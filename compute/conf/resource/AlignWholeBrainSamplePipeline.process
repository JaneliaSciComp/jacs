 <!-- 
	Run the 63x whole brain aligner on the given sample, which is hopefully a WHOLE_BRAIN sample.  
-->
 <process name="Align Whole Brain Sample Pipeline" processor="queue/mcfoSamplePipelineLauncher" startEvent="pending">
	<sequence>
	    
	    <!-- Import variables from the MCFOSamplePipelineTask -->
	    <operation name="Import Variables" processor="org.janelia.it.jacs.compute.service.common.InitVariablesFromTaskService">
            <input name="TASK_PARAMETER_1" value="sample entity id"/>
            <input name="PROCESS_VARIABLE_1" value="SAMPLE_ENTITY_ID"/>
            <input name="TASK_PARAMETER_2" value="refresh alignment"/>
            <input name="PROCESS_VARIABLE_2" value="REFRESH_ALIGNMENT"/>
            <input name="TASK_PARAMETER_3" value="refresh separation"/>
            <input name="PROCESS_VARIABLE_3" value="REFRESH_SEPARATION"/>
	        <output name="SAMPLE_ENTITY_ID"/>
	        <output name="REFRESH_ALIGNMENT"/>
	        <output name="REFRESH_SEPARATION"/>
	    </operation>
	    
	    <!-- Decide which types of processing will be run -->
	    <operation name="Choose Sample Processing Steps" processor="org.janelia.it.jacs.compute.service.entity.ChooseAlignWholeBrainSampleStepsService">
			<input name="SAMPLE_ENTITY_ID"/>
			<input name="REFRESH_ALIGNMENT"/>
			<input name="REFRESH_SEPARATION"/>
			<output name="RUN_ALIGNMENT"/>
			<output name="RUN_ALIGNED_SEPARATION"/>
			<output name="IS_ALIGNABLE"/>
			<output name="STITCHED_FILENAME"/>
			<output name="ALIGNED_FILENAME"/>
		</operation>
			        
    	<sequence if="IS_ALIGNABLE=true">
    	
	        <sequence if="RUN_ALIGNMENT=true">
			
			    <!-- Create a alignment result node, with nested result nodes for all the pipeline steps -->
			    <operation name="Create Alignment Result Nodes" processor="org.janelia.it.jacs.compute.service.entity.CreateAlignmentResultFileNodeService">
			        <output name="RESULT_FILE_NODE"/>
			        <output name="RESULT_FILE_NODE_ID"/>
			        <output name="ALIGN_RESULT_FILE_NODE"/>
			    </operation>
		                
			    <!-- Read from the Entity model and export the data into parameters that will be used by the subsequent services -->
			    <operation name="Create Parameters" processor="org.janelia.it.jacs.compute.service.entity.InitAlignmentParametersService">
					<input name="SAMPLE_ENTITY_ID"/>
					<input name="ALIGNMENT_TYPE" value="ALIGN_TYPE_WHOLE_63X"/>
					<output name="ALIGNMENT_SERVICE_CLASS"/>
					<output name="ALIGNMENT_RESULT_NAME"/>
				</operation>
			    
		   	    <!-- Align the sample -->
		        <sequence name="Align" waitForAsync="true">
			        <operation name="Align" processor="queue/gridSubmitAndWait">
						<input name="ALIGNMENT_SERVICE_CLASS"/>
			            <input name="iservice" value="$V{ALIGNMENT_SERVICE_CLASS}"/>
						<input name="ALIGN_RESULT_FILE_NODE"/>
			    		<input name="RESULT_FILE_NODE" value="$V{ALIGN_RESULT_FILE_NODE}"/>
			    		<input name="STITCHED_FILENAME"/>
						<input name="INPUT_FILENAME" value="$V{STITCHED_FILENAME}"/>
						<output name="ALIGNED_FILENAME"/>
			        </operation>
		        </sequence>
		        
			    <!-- Load the alignment results into the database -->
				<operation name="Discover Alignment Results" processor="org.janelia.it.jacs.compute.service.fileDiscovery.SupportingFilesDiscoveryService">
					<input name="ALIGN_RESULT_FILE_NODE"/>
					<input name="ROOT_FILE_NODE" value="$V{ALIGN_RESULT_FILE_NODE}"/>
					<input name="SAMPLE_ENTITY_ID"/>
					<input name="ROOT_ENTITY_ID" value="$V{SAMPLE_ENTITY_ID}"/>
					<input name="RESULT_ENTITY_TYPE" value="Alignment Result"/>
					<input name="ALIGNMENT_RESULT_NAME"/>
					<input name="RESULT_ENTITY_NAME" value="$V{ALIGNMENT_RESULT_NAME}"/>
			    </operation>
			    
		    </sequence>
		    
	    	<sequence if="RUN_ALIGNED_SEPARATION=true">
		        	
				<!-- Run neuron separation on aligned data -->
		        <include name="Aligned Neuron Separation" process="MCFOSeparationPipeline">
		            <input name="SAMPLE_ENTITY_ID"/>
		            <input name="ALIGNED_FILENAME"/>
		            <input name="INPUT_FILENAME" value="$V{ALIGNED_FILENAME}"/>
		            <input name="RESULT_ENTITY_NAME" value="Aligned 63x Neuron Separation"/>
		        </include>
		        
	    	</sequence>
	    	
	    </sequence>
    	
    </sequence>
</process>