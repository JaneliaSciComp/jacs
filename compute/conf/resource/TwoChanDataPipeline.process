<!-- 
	Run the two chan pipeline for all optic lobes.
-->
<process name="Two Chan Data Pipeline" processor="queue/mcfoDataPipelineLauncher" startEvent="pending">
	<sequence>
	
	    <!-- Import variables from the MCFODataPipelineTask -->
	    <operation name="Import Variables" processor="org.janelia.it.jacs.compute.service.common.InitVariablesFromTaskService">
            <input name="TASK_PARAMETER_1" value="refresh alignment"/>
            <input name="PROCESS_VARIABLE_1" value="REFRESH_ALIGNMENT"/>
	        <output name="REFRESH_ALIGNMENT"/>
	    </operation>
		
	    <!-- Find all the OPTIC_TILE sample entities -->
		<operation name="Entity Tree Traversal" processor="org.janelia.it.jacs.compute.service.entity.TilingPatternTraversalService">
			<input name="OUTVAR_ENTITY_ID" value="SAMPLE_ENTITY_ID"/>
			<input name="TILING_PATTERN" value="OPTIC_TILE"/>
		</operation>
		
	    <!-- Process each Sample Entity -->
        <sequence forEach="SAMPLE_ENTITY_ID">
            <sequence>
			
				<!-- Spawn a new task to process the Sample	-->
		        <operation name="Process Sample Subtask" processor="org.janelia.it.jacs.compute.service.common.SubTaskExecutionService">
        			<input name="TASK_CLASS" value="org.janelia.it.jacs.model.tasks.fileDiscovery.MCFOSamplePipelineTask"/>
        			<input name="WAIT_FOR_COMPLETION" value="false"/>
		            <input name="PROCESS_DEF_NAME" value="TwoChanSamplePipeline"/>
		            <input name="PARAMETER_1_KEY" value="sample entity id"/>
		            <input name="SAMPLE_ENTITY_ID"/>
		            <input name="PARAMETER_1_VALUE" value="$V{SAMPLE_ENTITY_ID}"/>
		        </operation>
		        
			</sequence>
	    </sequence>
	    
    </sequence>
</process>