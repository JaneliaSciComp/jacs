<!--
  ~ Copyright (c) 2010-2011, J. Craig Venter Institute, Inc.
  ~
  ~ This file is part of JCVI VICS.
  ~
  ~ JCVI VICS is free software; you can redistribute it and/or modify it
  ~ under the terms and conditions of the Artistic License 2.0.  For
  ~ details, see the full text of the license in the file LICENSE.txt.  No
  ~ other rights are granted.  Any and all third party software rights to
  ~ remain with the original developer.
  ~
  ~ JCVI VICS is distributed in the hope that it will be useful in
  ~ bioinformatics applications, but it is provided "AS IS" and WITHOUT
  ~ ANY EXPRESS OR IMPLIED WARRANTIES including but not limited to
  ~ implied warranties of merchantability or fitness for any particular
  ~ purpose.  For details, see the full text of the license in the file
  ~ LICENSE.txt.
  ~
  ~ You should have received a copy of the Artistic License 2.0 along with
  ~ JCVI VICS.  If not, the license can be obtained from
  ~ "http://www.perlfoundation.org/artistic_license_2_0."
  -->

<process name="ReversePsiBlast"  startEvent="pending" processor="queue/rpsBlastLauncher" >
    <sequence name="reversePsiBlastLauncher">
        <!-- create result node via ejb to persist node to db and allow it to be accessed/updated by subsequent mdb calls -->
        <operation name="Create Reverse Psi Blast File Node" processor="compute/ReversePsiBlastCreateResultNodeSLSB/local"/>
        <operation name="Create Fasta Input"  processor="org.janelia.it.jacs.compute.service.reversePsiBlast.ReversePsiBlastMultiFastaSplitterService">
            <input name="RESULT_FILE_NODE_ID"/>
            <output name="INPUT_FILE"/>
            <output name="MAX_RESULTS_PER_JOB"/>
            <output name="PARTITION_LIST"/>
            <output name="MAX_OUTPUT_SIZE"/>
            <output name="MAX_INPUT_ENTRIES_PER_JOB"/>
            <output name="MAX_NUMBER_OF_JOBS"/>
            <output name="OUTPUT_ADDITIONAL_SIZE"/>
            <output name="PER_INPUT_ENTRY_SIZE_MULTIPLIER"/>
            <output name="POST_SPLIT_INPUT_FILE_LIST"/>
        </operation>
        <operation name="Create Output Directories" processor="org.janelia.it.jacs.compute.service.common.file.CreateOutputDirsService">
            <input name="RESULT_FILE_NODE_ID"/>
            <output name="OUTPUT_DIR_LIST"/>
            <output name="INPUT_OUTPUT_DIR_MAP"/>
        </operation>
        <sequence name="ReversePsiBlast Submit Job" waitForAsync="true">
            <operation name="Submit Job" processor="queue/gridSubmitAndWait">
                <input name="iservice" value="org.janelia.it.jacs.compute.service.reversePsiBlast.ReversePsiBlastSubmitJobService"/>
                <input name="RESULT_FILE_NODE_ID"/>
                <input name="PARTITION_LIST"/>
                <input name="POST_SPLIT_INPUT_FILE_LIST"/>
                <input name="INPUT_OUTPUT_DIR_MAP"/>
                <input name="OUTPUT_DIR_LIST"/>
                <output name="INPUT_OUTPUT_FILE_LIST_MAP"/>
            </operation>
        </sequence>
        <!-- assume each ReversePsiBlast DB has only one partition, so no need to merge/sort its results -->
        <sequence name="ReversePsiBlast Persist Blast XML Results" waitForAsync="true">
            <operation name="Persist Blast XML Results" processor="queue/gridSubmitAndWait">
                <input name="iservice" value="org.janelia.it.jacs.compute.service.reversePsiBlast.PersistFinalXMLResultsGridService"/>
                <input name="RESULT_FILE_NODE_ID"/>                
                <input name="OUTPUT_DIR_LIST"/>
            </operation>
        </sequence>
        <operation name="Zip Blast Results" processor="org.janelia.it.jacs.compute.service.common.zip.ZipService"  updateProcessStatus="on_success">
            <input name="mode" value="compress" />
            <input name="sourceDir" value="$V{RESULT_FILE_NODE_DIR}" />
            <input name="sourceFilePattern" value="blastResults\.[\w]*" />
            <input name="zipFileDestDir" value="$V{RESULT_FILE_NODE_DIR}" />
            <input name="zipFileName" value="blastResults.zip" />  -->
        </operation>
        <operation name="Delete Output Dirs" processor="org.janelia.it.jacs.compute.service.common.file.FileService" async="true" haltOnError="false" updateProcessStatus="never"> -->
            <input name="mode" value="delete" /> -->
            <input name="sourceDir" value="$V{RESULT_FILE_NODE_DIR}" />
            <input name="sourceFilePattern" value="r_[\w\.]*" />
            <input name="RESULT_FILE_NODE_DIR" />
        </operation>
        <operation name="Delete Input Fasta File" processor="org.janelia.it.jacs.compute.service.common.file.FileService" async="true" haltOnError="false" updateProcessStatus="never">
              <input name="mode" value="delete" />
              <input name="sourceDir" value="$V{RESULT_FILE_NODE_DIR}" />
              <input name="sourceFilePattern" value="[\w\.]*.fasta" />
              <input name="RESULT_FILE_NODE_DIR" />
        </operation>
        <!-- Hopefully, delete of a* in the blast result directory is not too stupid -->
        <operation name="Delete Split Fasta Files" processor="org.janelia.it.jacs.compute.service.common.file.FileService" async="true" haltOnError="false" updateProcessStatus="never">
              <input name="mode" value="delete" />
              <input name="sourceDir" value="$V{RESULT_FILE_NODE_DIR}" />
              <input name="sourceFilePattern" value="a[\S]*" />
              <input name="RESULT_FILE_NODE_DIR" />
        </operation>
    </sequence>
</process>