 <!-- 
      Process a dual sample (20x, 63x) where the two samples have already been processed. This final step
      aligns the 63x into the 20x.
 -->
 <process name="FlyLight Dual Sample Pipeline" processor="queue/samplePipelineLauncher" startEvent="pending">
	<sequence name="Main">
	
    	<input name="SAMPLE_ENTITY_ID"/>
        <input name="PIPELINE_NAME"/>
        <input name="PIPELINE_PROCESS"/>
        <input name="ALIGNMENT_ALGORITHMS"/>
        <input name="ALIGNMENT_ALGORITHM_PARAMS"/>
        <input name="ANALYSIS_ALGORITHMS"/>
        
        <!-- Create the pipeline run entity -->
        <operation name="Create Pipeline Run Entity" processor="org.janelia.it.jacs.compute.service.entity.sample.CreatePipelineRunEntityService">
            <input name="SAMPLE_ENTITY_ID"/>
            <input name="PIPELINE_NAME"/>
            <input name="PIPELINE_PROCESS"/>
            <output name="PIPELINE_RUN_ENTITY_ID"/>
        </operation>
        
        <!-- Decide which types of processing will be run -->
        <operation name="Choose Next Steps" processor="org.janelia.it.jacs.compute.service.entity.sample.ChoosePostSampleProcessingStepsService">
            <input name="ALIGNMENT_ALGORITHMS"/>
            <input name="ALIGNMENT_ALGORITHM_PARAMS"/>
            <input name="ANALYSIS_ALGORITHMS"/>
            <output name="RUN_ALIGNMENT"/>
            <output name="RUN_ANALYSIS"/>
            <output name="PARAMETERIZED_ALIGNMENT_ALGORITHM"/>
            <output name="ANALYSIS_ALGORITHM"/>
        </operation>
        
        <sequence if="RUN_ALIGNMENT=true">
            <sequence forEach="PARAMETERIZED_ALIGNMENT_ALGORITHM">
                <sequence>
                    
                    <include name="Brain Alignment" process="FlyLightAlignmentPipeline">
                        <input name="PIPELINE_RUN_ENTITY_ID"/>
                        <input name="SAMPLE_ENTITY_ID"/>
                        <input name="PARAMETERIZED_ALIGNMENT_ALGORITHM"/>
                        <input name="RUN_ANALYSIS"/>
                        <input name="ANALYSIS_ALGORITHM"/>
                    </include>
                    
                </sequence>
            </sequence>
        </sequence>

		<!-- Compress all the v3draw files we created  -->
        <include name="Compress raw files" process="SampleDataCompression">
            <input name="ROOT_ENTITY_ID" value="$V{SAMPLE_ENTITY_ID}"/>
        </include>
        
	    <exceptionHandler>
	    
		    <!-- Log the exception into the Pipeline Run -->
			<operation name="Handle exceptions" processor="org.janelia.it.jacs.compute.service.entity.sample.CreateErrorEntityService">
				<input name="ROOT_ENTITY_ID" value="$V{PIPELINE_RUN_ENTITY_ID}"/>
				<input name="PROCESSING_EXCEPTION"/>
		    </operation>
		
	    </exceptionHandler>
	    
    </sequence>
    
</process>