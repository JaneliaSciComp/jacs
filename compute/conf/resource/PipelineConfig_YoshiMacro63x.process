<process name="Yoshi 63x Fiji Macro" processor="queue/samplePipelineLauncher" startEvent="pending" updateProcessStatus="on_success">
	<sequence>
    
        <input name="PIPELINE_PROCESS"/>
        <input name="SAMPLE_ENTITY_ID"/>
        <input name="CHANNEL_DYE_SPEC"/>
        <input name="OUTPUT_CHANNEL_ORDER"/>
        <input name="OUTPUT_COLOR_SPEC"/>
        <input name="MACRO_NAME"/>
    
        <!-- By default, use ordered merged -->
        <operation name="Init Variables" processor="org.janelia.it.jacs.compute.service.common.InitVariablesService">
            <input name="MERGE_ALGORITHM"/>
            <input name="OVERRIDE" value="false"/>
            <input name="PROCESS_VARIABLE_1" value="MERGE_ALGORITHM"/>
            <input name="PROCESS_VARIABLE_VALUE_1" value="FLYLIGHT_ORDERED"/>
            <output name="MERGE_ALGORITHM"/>
        </operation>
        
        <!-- Read from the Entity model and export the data into parameters that will be used by the subsequent services -->
        <operation name="Get Sample Attributes" processor="org.janelia.it.jacs.compute.service.entity.sample.InitSampleAttributesService">
            <input name="SAMPLE_ENTITY_ID"/>
            <output name="SAMPLE_AREA"/>
        </operation>
        
        <sequence forEach="SAMPLE_AREA">
                
            <!-- Decide which types of processing will be run -->
            <operation name="Choose Sample Area Processing Steps" processor="org.janelia.it.jacs.compute.service.entity.sample.ChooseSampleAreaPipelineStepsService">
                <input name="SAMPLE_ENTITY_ID"/>
                <input name="SAMPLE_AREA"/>
                <output name="RUN_MERGE"/>
            </operation>
            
            <!-- Create a result node for this group -->
            <operation name="Create Temp Result Node" processor="org.janelia.it.jacs.compute.service.entity.CreateNamedResultFileNodeService">
                <input name="NAME" value="Temp"/>
                <input name="OUTPUT_VAR_NAME" value="MERGE_RESULT_FILE_NODE"/>
                <output name="MERGE_RESULT_FILE_NODE"/>
                <output name="MERGE_RESULT_FILE_NODE_ID"/>
            </operation>
            
            <!-- Read from the Entity model and export the data into parameters that will be used by the subsequent services -->
            <sequence name="Wait Async" waitForAsync="true">
                <operation name="Init Processing Parameters" processor="org.janelia.it.jacs.compute.service.entity.InitSampleProcessingParametersService">
                    <input name="MERGE_RESULT_FILE_NODE"/>
                    <input name="SAMPLE_ENTITY_ID"/>
                    <input name="SAMPLE_AREA"/>
                    <output name="BULK_MERGE_PARAMETERS"/>
                </operation>
            </sequence>
            
            <!-- Get the LSM file paths and update the bulk merge parameters to use the copied files -->
            <operation name="Get LSM file paths" processor="org.janelia.it.jacs.compute.service.entity.sample.GetLsmFilePathsService">
                <input name="RESULT_FILE_NODE" value="$V{MERGE_RESULT_FILE_NODE}"/>
                <input name="BULK_MERGE_PARAMETERS"/>
                <output name="BULK_MERGE_PARAMETERS"/>
                <output name="LSM_SOURCE_FILE_PATHS"/>
                <output name="LSM_TARGET_FILE_PATHS"/>
            </operation>
        
            <!-- Copy the files from archive -->
            <sequence name="Wait Async" waitForAsync="true">
                <operation name="Copy LSMs" processor="queue/gridSubmitAndWait">
                    <input name="iservice" value="org.janelia.it.jacs.compute.service.utility.ArchiveGridService"/>
                    <input name="RESULT_FILE_NODE" value="$V{MERGE_RESULT_FILE_NODE}"/>
                    <input name="SOURCE_FILE_PATHS" value="$V{LSM_SOURCE_FILE_PATHS}"/>
                    <input name="TARGET_FILE_PATHS" value="$V{LSM_TARGET_FILE_PATHS}"/>
                </operation>
            </sequence>

            <!-- Merge all the LSM pairs in parallel -->
            <sequence name="Merge Lsm Pairs" waitForAsync="true">
                <operation name="Merge Lsm Pairs" processor="queue/gridSubmitAndWait">
                    <input name="iservice" value="org.janelia.it.jacs.compute.service.vaa3d.Vaa3DBulkMergeService"/>
                    <input name="RESULT_FILE_NODE" value="$V{MERGE_RESULT_FILE_NODE}"/>
                    <input name="BULK_MERGE_PARAMETERS"/>
                    <input name="MERGE_ALGORITHM"/>
                </operation>
            </sequence>
        
            <!-- Rearrange the channels on each tile so that they are in the correct output format -->
            <sequence name="Convert to sample image" waitForAsync="true">
                <operation name="Convert to sample image" processor="queue/gridSubmitAndWait">
                    <input name="iservice" value="org.janelia.it.jacs.compute.service.vaa3d.Vaa3DConvertToSampleImageService"/>
                    <input name="RESULT_FILE_NODE" value="$V{MERGE_RESULT_FILE_NODE}"/>
                    <input name="BULK_MERGE_PARAMETERS"/>
                    <input name="MERGE_ALGORITHM"/>
                    <input name="METADATA_RESULT_FILE_NODE"/>
                    <input name="RUN_MERGE"/>
                    <input name="SAMPLE_ENTITY_ID"/>
                    <input name="SAMPLE_AREA"/>
                    <input name="CHANNEL_DYE_SPEC"/>
                    <input name="OUTPUT_CHANNEL_ORDER"/>
                    <output name="CHANNEL_SPEC"/>
                </operation>
            </sequence>
            
        </sequence>
        
        <include name="Pipeline" process="FijiMacroPipeline">
            <input name="PIPELINE_PROCESS"/>
            <input name="SAMPLE_ENTITY_ID"/>
            <input name="CHANNEL_DYE_SPEC"/>
            <input name="OUTPUT_CHANNEL_ORDER"/>
            <input name="PIPELINE_NAME" value="MBEW Pipeline 63x (v6)"/>
            <input name="MACRO_NAME"/>
            <input name="MACRO_CLASS" value="org.janelia.it.jacs.compute.service.image.RunFiji63xTilesAndStitchedFileMacro"/>
            <input name="OBJECTIVE" value="63x"/>
            <input name="MERGED_CHANNEL_SPEC" value="$V{CHANNEL_SPEC}"/>
            <input name="OUTPUT_COLOR_SPEC"/>
        </include>
        
        <!-- We're done with the LSMs -->
        <operation name="Remove Temp Result Nodes" processor="org.janelia.it.jacs.compute.service.entity.TrashFileNodeService">
            <input name="FILE_NODE_ID" value="$V{MERGE_RESULT_FILE_NODE_ID}"/>
        </operation>
        
    </sequence>
</process>