<!-- 
	Compute the cross of two images.
-->
<process name="Compute Image Crosses" processor="queue/consolePipelineLauncher" startEvent="pending" updateProcessStatus="on_success">
	<sequence>
	    
	    <!-- Import variables from the task -->
	    <operation name="Import Variables" processor="org.janelia.it.jacs.compute.service.common.InitVariablesFromTaskService">
            <input name="TASK_PARAMETER_1" value="screen sample 1 id list"/>
            <input name="PROCESS_VARIABLE_1" value="SCREEN_SAMPLE_1_ID_LIST"/>
            <input name="TASK_PARAMETER_2" value="screen sample 2 id list"/>
            <input name="PROCESS_VARIABLE_2" value="SCREEN_SAMPLE_2_ID_LIST"/>
            <input name="TASK_PARAMETER_3" value="output entity id_list"/>
            <input name="PROCESS_VARIABLE_3" value="OUTPUT_ENTITY_ID_LIST"/>
            <input name="TASK_PARAMETER_4" value="intersection method"/>
            <input name="PROCESS_VARIABLE_4" value="INTERSECTION_METHOD"/>
            <input name="TASK_PARAMETER_5" value="kernel size"/>
            <input name="PROCESS_VARIABLE_5" value="KERNEL_SIZE"/>
	        <output name="SCREEN_SAMPLE_1_ID_LIST"/>
	        <output name="SCREEN_SAMPLE_2_ID_LIST"/>
	        <output name="OUTPUT_ENTITY_ID_LIST"/>
	        <output name="INTERSECTION_METHOD"/>
	        <output name="KERNEL_SIZE"/>
	    </operation>
	    
	    <!-- Create a result node for this group -->
	    <operation name="Create Intersection Result Node" processor="org.janelia.it.jacs.compute.service.domain.node.CreateNamedResultFileNodeService">
		    <input name="NAME" value="Intersection"/>
	        <output name="RESULT_FILE_NODE"/>
	        <output name="RESULT_FILE_NODE_ID"/>
	    </operation>
	    
	    <!-- Export the data into parameters that will be used by the subsequent services -->
	    <operation name="Create Parameters" processor="org.janelia.it.jacs.compute.service.domain.InitScreenSampleCrossParametersService">
	    	<input name="RESULT_FILE_NODE"/>
			<input name="SCREEN_SAMPLE_1_ID_LIST"/>
			<input name="SCREEN_SAMPLE_2_ID_LIST"/>
			<output name="FILE_PAIRS"/>
		</operation>
	
	    <!-- Intersect all the image pairs in parallel -->
        <sequence name="Intersect Image Pairs" waitForAsync="true">
	        <operation name="Intersect Image Pairs" processor="queue/gridSubmitAndWait">
	            <input name="iservice" value="org.janelia.it.jacs.compute.service.vaa3d.Vaa3DBulkIntersectionService"/>
				<input name="RESULT_FILE_NODE"/>
				<input name="FILE_PAIRS"/>
				<input name="INTERSECTION_METHOD"/>
				<input name="KERNEL_SIZE"/>
	        </operation>
        </sequence>
        
	    <!-- Load the results into the database -->
		<operation name="Discover Intersection Results" processor="org.janelia.it.jacs.compute.service.fileDiscovery.ScreenSampleCrossResultsDiscoveryService">
			<input name="RESULT_FILE_NODE"/>
			<input name="FILE_PAIRS"/>
			<input name="OUTPUT_ENTITY_ID_LIST"/>
	    </operation>
    	
    </sequence>
</process>