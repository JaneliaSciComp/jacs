<!--

	General loader for adding filesystem content to JACS/Workstation.

	This pipeline will add the folder tree under the root directory path by creating an entity tree which matches
	the loaded tree.

	The twist is that two kinds of artifacts will be generated:

	1) MIPs
	2) 3D compressed stacks (.v3dpbd)

	When "Reveal in Finder" is used, the original path of each entity will bring the user to the source location.

	However, if a right-click action to V3D is executed, this will caues V3D to check for a proxy-path attribute
	which will point to the .v3dpbd stack.

-->

<process name="File Tree Loader Pipeline" processor="queue/fileTreeLoaderPipelineLauncher" startEvent="pending" updateProcessStatus="on_success">
	<sequence>
	    <sequence>

    	    <!-- Import basic variables

    	         This service receives instructions below on which key:value pairs to transfer from task parameters
    	         to process parameters. It then sets as outputs some of these parameters so they are available
    	         to downstream steps. -->

    	    <operation name="Import Variables" processor="org.janelia.it.jacs.compute.service.common.InitVariablesFromTaskService">
                <input name="TASK_PARAMETER_1" value="top level folder name"/>
                <input name="PROCESS_VARIABLE_1" value="TOP_LEVEL_FOLDER_NAME"/>
                <input name="TASK_PARAMETER_2" value="root directory path"/>
                <input name="PROCESS_VARIABLE_2" value="FILE_TREE_ROOT_DIRECTORY"/>
                <input name="TASK_PARAMETER_3" value="files uploaded"/>
                <input name="PROCESS_VARIABLE_3" value="FILES_UPLOADED"/>
                <input name="TASK_PARAMETER_4" value="top level folder id"/>
                <input name="PROCESS_VARIABLE_4" value="TOP_LEVEL_FOLDER_ID"/>
                <output name="TOP_LEVEL_FOLDER_NAME"/>
                <output name="FILE_TREE_ROOT_DIRECTORY"/>
                <output name="FILES_UPLOADED"/>
                <output name="TOP_LEVEL_FOLDER_ID"/>
    	    </operation>

	    	<operation name="Initial File Discovery" processor="org.janelia.it.jacs.compute.service.fileDiscovery.FileTreeLoaderService">
	    	    <input name="MODE" value="SETUP"/>
    			<input name="TOP_LEVEL_FOLDER_NAME"/>
    			<input name="FILE_TREE_ROOT_DIRECTORY"/>
                <input name="FILES_UPLOADED"/>
    			<input name="TOP_LEVEL_FOLDER_ID"/>
    			<input name="PBD_SIZE_THRESHOLD" value="5000000"/>
    			<input name="PBD_EXTENSIONS" value="LSM TIF RAW V3DRAW VAA3DRAW"/>
    			<input name="MIP_EXTENSIONS" value="LSM TIF RAW V3DRAW VAA3DRAW V3DPBD PBD"/>
    			<input name="GROUP_SIZE" value="200"/>
    			<output name="GROUP_SIZE"/>
    			<output name="RESULT_NODE"/>
    			<output name="RESULT_NODE_ID"/>
    			<output name="PBD_INDEX"/>
    			<output name="MIP_INDEX"/>
    			<output name="FILE_TREE_ROOT_DIRECTORY"/>
    		</operation>

	        <!-- Do pbds first -->
	        <sequence forEach="PBD_INDEX" waitForAsync="true">
	            <sequence async="true">
	                <sequence>

				        <!-- Service instance for processing each PBD Group. This also adds to the MIP Groups -->
				        <operation name="Create PBD Lists" processor="org.janelia.it.jacs.compute.service.fileDiscovery.FileTreeLoaderService">
				            <input name="MODE" value="PBDLIST"/>
				            <input name="GROUP_SIZE"/>
				            <input name="PBD_INDEX"/>
 			                <input name="TOP_LEVEL_FOLDER_NAME"/>
    			            <input name="FILE_TREE_ROOT_DIRECTORY"/>
    				        <output name="PBD_RESULT_NODE"/>
				            <output name="PBD_INPUT_LIST"/>
				            <output name="PBD_OUTPUT_LIST"/>
				        </operation>

                        <sequence name="PBD Generation" waitForAsync="true">
        		            <operation name="PBD Generation" processor="queue/gridSubmitAndWait">
        				        <input name="iservice" value="org.janelia.it.jacs.compute.service.vaa3d.Vaa3DConversionService"/>
                                <input name="IGNORE_ERRORS" value="true"/>
                                <input name="PBD_RESULT_NODE"/>
        				        <input name="PBD_INPUT_LIST"/>
        				        <input name="PBD_OUTPUT_LIST"/>
        				        <input name="OUTPUT_8BIT" value="true"/>
        		                <input name="RESULT_FILE_NODE" value="$V{PBD_RESULT_NODE}"/>
        	    		        <input name="OUTPUT_FILE_NODE" value="$V{PBD_RESULT_NODE}"/>
       		    		        <input name="INPUT_PATH_LIST" value="$V{PBD_INPUT_LIST}"/>
   						        <input name="OUTPUT_PATH_LIST" value="$V{PBD_OUTPUT_LIST}"/>
        				    </operation>
        			    </sequence>

        	        </sequence>
        	    </sequence>
            </sequence>

            <operation name="Synchronize updated MIP_INDEX after PBD" processor="org.janelia.it.jacs.compute.service.fileDiscovery.FileTreeLoaderService">
                <input name="MODE" value="MIPSYNC"/>
				<input name="GROUP_SIZE"/>
				<input name="MIP_INDEX"/>
 			    <input name="TOP_LEVEL_FOLDER_NAME"/>
    			<input name="FILE_TREE_ROOT_DIRECTORY"/>
    			<output name="MIP_INDEX"/>
            </operation>

	        <!-- Do MIPs next to take advantage of pbd loading -->
	        <sequence forEach="MIP_INDEX" waitForAsync="true">
	            <sequence async="true">
	                <sequence>

				        <!-- Service instance for processing each MIP Group -->
				        <operation name="Create MIP Lists" processor="org.janelia.it.jacs.compute.service.fileDiscovery.FileTreeLoaderService">
				            <input name="MODE" value="MIPLIST"/>
				            <input name="GROUP_SIZE"/>
				            <input name="MIP_INDEX"/>
 			                <input name="TOP_LEVEL_FOLDER_NAME"/>
    			            <input name="FILE_TREE_ROOT_DIRECTORY"/>
				            <output name="MIP_RESULT_NODE"/>
				            <output name="MIP_INPUT_LIST"/>
				            <output name="MIP_OUTPUT_LIST"/>
				        </operation>

                        <sequence name="MIP Generation" waitForAsync="true">
        		            <operation name="MIP Generation" processor="queue/gridSubmitAndWait">
        				        <input name="iservice" value="org.janelia.it.jacs.compute.service.vaa3d.MIPGenerationService"/>
                                <input name="IGNORE_ERRORS" value="true"/>
                                <input name="MIP_RESULT_NODE"/>
        				        <input name="MIP_INPUT_LIST"/>
        				        <input name="MIP_OUTPUT_LIST"/>
        				        <input name="RESULT_FILE_NODE" value="$V{MIP_RESULT_NODE}"/>
        				        <input name="OUTPUT_FILE_NODE" value="$V{MIP_RESULT_NODE}"/>
        				        <input name="INPUT_PATH_LIST" value="$V{MIP_INPUT_LIST}"/>
        				        <input name="OUTPUT_PATH_LIST" value="$V{MIP_OUTPUT_LIST}"/>
        				    </operation>
        			    </sequence>

                        <sequence name="MIP Conversion to PNG" waitForAsync="true">
        		            <operation name="MIP Conversion to PNG" processor="queue/gridSubmitAndWait">
       			                <input name="iservice" value="org.janelia.it.jacs.compute.service.utility.ImageConversionService"/>
        				        <input name="MIP_RESULT_NODE"/>
                                <input name="IGNORE_ERRORS" value="true"/>
                                <input name="RESULT_FILE_NODE" value="$V{MIP_RESULT_NODE}"/>
       		    		        <input name="OUTPUT_FILE_NODE" value="$V{MIP_RESULT_NODE}"/>
   						        <input name="INPUT_FILENAME_REGEX" value="(mip(.*?))\.tif$"/>
        				        <input name="OUTPUT_FILENAME_PATTERN" value="$1.png"/>
        			        </operation>
        			    </sequence>

        	        </sequence>
        	    </sequence>
            </sequence>

            <operation name="Completion Step for Entity Creation" processor="org.janelia.it.jacs.compute.service.fileDiscovery.FileTreeLoaderService">
                <input name="MODE" value="COMPLETE"/>
                <input name="GROUP_SIZE"/>
   			    <input name="RESULT_NODE"/>
    			<input name="RESULT_NODE_ID"/>
 			    <input name="TOP_LEVEL_FOLDER_NAME"/>
    			<input name="FILE_TREE_ROOT_DIRECTORY"/>
     	    </operation>

     	</sequence>
    </sequence>
</process>