<!--
	Computes the annotation for the GAL4 effector anatomical expression patterns for Fly Line Screen Samples.
-->
<process name="Fly Screen Pattern Annotation Pipeline" processor="queue/flyScreenPatternAnnotationPipelineLauncher" startEvent="pending">

	<sequence>

	  	<!-- Import basic variables from the FlyScreenPatternAnnotationTask

    	     This service receives instructions below on which key:value pairs to transfer from task parameters
    	     to process parameters. It then sets as outputs some of these parameters so they are available
    	     to downstream steps. -->

    	<operation name="Import Variables" processor="org.janelia.it.jacs.compute.service.common.InitVariablesFromTaskService">
            <input name="TASK_PARAMETER_1" value="top level folder name"/>
            <input name="PROCESS_VARIABLE_1" value="ROOT_ENTITY_NAME"/>
            <input name="TASK_PARAMETER_2" value="refresh"/>
            <input name="PROCESS_VARIABLE_2" value="REFRESH"/>
    	    <output name="ROOT_ENTITY_NAME"/>
    	    <output name="REFRESH"/>
    	</operation>

        <!-- Loads all of the Fly Screen Samples and makes sure that Fly Line Entities exist which cover all
    	     samples. If there are fly lines which are not represented by a Fly Line Entity, it creates a
    	     new Fly Line Entity to cover the sample. It also makes sure that each Fly Line has the matching
    	     Fly Screen Samples as children.

    	     It produces as output a list of Fly Line groups, where the size of each group is an input parameter.
    	     The intention is that each group is then processable as a unit downstream. -->

    	<operation name="Fly Line Screen Sample Coordination" processor="org.janelia.it.jacs.compute.service.fly.ScreenSampleLineCoordinationService">
            <input name="FLY_LINE_GROUP_SIZE" value="100"/>
            <output name="FLY_LINE_GROUP_LIST"/>
        </operation>

    	<!-- Process each Sample Entity -->
	    <sequence forEach="FLY_LINE_GROUP_LIST">
	            <sequence>

				    <!-- Service instance for processing each Fly Line Group.
				         This service creates result nodes for processing the Fly Line group, and attaches them to the samples.
				         NOTE: If refresh is TRUE, then this will first delete all previous pattern annotation results for the sample. -->

		            <operation name="Setup phase of Pattern Annotation Service" processor="org.janelia.it.jacs.compute.service.fly.PatternAnnotationSampleService">
		                <input name="REFRESH"/>
    		            <input name="MODE" value="SETUP"/>
    		            <input name="FLY_LINE_GROUP_LIST"/>
    		            <input name="QI_MAXIMUM" value="0.5"/>
    		            <input name="QM_MAXIMUM" value="50.0"/>
    		            <output name="SAMPLE_ID_LIST"/>
    		            <output name="SAMPLE_NAME_LIST"/>
    		            <output name="PATTERN_ANNOTATION_PATH"/>
    	                <output name="ALIGNED_STACK_PATH_LIST"/>
    		            <output name="RESOURCE_DIR_PATH"/>
    		            <output name="RESULT_FILE_NODE"/>
    		            <output name="PATTERN_CHANNEL"/>
                    </operation>

                    <sequence name="Compute Pattern Annotation" waitForAsync="true">
       			        <operation name="Pattern Annotation" processor="queue/gridSubmitAndWait">
        			        <input name="iservice" value="org.janelia.it.jacs.compute.service.v3d.V3DPatternAnnotationService"/>
        			        <input name="RESULT_FILE_NODE"/>
    		                <input name="SAMPLE_ID_LIST"/>
    		                <input name="SAMPLE_NAME_LIST"/>
    		                <input name="PATTERN_ANNOTATION_PATH"/>
    	                    <input name="ALIGNED_STACK_PATH_LIST"/>
    	                    <input name="RESOURCE_DIR_PATH"/>
    	                    <input name="PATTERN_CHANNEL"/>
        			    </operation>
        			</sequence>

 	                <sequence forEach="PATTERN_ANNOTATION_PATH">

                        <sequence name="MIP Conversion to PNG" waitForAsync="true">
        		             <operation name="MIP Conversion to PNG" processor="queue/gridSubmitAndWait">
       			                 <input name="iservice" value="org.janelia.it.jacs.compute.service.utility.ImageConversionService"/>
   				                 <input name="RESULT_FILE_NODE"/>
       		    		         <input name="OUTPUT_FILE_NODE" value="$V{RESULT_FILE_NODE}"/>
       		    		         <input name="PATTERN_ANNOTATION_PATH"/>
       		    		         <input name="ALTERNATE_WORKING_DIR_PATH" value="$V{PATTERN_ANNOTATION_PATH}"/>
   						         <input name="INPUT_FILENAME_REGEX" value="((.*?)MIP)\.tif$"/>
        				         <input name="OUTPUT_FILENAME_PATTERN" value="$1.png"/>
        			         </operation>
        			    </sequence>

        			</sequence>

                    <!-- This creates appropriate entities for all results in the proper hierarchy and also cleans up
                         any temporary files -->

        		    <operation name="Completion phase of Pattern Annotation Service" processor="org.janelia.it.jacs.compute.service.fly.PatternAnnotationSampleService">
                        <input name="MODE" value="COMPLETE"/>
       	                <input name="FLY_LINE_GROUP_LIST"/>
    		            <input name="SAMPLE_ID_LIST"/>
    		            <input name="SAMPLE_NAME_LIST"/>
    		            <input name="PATTERN_ANNOTATION_PATH"/>
    	                <input name="ALIGNED_STACK_PATH_LIST"/>
    	                <input name="RESULT_FILE_NODE"/>
     	            </operation>

                </sequence>
  	    </sequence>
    </sequence>
</process>

