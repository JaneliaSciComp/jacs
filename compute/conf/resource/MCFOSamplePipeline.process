 <!-- 
      Fully process a Sample in the database by merging its LSMs, stitching and blending them, 
      running neuron separation, and loading the results back into the database. 
 -->
 <process name="MultiColor FlipOut Sample Pipeline" processor="queue/mcfoSamplePipelineLauncher" startEvent="pending">
	<sequence>
	    
	    <!-- Import variables from the MCFOSamplePipelineTask -->
	    <operation name="Import Variables" processor="org.janelia.it.jacs.compute.service.common.InitVariablesFromTaskService">
            <input name="TASK_PARAMETER_1" value="sample entity id"/>
            <input name="PROCESS_VARIABLE_1" value="SAMPLE_ENTITY_ID"/>
	        <output name="SAMPLE_ENTITY_ID"/>
	    </operation>
	    
	    <!-- Create a sample result node, with nested result nodes for all the pipeline steps -->
	    <operation name="Create Sample Result Nodes" processor="org.janelia.it.jacs.compute.service.entity.CreateSampleResultFileNodeService">
	        <output name="RESULT_FILE_NODE"/>
	        <output name="RESULT_FILE_NODE_ID"/>
	        <output name="SAMPLE_RESULT_FILE_NODE"/>
	        <output name="METADATA_RESULT_FILE_NODE"/>
	        <output name="MERGE_RESULT_FILE_NODE"/>
	        <output name="STITCH_RESULT_FILE_NODE"/>
	    </operation>
	            
	    <!-- Read from the Entity model and export the data into parameters that will be used by the subsequent services -->
	    <operation name="Create Parameters" processor="org.janelia.it.jacs.compute.service.entity.InitV3DSampleParametersService">
			<input name="SAMPLE_RESULT_FILE_NODE"/>
	        <input name="MERGE_RESULT_FILE_NODE"/>
	        <input name="STITCH_RESULT_FILE_NODE"/>
			<input name="SAMPLE_ENTITY_ID"/>
			<output name="BULK_MERGE_PARAMETERS"/>
			<output name="NUM_LSM_PAIRS"/>
			<output name="STITCHED_FILENAME"/>
			<output name="RUN_ALIGNMENT"/>
		</operation>
		
	    <!-- Asynchronously create the metadata describing the input LSM files -->
        <sequence name="Create Lsm Metadata Files" waitForAsync="true">
	        <operation name="Create Lsm Metadata Files" processor="queue/gridSubmitAndWait">
	            <input name="iservice" value="org.janelia.it.jacs.compute.service.entity.CreateLsmMetadataFilesService"/>
		        <input name="SAMPLE_ENTITY_ID"/>
				<input name="METADATA_RESULT_FILE_NODE"/>
		        <input name="RESULT_FILE_NODE" value="$V{METADATA_RESULT_FILE_NODE}"/>
				<input name="SAMPLE_RESULT_FILE_NODE"/>
	    		<input name="OUTPUT_FILE_NODE" value="$V{METADATA_RESULT_FILE_NODE}"/>
	        </operation>
        </sequence>
	    
	    <!-- Merge all the LSM pairs in parallel -->
        <sequence name="Merge Lsm Pairs" waitForAsync="true">
	        <operation name="Merge Lsm Pairs" processor="queue/gridSubmitAndWait">
	            <input name="iservice" value="org.janelia.it.jacs.compute.service.v3d.V3DBulkMergeService"/>
				<input name="MERGE_RESULT_FILE_NODE"/>
	    		<input name="RESULT_FILE_NODE" value="$V{MERGE_RESULT_FILE_NODE}"/>
				<input name="BULK_MERGE_PARAMETERS"/>
	        </operation>
        </sequence>
	
	    <!-- Stitch the merged files into a single result -->
        <sequence name="Stitch and Blend" waitForAsync="true">
	        <operation name="Stitch and Blend" processor="queue/gridSubmitAndWait">
	            <input name="iservice" value="org.janelia.it.jacs.compute.service.v3d.V3DStitchAndBlendService"/>
				<input name="STITCH_RESULT_FILE_NODE"/>
	    		<input name="RESULT_FILE_NODE" value="$V{STITCH_RESULT_FILE_NODE}"/>
				<input name="MERGE_RESULT_FILE_NODE"/>
	    		<input name="INPUT_FILE_NODE" value="$V{MERGE_RESULT_FILE_NODE}"/>
				<input name="BULK_MERGE_PARAMETERS"/>
				<input name="STITCHED_FILENAME"/>
	        </operation>
        </sequence>
			
	    <!-- Load the sample analysis results into the database -->
		<operation name="Discover Neuron Separation Results" processor="org.janelia.it.jacs.compute.service.fileDiscovery.SampleProcessingResultsDiscoveryService">
			<input name="SAMPLE_RESULT_FILE_NODE"/>
			<input name="ROOT_FILE_NODE" value="$V{SAMPLE_RESULT_FILE_NODE}"/>
			<input name="SAMPLE_ENTITY_ID"/>
			<input name="ROOT_ENTITY_ID" value="$V{SAMPLE_ENTITY_ID}"/>
			<input name="RESULT_ENTITY_NAME" value="Sample Processing"/>
	    </operation>
	    
        <sequence waitForAsync="true">
                    
            <sequence async="true">
			
				<!-- Spawn a new task to process the Separation -->
		        <operation name="Process Sample Subtask" processor="org.janelia.it.jacs.compute.service.common.SubTaskExecutionService">
        			<input name="TASK_CLASS" value="org.janelia.it.jacs.model.tasks.fileDiscovery.MCFOSeparationPipelineTask"/>
		            <input name="PROCESS_DEF_NAME" value="MCFOSeparationPipeline"/>
		            <input name="PARAMETER_1_KEY" value="sample entity id"/>
		            <input name="SAMPLE_ENTITY_ID"/>
		            <input name="PARAMETER_1_VALUE" value="$V{SAMPLE_ENTITY_ID}"/>
		            <input name="PARAMETER_2_KEY" value="input filename"/>
		            <input name="STITCHED_FILENAME"/>
		            <input name="PARAMETER_2_VALUE" value="$V{STITCHED_FILENAME}"/>
		            <input name="PARAMETER_3_KEY" value="result entity name"/>
		            <input name="PARAMETER_3_VALUE" value="Prealigned Neuron Separation"/>
		        </operation>
				
			</sequence>
			
        	<sequence async="true" if="RUN_ALIGNMENT=true" >
		        	
		   	    <!-- Align the stitched results -->
		        <sequence name="Align" waitForAsync="true">
			        <operation name="Align" processor="queue/gridSubmitAndWait">
			            <input name="iservice" value="org.janelia.it.jacs.compute.service.align.BrainAlignmentService"/>
						<input name="ALIGN_RESULT_FILE_NODE"/>
			    		<input name="RESULT_FILE_NODE" value="$V{ALIGN_RESULT_FILE_NODE}"/>
			    		<input name="STITCHED_FILENAME"/>
						<input name="INPUT_FILENAME" value="$V{STITCHED_FILENAME}"/>
						<output name="ALIGNED_FILENAME"/>
			        </operation>
		        </sequence>
		        
				<!-- Spawn a new task to process the Separation -->
		        <operation name="Process Sample Subtask" processor="org.janelia.it.jacs.compute.service.common.SubTaskExecutionService">
        			<input name="TASK_CLASS" value="org.janelia.it.jacs.model.tasks.fileDiscovery.MCFOSeparationPipelineTask"/>
		            <input name="PROCESS_DEF_NAME" value="MCFOSeparationPipeline"/>
		            <input name="PARAMETER_1_KEY" value="sample entity id"/>
		            <input name="SAMPLE_ENTITY_ID"/>
		            <input name="PARAMETER_1_VALUE" value="$V{SAMPLE_ENTITY_ID}"/>
		            <input name="PARAMETER_2_KEY" value="input filename"/>
		            <input name="ALIGNED_FILENAME"/>
		            <input name="PARAMETER_2_VALUE" value="$V{ALIGNED_FILENAME}"/>
		            <input name="PARAMETER_3_KEY" value="result entity name"/>
		            <input name="PARAMETER_3_VALUE" value="Aligned Neuron Separation"/>
		        </operation>

	    	</sequence>
	    	
    	</sequence>
    	
    </sequence>
</process>