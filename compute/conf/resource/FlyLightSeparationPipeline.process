 <!-- 
      Run the neuron separator on a given input file for a given sample. 
 -->
 <process name="FlyLight Separation Pipeline" processor="queue/analysisPipelineLauncher" startEvent="pending" updateProcessStatus="on_success">
	<sequence>
	    
		<input name="SAMPLE_ENTITY_ID"/>
		<input name="OBJECTIVE"/>
		<input name="PIPELINE_RUN_ENTITY_ID"/>
		<input name="ROOT_ENTITY_ID"/>
		<input name="RESULT_ENTITY_NAME"/>
		
	    <!-- Create a sample result node, with nested result nodes for all the pipeline steps -->
	    <operation name="Create Sample Result Nodes" processor="org.janelia.it.jacs.compute.service.domain.node.CreateSeparationResultFileNodeService">
	        <output name="RESULT_FILE_NODE"/>
	        <output name="RESULT_FILE_NODE_ID"/>
	        <output name="SEPARATE_RESULT_FILE_NODE"/>
	    </operation>
        
	    <!-- Read from the model and export the data into parameters that will be used by the subsequent services -->
	    <operation name="Init Separation Parameters" processor="org.janelia.it.jacs.compute.service.domain.sample.InitSeparationParametersService">
			<input name="SAMPLE_ENTITY_ID"/>
            <input name="OBJECTIVE"/>
            <input name="PIPELINE_RUN_ENTITY_ID"/>
			<input name="ROOT_ENTITY_ID"/>
			<output name="INPUT_FILENAME"/>
			<output name="PREVIOUS_SEPARATION_ID"/>
			<output name="PREVIOUS_RESULT_FILENAME"/>
			<output name="ALIGNED_CONSOLIDATED_LABEL_FILEPATH"/>
            <output name="SIGNAL_CHANNELS"/>
            <output name="REFERENCE_CHANNEL"/>
		</operation>

        <sequence if="SIGNAL_CHANNELS is not empty">
            
    	    <!-- Run neuron separation on the stitched result -->
            <sequence name="Neuron Separation" waitForAsync="true">
    		    <operation name="Neuron Separation" processor="queue/gridSubmitAndWait">
    		        <input name="iservice" value="org.janelia.it.jacs.compute.service.neuronSeparator.NeuronSeparationPipelineGridService"/>
    				<input name="SEPARATE_RESULT_FILE_NODE"/>
    	    		<input name="RESULT_FILE_NODE" value="$V{SEPARATE_RESULT_FILE_NODE}"/>
    				<input name="INPUT_FILENAME"/>
    	            <input name="SIGNAL_CHANNELS"/>
    				<input name="REFERENCE_CHANNEL"/>
    				<input name="OBJECTIVE"/>
                    <input name="PREVIOUS_SEPARATION_ID"/>
    				<input name="PREVIOUS_RESULT_FILENAME"/>
                    <input name="ALIGNED_CONSOLIDATED_LABEL_FILEPATH"/>
    		    </operation>
            </sequence>
    		
    	    <!-- Load the separation results into the database -->
    		<operation name="Discover Neuron Separation Results" processor="org.janelia.it.jacs.compute.service.domain.discovery.SeparationDiscoveryService">
    			<input name="ROOT_FILE_NODE" value="$V{SEPARATE_RESULT_FILE_NODE}"/>
                <input name="RESULT_ENTITY_NAME"/>
                <input name="SAMPLE_ENTITY_ID"/>
                <input name="OBJECTIVE"/>
                <input name="PIPELINE_RUN_ENTITY_ID"/>
                <input name="ROOT_ENTITY_ID"/>
                <output name="RESULT_ENTITY_ID"/>
    	    </operation>
    	    
            <sequence if="ALIGNED_CONSOLIDATED_LABEL_FILEPATH is empty">
                <sequence if="PREVIOUS_SEPARATION_ID is not empty">
                
                    <!-- Migrate existing annotations if this is not a aligned separation -->
                    <operation name="Discover Neuron Separation Results" processor="org.janelia.it.jacs.compute.service.domain.sample.MigrateNeuronAnnotationsService">
                        <input name="SAMPLE_ENTITY_ID"/>
                        <input name="OBJECTIVE"/>
                        <input name="PIPELINE_RUN_ENTITY_ID"/>
                        <input name="SOURCE_SEPARATION_ID" value="$V{PREVIOUS_SEPARATION_ID}"/>
                        <input name="TARGET_SEPARATION_ID" value="$V{RESULT_ENTITY_ID}"/>
                    </operation>
                    
                </sequence>
            </sequence>
	    
        </sequence>
        
    </sequence>
    
</process>