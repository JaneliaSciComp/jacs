 <!-- 
      Process an objective sample using a Fiji macro.
 -->
 <process name="Fiji Macro Pipeline" processor="queue/samplePipelineLauncher" startEvent="pending">
	<sequence name="Main">

        <input name="SAMPLE_ENTITY_ID"/>
        <input name="PIPELINE_NAME"/>
        <input name="PIPELINE_PROCESS"/>
        <input name="MACRO_NAME"/>
        <input name="MACRO_CLASS"/>
        <input name="OBJECTIVE"/>
        
        <!-- Import variables from the task if any were not passed in as input parameters above -->
	    <operation name="Import Variables" processor="org.janelia.it.jacs.compute.service.common.InitVariablesFromTaskService">
            <input name="SAMPLE_ENTITY_ID"/>
            <input name="PIPELINE_NAME"/>
            <input name="PIPELINE_PROCESS"/>
            <input name="MACRO_NAME"/>
            <input name="OVERRIDE" value="false"/>
            <input name="TASK_PARAMETER_1" value="sample entity id"/>
            <input name="PROCESS_VARIABLE_1" value="SAMPLE_ENTITY_ID"/>
            <input name="TASK_PARAMETER_2" value="pipeline name"/>
            <input name="PROCESS_VARIABLE_2" value="PIPELINE_NAME"/>
            <input name="TASK_PARAMETER_3" value="pipeline process"/>
            <input name="PROCESS_VARIABLE_3" value="PIPELINE_PROCESS"/>
            <input name="TASK_PARAMETER_4" value="macro name"/>
            <input name="PROCESS_VARIABLE_4" value="MACRO_NAME"/>
            <input name="TASK_PARAMETER_5" value="macro class"/>
            <input name="PROCESS_VARIABLE_5" value="MACRO_CLASS"/>
            <input name="TASK_PARAMETER_6" value="objective"/>
            <input name="PROCESS_VARIABLE_6" value="OBJECTIVE"/>
	        <output name="SAMPLE_ENTITY_ID"/>
	        <output name="PIPELINE_NAME"/>
            <output name="PIPELINE_PROCESS"/>
	        <output name="MACRO_NAME"/>
            <output name="MACRO_CLASS"/>
            <output name="OBJECTIVE"/>
	    </operation>
        
        <!-- Make sure we're looking at the sub-sample we want -->
        <operation name="Ensure Sub-sample" processor="org.janelia.it.jacs.compute.service.entity.sample.EnsureObjectiveSampleService">
            <input name="SAMPLE_ENTITY_ID"/>
            <input name="OBJECTIVE"/>
            <output name="SAMPLE_ENTITY_ID"/>
        </operation>

        <!-- Set our status -->
        <operation name="Set Status" processor="org.janelia.it.jacs.compute.service.entity.sample.SetSampleStatusService">
            <input name="ENTITY_ID" value="$V{SAMPLE_ENTITY_ID}"/>
            <input name="STATUS" value="Processing"/>
        </operation>
        
        <!-- Create the pipeline run entity -->
        <operation name="Create Pipeline Run Entity" processor="org.janelia.it.jacs.compute.service.entity.sample.CreatePipelineRunEntityService">
            <input name="SAMPLE_ENTITY_ID"/>
            <input name="PIPELINE_NAME"/>
            <input name="PIPELINE_PROCESS"/>
            <output name="PIPELINE_RUN_ENTITY_ID"/>
        </operation>
        
        <!-- Create a result node -->
        <operation name="Create Result Node" processor="org.janelia.it.jacs.compute.service.entity.CreateNamedResultFileNodeService">
            <input name="NAME" value="Normalization"/>
            <input name="OUTPUT_VAR_NAME" value="NORM_FILE_NODE"/>
            <output name="NORM_FILE_NODE"/>
            <output name="NORM_FILE_NODE_ID"/>
        </operation>
       
        <!-- Run the Fiji macro and save the results -->
        <sequence name="Wait Async" waitForAsync="true">
            <operation name="Run Fiji Macro" processor="queue/gridSubmitAndWait">
                <input name="iservice" value="$V{MACRO_CLASS}"/>
                <input name="ARCHIVE_FLAG" value="true"/>
                <input name="RESULT_FILE_NODE" value="$V{NORM_FILE_NODE}"/>
                <input name="PIPELINE_RUN_ENTITY_ID"/>
                <input name="SAMPLE_ENTITY_ID"/>
                <input name="MACRO_NAME"/>
            </operation>
        </sequence>
        
        <!-- Move all generated files to archive -->
        <include name="Move sample to archive" process="SyncSampleToArchive">
            <input name="SAMPLE_ENTITY_ID"/>
        </include>
        
        <!-- Set our status -->
        <operation name="Set Status" processor="org.janelia.it.jacs.compute.service.entity.sample.SetSampleStatusService">
            <input name="ENTITY_ID" value="$V{SAMPLE_ENTITY_ID}"/>
            <input name="STATUS" value="Complete"/>
        </operation>
        
	    <exceptionHandler>
	    
            <!-- Set our status -->
            <operation name="Set Status" processor="org.janelia.it.jacs.compute.service.entity.sample.SetSampleStatusService">
                <input name="ENTITY_ID" value="$V{SAMPLE_ENTITY_ID}"/>
                <input name="STATUS" value="Error"/>
            </operation>
            
		    <!-- Log the exception into the Pipeline Run -->
			<operation name="Handle exceptions" processor="org.janelia.it.jacs.compute.service.entity.sample.CreateErrorEntityService">
				<input name="ROOT_ENTITY_ID" value="$V{PIPELINE_RUN_ENTITY_ID}"/>
				<input name="PROCESSING_EXCEPTION"/>
		    </operation>
		
	    </exceptionHandler>
	    
    </sequence>
    
</process>