<?xml version="1.0"?>
<!--
  ~ Copyright (c) 2010-2011, J. Craig Venter Institute, Inc.
  ~
  ~ This file is part of JCVI VICS.
  ~
  ~ JCVI VICS is free software; you can redistribute it and/or modify it
  ~ under the terms and conditions of the Artistic License 2.0.  For
  ~ details, see the full text of the license in the file LICENSE.txt.  No
  ~ other rights are granted.  Any and all third party software rights to
  ~ remain with the original developer.
  ~
  ~ JCVI VICS is distributed in the hope that it will be useful in
  ~ bioinformatics applications, but it is provided "AS IS" and WITHOUT
  ~ ANY EXPRESS OR IMPLIED WARRANTIES including but not limited to
  ~ implied warranties of merchantability or fitness for any particular
  ~ purpose.  For details, see the full text of the license in the file
  ~ LICENSE.txt.
  ~
  ~ You should have received a copy of the Artistic License 2.0 along with
  ~ JCVI VICS.  If not, the license can be obtained from
  ~ "http://www.perlfoundation.org/artistic_license_2_0."
  -->

<project name="shared" default="build">

    <!-- Import all the generic module targets -->
    <import file="../buildprocess/build-module.xml"/>

    <!-- jaxb stuff -->
    <property name="schema.home" value="schema"/>
    <property name="jaxb.src.dir" value="src"/>

    <!-- Set some generic properties.  Doing it in this target gives us access to all  -->
    <!-- props in the generic set-common-properties -->
    <target name="set-common-properties" depends="build-module-init.set-common-properties">
        <property name="model.module" value="${basedir}/../model" />
        <property name="jar.name" value="jacs-shared.jar"/>
        <property name="build.unzipped.dir" value="${build.jars.dir}/unzipped"/>
        <property name="grid.jar.name" value="jacs-grid.jar"/>
        <property name="h265-support.jar.name" value="h265-support.jar"/>
        <property name="indexer.jar.name" value="lucene-indexer.jar"/>
        <property name="util.jar.name" value="jacs-util.jar"/>
        <property name="common.module" value="${basedir}/../common"/>
        <property name="shared.testfiles.root" value="${basedir}/../"/>

        <path id="compile.classpath.additional">  <!-- Add jars (not in ${lib.dir}) required for compiling src -->
            <!-- Add additional jars (i.e. not found in ${lib.dir}) that we require for compiling src -->
            <fileset dir="${basedir}/lib/" includes="**/*.jar"/>
            <fileset dir="${model.module}/build/jars" includes="jacs-model.jar"/>
            <fileset dir="${basedir}/../common/GWT-Serializable/" includes="**/*.jar" />
            <pathelement location="${common.module}/JBoss-Server-4.2.3.GA/log4j.jar"/>
            <pathelement location="${common.module}/JBoss-Server-4.2.3.GA/mail.jar"/>
            <pathelement location="${common.module}/Lucene-2.3.1/lucene-core-2.3.1.jar"/>
            <!--<fileset dir="${common.module}/JAXB/" includes="*.jar"/>-->
            <fileset dir="${common.module}/JAXB-2.1.5/" includes="*.jar"/>
            <fileset dir="${common.module}/javacpp-presets-bin/" includes="*.jar"/>
            <fileset dir="${common.module}/JHDF/" includes=""/>
            <fileset dir="${common.module}/Apache-Commons/" includes="*.jar"/>
            <fileset dir="${common.module}/Guava/" includes="*.jar"/>
            <fileset dir="${common.module}/Logging/" includes="*.jar"/>
            <fileset dir="${common.module}/jama-1.0.1/" includes="*.jar"/>
            <fileset dir="${common.module}/Xuggler/" includes="*.jar"/>
            <fileset dir="${common.module}/LOCI/" includes="*.jar"/>
            <fileset dir="${common.module}/Solrj/" includes="*.jar"/>
            <fileset dir="${common.module}/JodaTime/" includes="*.jar"/>
            <fileset dir="${common.module}/Reflections" includes="*.jar"/>
            <pathelement location="${common.module}/Spring/dom4j-1.6.1.jar"/>
            <fileset dir="${common.dir}/Hibernate-3.2" includes="hibernate3.jar"/>
        </path>

        <!-- additional classes needed to compile and/or run tests -->
        <path id="test.classpath.additional">
            <pathelement path="${model.module}/build/test/classes"/> <!-- shared test classes -->
        </path>

    </target>

    <target name="clean-blastxmlparser-jaxb" if="blastxmlparser.jaxb.exists">
       <delete includeemptydirs="true" verbose="true" failonerror="false">
          <fileset dir="${jaxb.src.dir}/org/janelia/it/jacs/shared/blastxmlparser/jaxb" includes="**"/>
        </delete>
    </target>

    <target name="clean-migs-jaxb" if="migs.jaxb.exists">
        <delete includeemptydirs="true" verbose="true" failonerror="false">
          <fileset dir="${jaxb.src.dir}/org/janelia/it/jacs/shared/migs/jaxb" includes="**"/>
        </delete>
    </target>

    <target name="clean-gcdml-jaxb" if="gcdml.jaxb.exists">
       <delete includeemptydirs="true" verbose="true" failonerror="false">
          <fileset dir="${jaxb.src.dir}/org/janelia/it/jacs/shared/gcdml/jaxb" includes="**"/>
        </delete>
    </target>

    <target name="clean" depends="build-module-clean.clean" description="cleans build artifacts from this module" >
		<available property="blastxmlparser.jaxb.exists" value="true" file="${jaxb.src.dir}/org/janelia/it/jacs/shared/blastxmlparser/jaxb" type="dir"/>
		<available property="migs.jaxb.exists" value="true" file="${jaxb.src.dir}/org/janelia/it/jacs/shared/migs/jaxb" type="dir"/>
		<available property="gcdml.jaxb.exists" value="true" file="${jaxb.src.dir}/org/janelia/it/jacs/shared/gcdml/jaxb" type="dir"/>
        <antcall target="clean-blastxmlparser-jaxb"/>
        <antcall target="clean-migs-jaxb"/>
        <antcall target="clean-gcdml-jaxb"/>
    </target>
    
    <!-- Define the set of targets that should be run to completely build this module. -->
	<target name="build" depends="setup,jaxb-code-generate,shared-jar,jar-grid-code,jar-gcdml-code" />

    <target name="jaxb-code-generate" depends="setup">
        <xjc schema="${schema.home}/blast.xsd" destdir="${jaxb.src.dir}" package="org.janelia.it.jacs.shared.blast.blastxmlparser.jaxb">
           <produces dir="${jaxb.src.dir}/org/janelia/it/jacs/shared/blast/blastxmlparser/jaxb" />
        </xjc>
        <!--<xjc schema="${schema.home}/migs.xsd" destdir="${jaxb.src.dir}" package="org.janelia.it.jacs.shared.migs.jaxb">-->
           <!--<produces dir="${jaxb.src.dir}/org/janelia/it/jacs/shared/migs/jaxb" />-->
        <!--</xjc>-->
        <!--<xjc schema="${schema.home}/gcdml-20071130/gcdml.xsd"-->
             <!--destdir="${jaxb.src.dir}"-->
             <!--package="org.janelia.it.jacs.shared.gcdml.jaxb"-->
             <!--extension="true"-->
             <!--binding="${schema.home}/gcdml-20071130/gcdml.xjb">-->
           <!--<produces dir="${jaxb.src.dir}/org/janelia/it/jacs/shared/gcdml/jaxb" />-->
        <!--</xjc>-->
    </target>

    <target name="jar-grid-code">
        <delete file="${build.jars.dir}/${grid.jar.name}" />
        <!-- unjar dependencies -->
        <mkdir dir="${build.unzipped.dir}" />
        <unjar src="${common.dir}/Lucene-2.3.1/lucene-core-2.3.1.jar" dest="${build.unzipped.dir}" overwrite="true"/>
        <unjar src="${common.dir}/Spring/log4j-1.2.14.jar" dest="${build.unzipped.dir}" overwrite="true"/>
        <unjar src="${common.dir}/JAXB-2.1.5/jaxb-api.jar" dest="${build.unzipped.dir}" overwrite="true"/>
        <unjar src="${common.dir}/JAXB-2.1.5/jaxb1-impl.jar" dest="${build.unzipped.dir}" overwrite="true"/>
        <unjar src="${common.module}/GWT-Serializable/gwt-serializable.jar" dest="${build.unzipped.dir}" overwrite="true"/>
        <!-- jaxb-impl.jar must be after jaxb1-impl.jar as it contains more center classes-->
        <unjar src="${common.dir}/JAXB-2.1.5/jaxb-impl.jar" dest="${build.unzipped.dir}" overwrite="true"/>
        <unjar src="${model.module}/build/jars/jacs-model.jar" dest="${build.unzipped.dir}" overwrite="true"/>
        <copy file="${basedir}/../shared/conf/jacs.properties" todir="${build.unzipped.dir}" overwrite="true" />

        <jar destfile="${build.jars.dir}/${grid.jar.name}">
            <fileset dir="${build.classes.dir}">
              <include name="org/janelia/it/jacs/shared/blast/**"/>
              <include name="org/janelia/it/jacs/shared/processors/**"/>
              <include name="org/janelia/it/jacs/shared/utils/**"/>
              <include name="org/janelia/it/jacs/shared/lucene/**"/>
            </fileset>
            <fileset dir="${build.unzipped.dir}">
              <include name="com/**"/>
              <include name="javax/**"/>
              <include name="jp/**"/>
              <include name="org/**"/>
              <include  name="jacs.properties"/>
            </fileset>
        </jar>
        <!-- delete temp files -->
        <delete dir="${build.unzipped.dir}"/>
    </target>

    <target name="jar-h265-plugin-code" depends="set-common-properties">
        <property name="temp.java6" value="../build-java6" />
        <delete file="${build.jars.dir}/${h265-support.jar.name}" />
        <!-- unjar dependencies -->
        <!--  Maybe these are needed intact.  Also, no Mac version here.
        <mkdir dir="${build.unzipped.dir}" />
        <unjar src="${common.dir}/ffmpeg-linux-x86.jar" dest="${build.unzipped.dir}" overwrite="true"/>
        <unjar src="${common.dir}/ffmpeg-linux-x86_64.jar" dest="${build.unzipped.dir}" overwrite="true"/>
        <unjar src="${common.dir}/ffmpeg-windows-x86.jar" dest="${build.unzipped.dir}" overwrite="true"/>
        <unjar src="${common.dir}/ffmpeg-windows-x86_64.jar" dest="${build.unzipped.dir}" overwrite="true"/>
        -->
        <copy file="${basedir}/../shared/conf/jacs.properties" todir="${build.unzipped.dir}" overwrite="true" />

        <!-- The plugin-receiver, Fiji, requires Java6 only. -->        
        <delete dir="${temp.java6}"/>
        <mkdir dir="${temp.java6}"/>
        
        <javac source="1.6" 
               target="1.6"
               srcdir="${jaxb.src.dir}" 
               destdir="${temp.java6}" 
               includes="org/janelia/it/jacs/shared/ffmpeg/**/*.java" 
               classpathref="compile.classpath.additional">
        </javac>

        <jar destfile="${build.jars.dir}/${h265-support.jar.name}">
            <fileset dir="${temp.java6}">
                <include name="org/janelia/it/jacs/shared/ffmpeg/**"/>
            </fileset>
            <fileset dir="${build.unzipped.dir}">
                <include name="com/**"/>
                <include name="javax/**"/>
                <include name="jp/**"/>
                <include name="org/**"/>
            </fileset>
        </jar>
        <!-- delete temp files -->
        <delete dir="${temp.java6}"/>
    </target>

    <target name="shared-jar" depends="compile, make-jars-dir">
        <delete file="${build.jars.dir}/${jar.name}" />
        <!-- unjar dependencies -->
        <mkdir dir="${build.unzipped.dir}" />
        <unjar src="lib/jai_codec.jar" dest="${build.unzipped.dir}" overwrite="true"/>
        <unjar src="lib/jai_core.jar" dest="${build.unzipped.dir}" overwrite="true"/>

        <jar destfile="${build.jars.dir}/${jar.name}" >
            <fileset dir="${basedir}/../shared/build/classes">
                <include name="**/*.class"/>
                <include name="**/Shared.gwt.xml"/>
                <exclude name="**/util-conf/log4j.properties"/>
            </fileset>
            <fileset dir="${build.unzipped.dir}">
                <include name="**"/>
            </fileset>
            <!-- Java source files needed for GWT compilation -->
            <fileset dir="${basedir}/../shared/src">
                <include name="**/*.java"/>
            </fileset>
        </jar>
        <!-- delete temp files -->
        <delete dir="${build.unzipped.dir}"/>
    </target>

    <!--<target name="jar-util-code" depends="compile">-->
        <!--<delete file="${build.jars.dir}/${util.jar.name}" />-->
        <!-- unjar dependencies -->
        <!--<mkdir dir="${build.unzipped.dir}" />-->
        <!--<unjar src="${common.dir}/Spring/log4j-1.2.14.jar" dest="${build.unzipped.dir}" overwrite="true"/>-->
        <!--<unjar src="${common.dir}/Hibernate-3.2/hibernate3.jar" dest="${build.unzipped.dir}" overwrite="true"/>-->
        <!--<unjar src="${model.module}/build/jars/jacs-model.jar" dest="${build.unzipped.dir}" overwrite="true"/>-->
        <!--<copy file="/conf/jacs.properties" todir="${build.unzipped.dir}" overwrite="true" />-->
        <!--<copy file="${basedir}/../shared/util-conf/log4j.properties" todir="${build.unzipped.dir}" overwrite="true" />-->

        <!--<jar destfile="${build.jars.dir}/${util.jar.name}">-->
            <!--<fileset dir="${build.classes.dir}">-->
              <!--<include name="org/janelia/it/jacs/shared/utils/**"/>-->
            <!--</fileset>-->
            <!--<fileset dir="${build.unzipped.dir}">-->
              <!--<include name="com/**"/>-->
              <!--<include name="javax/**"/>-->
              <!--<include name="jp/**"/>-->
              <!--<include name="org/**"/>-->
              <!--<include  name="*.properties"/>-->
            <!--</fileset>-->
        <!--</jar>-->
        <!-- delete temp files -->
        <!--<delete dir="${build.unzipped.dir}"/>-->
    <!--</target>-->


    <target name="buildMinusGridJar" depends="setup,jaxb-code-generate,jar"/>

    <target name="jar-gcdml-code">
        <delete file="${build.jars.dir}/gcdml-shared.jar" />
        <jar destfile="${build.jars.dir}/gcdml-shared.jar">
            <fileset dir="${build.classes.dir}">
              <include name="org/janelia/it/jacs/shared/gcdml/**"/>
            </fileset>
            <fileset dir="${basedir}/../shared/conf">
                <include name="jacs.properties"/>
            </fileset>
        </jar>
    </target>

</project>
